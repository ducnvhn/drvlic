{"version":3,"sources":["context/AuthenticationContext.tsx","Utils/ProtectedRoute.tsx","components/common/HangBang.tsx","components/Home/Main/LandingPage/CreateStudentDrawer/CreateStudentForm.tsx","components/Home/Main/LandingPage/CreateStudentDrawer/index.tsx","components/common/StudentStatus.tsx","components/Home/Main/LandingPage/StudentList/index.tsx","components/Home/Main/LandingPage/CreateStudentDrawer/FilterModal.tsx","components/common/LoadingCenter.tsx","components/Home/Main/Modals/ReportOneModal.tsx","components/common/ClientQueries.tsx","components/Home/Main/index.tsx","components/Home/SingleStudent/Modals/ReserveModal.tsx","components/Home/SingleStudent/Modals/ReportListModal.tsx","components/Home/SingleStudent/Modals/SwapModal.tsx","components/Home/SingleStudent/Header.tsx","components/Home/SingleStudent/StudentInfo/Basic.tsx","components/Home/SingleStudent/StudentInfo/Timeline.tsx","components/Home/SingleStudent/index.tsx","components/Home/ReportOnes/CreateReportModal.tsx","components/common/trangthai.tsx","components/Home/ReportOnes/ReportList/ReportList.tsx","components/Home/ReportOnes/Modals/FilterReportModal.tsx","components/common/utils.tsx","components/Home/ReportOnes/index.tsx","components/Home/SingleReportOne/AddStdModal.tsx","components/Home/SingleReportOne/FilterModal.tsx","components/Home/SingleReportOne/StudentsList.tsx","components/Home/SingleReportOne/index.tsx","components/Home/Profile/ChangePwdForm.tsx","components/Home/Profile/index.tsx","components/Home/UserMgt/MainComps/UsersList.tsx","components/Home/UserMgt/MainComps/CreateUserModal.tsx","components/Home/UserMgt/MainComps/FilterModal.tsx","components/Home/UserMgt/MainComps/Header.tsx","components/Home/UserMgt/index.tsx","components/Home/SingleUser/UserInfo.tsx","components/Home/SingleUser/ResetPwdModal.tsx","components/Home/SingleUser/index.tsx","components/Home/index.tsx","components/Login/LoginForm.tsx","components/Login/index.tsx","App.tsx","reportWebVitals.ts","Utils/ApolloClient.tsx","index.tsx"],"names":["roles","contextDefaultValue","authContext","createContext","AuthProvider","children","React","useState","user","setCurrentUser","Provider","value","setToken","token","localStorage","setItem","setUser","u","getUser","logout","getToken","getItem","useAuth","useContext","ProtectedRoute","rest","render","location","to","pathname","state","from","hangbang","Option","Select","UPLOAD_AVATAR","gql","fLayout","wrapperCol","span","labelCol","CreateStudentForm","createStudent","close","Form","useForm","form","imgList","setImgList","cmt1","setCmt1","cmt2","setCmt2","useMutation","uploadFile","creating","setCreating","onAvatarChange","key","file","newImgsList","fileList","onPreview","a","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","window","open","document","write","outerHTML","customUpload","field","onSuccess","variables","then","res","data","message","error","oldData","getFieldsValue","uploadAvatar","setFieldsValue","console","log","create","ngaysinh","moment","toDate","locale","viVN","Item","rules","required","name","label","format","placeholder","align","size","style","display","textAlign","modalTitle","aspect","customRequest","maxCount","listType","onChange","length","hidden","Object","keys","hangbangs","map","k","shape","loading","onClick","type","StudentDrawer","visible","onClose","width","title","status","StudentList","students","currentPage","setCurrentPage","pageSize","rowSelection","columns","dataIndex","text","record","textDecoration","trangthai","CheckCircleTwoTone","twoToneColor","parseFloat","randomId","_","baocao1","role","_id","baocao2","direction","flexGrow","rowKey","spinning","indicator","LoadingOutlined","fontSize","dataSource","pagination","rowClassName","total","page","showSizeChanger","current","showQuickJumper","grades","FilterModal","onCancel","filter","onOk","setFilter","onOkPress","onFinish","g","LoadinCenter","marginTop","ReportListModal","onMove","query","dataKey","useLazyQuery","fetchPolicy","loadReports","moving","toggleMoving","useEffect","load","moveStds","report","reports","renderItem","item","actions","stdCount","cursor","Meta","description","desc","LOAD_SINGLE_STD","REQUEST_CONFIRM_PAYMENT","CONFIRM_PAYMENT","REQUEST_WITHDRAW","CONFIRM_WITHDRAW","CANCEL_WITHDRAW_REQUEST","DELETE_STUDENT","MOVE_TO_R1","CANCEL_REQUEST_RESERV","CONFIRM_RESERVE_BC1","LOAD_A_REPORT","APPROVE_RESERV","APPROVE_R1","REMOVE_FROM_REPORT","LOAD_SINGLE_REPORT","MARK_COMPLETED","REQUEST_CONFIRM_P_2","CONFIRM_PAYMENT_TWO","REQUEST_RESERVE_RESULT","CANCEL_RESERVE_RESULT","CREATE_A_REPORT","CONFIRM_RESERVE_RESULT","REQUEST_RETURN_RESULT","CREATE_BREPORT","LOAD_B_REPORTS","LOAD_SINGLE_B_REPORT","MOVE_TO_R2","APPROVE_B_REPORT","REJECT_WD_FN","CONFIRM_WD_GD","REJECT_WD_GD","MARK_GRAD","MARK_FAIL","MARK_FOR_RETEST","RESERVE_RESULT","ADMIN_CONFIRM_RETURN","ADMIN_MARK_FINISH","ADMIN_MARK_REMOVE","ADMIN_MARK_FINAL_FAIL","TEACHER_REQUEST_CONFIRM_RETEST_FEE","ADM_CONFIRM_RETEST_FEE","T_REQUEST_SWAP","ADM_CONFIRM_SWAP","CREATE_STUDENT","LOAD_STUDENTS","TLandingPage","createDrw","toggleCreateDrw","refetchQueries","loadStudents","loadingStudents","onCompleted","exportFile","exportXLSX","exporting","filterModal","toggleFilterModal","reportModal","toggleReportModal","bc2Modal","toggleBC2Modal","moveR1","moveR2","requestConfirmP","confirmP","requestWD","cfWithdraw","requestConfirmP2","confirmP2","markComplete","requestReturnResult","rejectWDFN","acceptWDGD","rejectWDGD","markGrad","markFail","markforretest","reserveResult","admConfirmReturn","admMarkFinish","admMarkRemove","admMarkFinalFail","tRequestCRF","admCFRF","ten","mobile","selected","setSelected","working","toggleWorking","withdrawModal","toggleWDRModal","limit","createStd","student","notFilterEmpty","matchingKey","find","Boolean","selectedRowKeys","doActionWithConfirm","command","msg","Modal","confirm","content","okButtonProps","e","doAction","confirmFinalFail","reason","ws","XLSX","utils","json_to_sheet","std","StudentStatus","created","wb","book_new","book_append_sheet","writeFile","onExportClick","MenuOption","theme","icon","PlusOutlined","SubMenu","CaretLeftFilled","DollarOutlined","PoundOutlined","TransactionOutlined","RollbackOutlined","ReloadOutlined","OrderedListOutlined","UnorderedListOutlined","CheckOutlined","DeleteOutlined","CheckSquareOutlined","ExclamationOutlined","RetweetOutlined","CheckCircleOutlined","color","extras","DownloadOutlined","danger","FilterOutlined","trigger","overlay","EllipsisOutlined","extra","ReserveModal","rStatus","AvailableReportModal","LOAD_SWAP_STDS","SwapModal","requestSwp","loadingStd","onSwap","replacement","success","Header","moveToR1","deleteStudent","loadingReport","movetoR2","confirmAction","markFailed","reservModal","toggleReservModal","deleteModal","toggleDeleteModdal","r2Modal","toggleR2Modal","swapModal","toggleSwapModal","history","useHistory","confirmReserv","confirmDelete","confirmMoveToR1","confirmMoveR2","subTitle","items","push","disabled","DollarCircleOutlined","UsergroupAddOutlined","SwapOutlined","CalendarOutlined","CloseOutlined","DeleteTwoTone","CheckCircleFilled","ExclamationCircleOutlined","InfoCircleOutlined","createMenu","onBack","goBack","Title","Typography","BasicInfo","layout","level","quequan","anh34","redStatus","successStatus","pendingSts","StudentTimeline","mode","h","Icon","indexOf","RightCircleOutlined","ClockCircleOutlined","dot","date","SingleStudent","id","useParams","confirmModal","toggleConfirmModal","loadStd","requestConfirmPayment","loadAReports","loadAReport","loadingReports","cancelWithdraw","delStudent","mover1","cancelRequestResrv","confirmRequestResrv","confirmPaymentTwo","requestReserveResult","cancelReserveResult","confirmReserveResult","confirmWDGD","markForRetest","reservResult","confirmReturn","markFinish","markRemove","admMarkFFail","fnConfirmRF","admConfirmSwp","commands","action","modalContent","loadSingleStd","sm","md","Basic","CreateReportModal","toggleCreating","onCreate","trangthaibaocao","ReportList","trangthais","ReportFileterModal","hb","ReportOnes","createQuery","loadQuery","createReportOne","createMdl","toggleCreateMdl","reportData","setPage","createReport","reportKey","SEARCH_STUDENTS_4_BC1","AddStdModal","searchTimeout","searchStds","searchStd4bc1","adding","toggleAdding","onKeywordChange","clearTimeout","setTimeout","target","add","idx","s","concat","onStudentClick","MobileOutlined","IdcardOutlined","toggleLoading","changeFilter","StudentsList","removeStudents","addStudents","markComp","removeModal","toggleRemoveModal","addModal","toggleAddModal","__","index","t","remove","MinusOutlined","stds","SingleAttReport","loadReport","approveReport","addStd","removeStd","params","loadR","approveR","approving","markCompleted","addToR1","removeStds","update","Error","approve","column","createdBy","CHANGE_PWD","PasswordForm","changePwd","currentPwd","newPwd","confirmNewPwd","resetFields","Password","Profile","justify","xs","lg","UsersList","users","deleteUser","deleting","toggleDeleting","LockOutlined","_text","CreateUserModal","createU","createUser","SettingHeader","createModal","toggleCreateModal","userInput","isFilterEmpty","values","every","f","email","SearchOutlined","LOAD_USERS","CREATE_USER","DELETE_USER","UserMgt","loadUsers","loadUsersR","BasicInfor","ResetPwdModal","setPwd","password","confirmPassword","min","LOAD_USER","LOCK_USER","RESET_PWD","SingleUser","loadUser","disableUser","resetPwd","pwdModal","togglePwdModal","confirmLock","updatePwd","UnlockOutlined","KeyOutlined","UserInfo","Content","Layout","GET_USER","Home","me","menu","UserOutlined","LogoutOutlined","className","SnippetsOutlined","SolutionOutlined","SettingOutlined","path","exact","Main","LOGIN","LoginForm","login","onLogin","catch","err","htmlType","Login","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createUploadLink","require","uri","process","REACT_APP_PROD_API","authMiddleware","ApolloLink","operation","forward","setContext","headers","client","ApolloClient","cache","InMemoryCache","typePolicies","BasicPurchase","keyFields","PurchaseList","link","ReactDOM","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.d41602a4.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\r\n\r\nexport enum roles {OWNER = 'OWNER', AGENT='AGENT'}\r\n\r\nexport interface User {\r\n  email: string\r\n  expDate: String | null\r\n  name: String\r\n  profile: {\r\n    avatar: string\r\n  },\r\n  role: string\r\n  _id: string\r\n}\r\n\r\ntype TAuthContext = {\r\n  setUser:(user: User) => void,\r\n  getUser: () => User,\r\n  setToken: (token:string) => void,\r\n  logout: () => void,\r\n  getToken: () => string,\r\n  // setToken: \r\n}\r\n\r\nconst contextDefaultValue: TAuthContext = { } as TAuthContext\r\n\r\nconst authContext = createContext(contextDefaultValue)\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setCurrentUser] = React.useState({} as User)\r\n  const setToken = (token: string) => localStorage.setItem('ACCESS_TOKEN', token)\r\n  const getToken = () => localStorage.getItem('ACCESS_TOKEN') || ''\r\n  const setUser = (u: User) => setCurrentUser(u)\r\n  const getUser = () => user\r\n  const logout = () => localStorage.setItem('ACCESS_TOKEN', '')\r\n  return (\r\n    <authContext.Provider value={{ setToken, setUser, getUser, logout, getToken}}>\r\n      {children}\r\n    </authContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthProvider\r\nexport const useAuth = () => useContext(authContext)","import React from 'react'\r\nimport {\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport {\r\n  useAuth\r\n} from '../context/AuthenticationContext'\r\n\r\ninterface IProps {\r\n  path: string\r\n}\r\n\r\nconst ProtectedRoute: React.FC<IProps> = ({ children, ...rest }) => {\r\n  const { getToken } = useAuth()\r\n  const token = getToken()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        token && token!=='' ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","const hangbang = {\r\n    'A1': 'Lái xe moto, xe gắn máy dưới 175cm3',\r\n    'A2': 'Lái xe moto, xe gắn máy trên 175cm3',\r\n    'B1': 'Lái xe ô tô dưới 9 chỗ - không KD',\r\n    'B2': 'Lái xe ô to trên 9 chỗ - kinh doanh',\r\n    'C': 'Lái xe tải dưới xxx kg',\r\n    'D': 'Lái xe tải - trên xxx kg',\r\n    'E': 'Lái xe tải bự',\r\n    'F': 'Lái xe container, xe đầu kéo xxx',\r\n}\r\nexport default hangbang","import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Upload,\r\n    ConfigProvider,\r\n    Button,\r\n    Space,\r\n    message,\r\n    Select\r\n} from 'antd'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport {\r\n    gql,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport viVN from 'antd/lib/locale/vi_VN'\r\nimport moment from 'moment'\r\nimport hangbangs from '../../../../common/HangBang'\r\n\r\nconst {Option} = Select\r\n\r\nconst UPLOAD_AVATAR = gql`\r\n    mutation uploadAvatar($file: Upload!) {\r\n        uploadAvatar(file: $file) {\r\n            url\r\n        }\r\n    }\r\n`\r\n\r\nconst fLayout = {\r\n    wrapperCol: { span: 18 },\r\n    labelCol: { span: 6 }\r\n}\r\ninterface CTypes {\r\n    createStudent: (data: any) => void\r\n    close: () => void\r\n}\r\nconst CreateStudentForm: React.FC<CTypes> = ({\r\n    createStudent,\r\n    close\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [imgList, setImgList] = React.useState([])\r\n    const [cmt1, setCmt1] = React.useState([])\r\n    const [cmt2, setCmt2] = React.useState([])\r\n    const [uploadFile] = useMutation(UPLOAD_AVATAR)\r\n    const [creating, setCreating] = React.useState(false)\r\n    const onAvatarChange = (key: string, { file, fileList: newImgsList }: any) =>  {\r\n        if (key === 'anh34') {\r\n            setImgList(newImgsList)\r\n        }\r\n        if (key === 'cmt1') {\r\n            setCmt1(newImgsList)\r\n        }\r\n        if (key === 'cmt2') {\r\n            setCmt2(newImgsList)\r\n        }\r\n    }\r\n    const onPreview = async (file:any) => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow:any = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n    const customUpload = async (field:string, { file, onSuccess }: any) => {\r\n        await uploadFile({\r\n            variables: {\r\n                file\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res || !res.data) {\r\n                message.error('Không tải lên được hình ảnh')\r\n            }\r\n            // console.log(res)\r\n            const oldData = form.getFieldsValue()\r\n            oldData[field] = res.data.uploadAvatar.url\r\n            form.setFieldsValue(oldData)\r\n            console.log(oldData)\r\n        })\r\n        onSuccess('ok')\r\n    }\r\n    const create = async () => {\r\n        setCreating(true)\r\n        try {\r\n            const data = form.getFieldsValue()\r\n            console.log(data)\r\n            await createStudent({\r\n                ...data,\r\n                ngaysinh: moment(data.ngaysinh).toDate()\r\n            })\r\n        } catch (e) {\r\n            message.error('Đã có lỗi trong quá trình xử lý, vui lòng thử lại sau')\r\n        }\r\n        setCreating(false)\r\n        form.setFieldsValue({})\r\n        close()\r\n    }\r\n    return (\r\n        <ConfigProvider locale={viVN}>\r\n            <Form form={form} {...fLayout}>\r\n                <Form.Item rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Bắt buộc phải có\"\r\n                    }\r\n                ]} name=\"ten\" label=\"Họ và tên học viên\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"ngaysinh\" label=\"Ngày tháng năm sinh\" rules={[{required: true, message: \"Bắt buộc phải có\"}]}>\r\n                    <DatePicker\r\n                        format=\"DD/MM/YYYY\"\r\n                        placeholder=\"Chọn ngày tháng năm sinh\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name=\"quequan\" label=\"Quê Quán\" rules={[{ required: true, message: 'Trường bắt buộc' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Upload Ảnh\">\r\n                    <Space align=\"center\" size=\"large\">\r\n                        <div style={{ display: \"block\", textAlign: 'center'}}>\r\n                            <p>Ảnh thẻ 3x4</p>\r\n                            <ImgCrop\r\n                                modalTitle=\"căn chỉnh ảnh\"\r\n                                aspect={3 / 4}\r\n                            >\r\n                                <Upload\r\n                                    customRequest={(data) => customUpload('anh34', data)}\r\n                                    maxCount={1}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={imgList}\r\n                                    onChange={(data) => onAvatarChange('anh34', data)}\r\n                                    onPreview={onPreview}\r\n                                    >\r\n                                    {imgList.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </div>\r\n                        <div style={{ display: \"block\", textAlign: 'center'}}>\r\n                            <p>Ảnh mặt trước CMT</p>\r\n                            <ImgCrop\r\n                                modalTitle=\"căn chỉnh ảnh\"\r\n                                aspect={5 / 3}\r\n                                >\r\n                                <Upload\r\n                                    customRequest={(data) => customUpload('cmt1', data)}\r\n                                    maxCount={2}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={cmt1}\r\n                                    onChange={(data) => onAvatarChange('cmt1', data)}\r\n                                    onPreview={onPreview}\r\n                                    >\r\n                                    {cmt1.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </div>\r\n                        <div style={{ display: \"block\", textAlign: 'center'}}>\r\n                            <p>Ảnh mặt sau CMT</p>\r\n                            <ImgCrop\r\n                                modalTitle=\"căn chỉnh ảnh\"\r\n                                aspect={5 / 3}\r\n                            >\r\n                                <Upload\r\n                                    customRequest={(data) => customUpload('cmt2', data)}\r\n                                    maxCount={1}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={cmt2}\r\n                                    onChange={(data) => onAvatarChange('cmt2', data)}\r\n                                    onPreview={onPreview}\r\n                                >\r\n                                    {cmt2.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </div>\r\n                    </Space>\r\n                </Form.Item>\r\n                <Form.Item hidden name=\"anh34\" label=\"Ảnh 3 x 4\" rules={[{ required: true, message: 'Phải có một ảnh 3x4'}]} />\r\n                <Form.Item hidden name=\"cmt1\" label=\"Ảnh CMT/CCCD mặt trước\" rules={[{ required: true, message: 'Phải có một ảnh' }]} />\r\n                <Form.Item hidden name=\"cmt2\" label=\"Ảnh CMT/CCCD mặt sau\" rules={[{ required: true, message: 'Phải có một ảnh' }]} />\r\n                <Form.Item label=\"Hạng bằng lái\" name=\"hangbang\">\r\n                    <Select>\r\n                        {Object.keys(hangbangs).map(k => (\r\n                            <Option value={k} key={k}>{`${k} - ${hangbangs[k as keyof Object]}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"mobile\" label=\"Số Điện thoại\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Space>\r\n                    <Button shape=\"round\" loading={creating} onClick={() => create()} type=\"primary\">Tạo hồ sơ</Button>\r\n                    <Button shape=\"round\" onClick={() => close()}>Hủy</Button>\r\n                </Space>\r\n            </Form>\r\n        </ConfigProvider>\r\n    )\r\n}\r\nexport default CreateStudentForm","import React from 'react'\r\nimport {\r\n    Drawer,\r\n} from 'antd'\r\nimport CreateStudentForm from './CreateStudentForm'\r\n\r\n\r\ninterface CTypes {\r\n    visible: boolean\r\n    onClose: () => void\r\n    createStudent: (data: any) => void\r\n}\r\nconst StudentDrawer: React.FC<CTypes> = ({\r\n    visible,\r\n    onClose,\r\n    createStudent\r\n}) => {\r\n    return (\r\n        <Drawer\r\n            visible={visible}\r\n            onClose={onClose}\r\n            width=\"700\"\r\n            title=\"Tạo Hồ Sơ mới\"\r\n        >\r\n            <CreateStudentForm close={onClose} createStudent={createStudent} />\r\n        </Drawer>\r\n    )\r\n}\r\nexport default StudentDrawer\r\n","const status:Record<string,string> = {\r\n    'MOI_TAO': \"Hồ sơ mới\",\r\n    'CHO_XAC_NHAN_TT1': \"Chờ XNTT đợt 1\",\r\n    'CHO_VAO_BC_1': \"Chờ vào BC1\",\r\n    'DANG_TRONG_BC_1': \"Đã xếp vào BC1\",\r\n    // 'YEU_CAU_RUT_HS': \"Đang YC rút hồ sơ\",\r\n    'CHO_XN_HOAN_HUY_FN': \"Chờ kế toán XN rút HS\",\r\n    'CHO_XN_HOAN_HUY_GD': \"Chờ GD phê duyệt rút HS\",\r\n    'DA_RUT_HS': \"Đã rút HS\",\r\n    'DANG_YC_DOI_CHO': \"Đang yêu cầu đổi chỗ\",\r\n    'XAC_NHAN_BC_1': \"Đang học\",\r\n    // 'YEU_CAU_BAO_LUU_HOC':,\r\n    // 'DANG_BAO_LUU_HOC':,\r\n    'DA_HOC_XONG': \"Hoàn thành học\",\r\n    'DA_BO_HOC': \"Đã bỏ\",\r\n    'CHO_XAC_NHAN_TT2': \"Chờ XNTT đợt 2\",\r\n    'CHO_THI_TN': \"Chờ thi TN\",\r\n    'TRUOT_TN': 'Trượt Tốt nghiệp',\r\n    'CHO_VAO_BC_2': \"Chờ vào BC2\",\r\n    // 'YEU_CAU_BAO_LUU_THI':,\r\n    'DANG_BAO_LUU_THI': \"Đang bảo lưu\",\r\n    'DANG_YC_QUAY_LAI_THI': \"Đang yêu cầu quay lại thi\",\r\n    'DANG_TRONG_BC_2': \"Đang trong BC2\",\r\n    // 'XAC_NHAN_BC_2':,\r\n    'THI_TRUOT_LT': \"Thi trượt lý thuyết\",\r\n    'THI_TRUOT_SH': \"Thi trượt sa hình\",\r\n    'THI_TRUOT_DT': \"Thi trượt đường trường\",\r\n    'CHO_XNTT_TL_LT': 'Chờ XNTT thi lại lý thuyết',\r\n    'CHO_XNTT_TL_SH': 'Chờ XNTT thi lại sa hình',\r\n    'CHO_XNTT_TL_DT': 'Chờ XNTT thi lại đường trường',\r\n    'HOAN_THANH': \"Đã hoàn thành\"\r\n}\r\nexport default status","import React from 'react'\r\nimport moment from 'moment'\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Space\r\n} from 'antd'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\nimport {\r\n    LoadingOutlined,\r\n    CheckCircleTwoTone \r\n} from '@ant-design/icons';\r\nimport './style.css'\r\nimport status from '../../../../common/StudentStatus'\r\nimport {\r\n    useAuth\r\n} from '../../../../../context/AuthenticationContext'\r\n\r\ninterface cType {\r\n    students: {\r\n        students:any[]\r\n        total: number\r\n    }\r\n    loading: boolean\r\n    currentPage: number\r\n    pageSize: number\r\n    setCurrentPage: (page: number) => void\r\n    rowSelection: {\r\n        onChange: (keys: any) => void\r\n        selectedRowKeys: string[]\r\n    }\r\n}\r\n\r\nconst StudentList:React.FC<cType> = ({\r\n    students,\r\n    loading,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    rowSelection\r\n}) => {\r\n    // const [selected, setSelected] = React.useState<string[]>([])\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const columns = [\r\n        {\r\n            title: 'Mã hồ sơ',\r\n            dataIndex: 'randomId',\r\n            render: (text:string, record: any) => {\r\n                return (\r\n                    <Space style={{ textDecoration: record.trangthai === 'DA_RUT_HS' ? 'line-through': 'none'}}>\r\n                        {record.trangthai === 'HOAN_THANH' && <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> }\r\n                        {text}\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Ngày tạo',\r\n            dataIndex: 'created',\r\n            render: (text: string) => <span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: ['ten'],\r\n            render: (text: string, record: any) =><Link to={`/std/${record.randomId}`}>{text}</Link>\r\n        },\r\n        {\r\n            title: 'Ngày sinh',\r\n            dataIndex: 'ngaysinh',\r\n            render: (text: string) => {\r\n                return (<span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'Số Điện thoại',\r\n            dataIndex: 'mobile'\r\n        },\r\n        {\r\n            title: 'Hạng bằng lái',\r\n            dataIndex: 'hangbang'\r\n        },\r\n        {\r\n            title: 'Trạng Thái',\r\n            dataIndex: 'trangthai',\r\n            render: (text: string) => {\r\n                \r\n                return <span>{status[text as keyof Object]}</span>\r\n            }\r\n        },\r\n        {\r\n            title: 'Báo cáo 1',\r\n            render: (_: string, record: any) => {\r\n                if (record.baocao1) {\r\n                    if (user.role === 'TEACHER') {\r\n                        return <span>{record.baocao1.name}</span>\r\n                    } else {\r\n                        return (<Link to={`/rp1/${record.baocao1._id}`}>{record.baocao1.name}</Link>)\r\n\r\n                    }\r\n                }\r\n                return (<span>----</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'Báo cáo 2',\r\n            render: (_: string, record: any) => {\r\n                if (record.baocao2) {\r\n                    if (user.role === 'TEACHER') {\r\n                        return <span>{record.baocao1.name}</span>\r\n                    }\r\n                    if (user.role === 'MANAGER' || user.role === 'ADMIN') {\r\n                        return (<Link to={`/rp1/${record.baocao2._id}`}>{record.baocao2.name}</Link>)\r\n                    }\r\n                }\r\n                return (<span>----</span>)\r\n            }\r\n        }\r\n    ]\r\n    // const rowSelection = {\r\n    //     onChange: (keys: any) => setSelected(keys),\r\n    //     selectedRowKeys: selected\r\n    // }\r\n    return (\r\n        <div style={{display: 'flex'}}>\r\n            <Space direction=\"vertical\" size=\"large\" style={{flexGrow: 1}}>\r\n                <Table\r\n                    rowKey=\"_id\"\r\n                    loading={{\r\n                        spinning: loading,\r\n                        indicator: <LoadingOutlined style={{fontSize: 24}} />\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={students.students}\r\n                    pagination={false}\r\n                    rowClassName={(record:any) => {\r\n                        if (record.trangthai === 'DA_RUT_HS') {\r\n                            return 'disabledStudent'\r\n                        }\r\n                        if (record.trangthai === 'DA_BO_HOC') {\r\n                            return 'disabledStudent'\r\n                        }\r\n                        return ''\r\n                    }}\r\n                    rowSelection={rowSelection}\r\n                />\r\n                {students.total > pageSize && (\r\n                    <Pagination\r\n                        onChange={(page) => setCurrentPage(page)}\r\n                        showSizeChanger={false}\r\n                        current={currentPage}\r\n                        total={students.total}\r\n                        pageSize={pageSize}\r\n                        size=\"small\"\r\n                        showQuickJumper={false}\r\n                    />\r\n                )}\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\nexport default StudentList","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\nimport status from '../../../../common/StudentStatus'\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void,\r\n    filter: Record<string,any>\r\n    setFilter: (filter: Record<string,any>) => void\r\n}\r\n\r\n\r\nconst grades = [\r\n    'A1',\r\n    'A2',\r\n    'B1',\r\n    'B2',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F'\r\n]\r\n\r\nconst FilterModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    filter,\r\n    setFilter\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    form.setFieldsValue(filter)\r\n\r\n    const onOkPress = () => {\r\n        setFilter({\r\n            ...form.getFieldsValue()\r\n        })\r\n        onCancel()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Lọc hồ sơ\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onOkPress}\r\n        >\r\n            <Form form={form} onFinish={onOkPress} labelCol={{ span: 6 }} wrapperCol={{span: 18}} >\r\n                <Form.Item label=\"Mã hồ sơ\" name=\"randomId\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"ten\" label=\"Tên học viên\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"mobile\" label=\"Số điện thoại\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"hangbang\" label=\"Hạng bằng lái\">\r\n                    <Select>\r\n                        {grades.map(g=> (\r\n                            <Select.Option key={g} value={g}>{g}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"trangthai\" label=\"Trạng thái hồ sơ\">\r\n                    <Select>\r\n                        {Object.keys(status).map((state) => (\r\n                            <Select.Option key={state} value={state}>{status[state]}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default FilterModal","import React from 'react'\r\nimport {\r\n    Spin\r\n} from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst LoadinCenter = () => {\r\n    return (\r\n        <div style={{\r\n            textAlign: 'center',\r\n            marginTop: '5em'\r\n        }}>\r\n            <Spin\r\n                indicator={(\r\n                    <LoadingOutlined style={{fontSize: 24}} />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default LoadinCenter\r\n","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List\r\n} from 'antd'\r\nimport {\r\n    // gql,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../../common/LoadingCenter'\r\n\r\n// const LOAD_A_REPORT = gql`\r\n//     query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n//         loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n//             reports {\r\n//                 _id\r\n//                 hangbang\r\n//                 name\r\n//                 desc\r\n//                 status\r\n//                 createdBy {\r\n//                     name\r\n//                 },\r\n//                 stdCount\r\n//                 created\r\n//             }\r\n//             total\r\n//         }\r\n//     }\r\n// `\r\n\r\ntype ModalType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void,\r\n    onMove: (report: string) => void\r\n    query: any\r\n    dataKey: string\r\n}\r\n\r\nconst ReportListModal:React.FC<ModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    onMove,\r\n    query,\r\n    dataKey\r\n}) => {\r\n    const [loadReports, { loading, data }] = useLazyQuery(query,{fetchPolicy: 'network-only'})\r\n    const [moving, toggleMoving] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadReports({\r\n                variables: {\r\n                    filter: {\r\n                        status: 'PENDING',\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if (visible) {\r\n            load()\r\n        }\r\n    }, [visible, loadReports])\r\n\r\n    const moveStds = async (report: string) => {\r\n        toggleMoving(true)\r\n        await onMove(report)\r\n        toggleMoving(false)\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onOk}\r\n            title=\"Chọn báo cáo\"\r\n        >\r\n            {(loading || moving) && (\r\n                <LoadinCenter />\r\n            )}\r\n            {data && data[dataKey as keyof Object] && (\r\n                <List\r\n                    dataSource={data[dataKey as keyof Object].reports}\r\n                    renderItem={(item: any) => (\r\n                        <List.Item\r\n                            onClick={() => moveStds(item._id)}\r\n                            actions={[\r\n                                <strong>{item.stdCount}</strong>\r\n                            ]}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={item.name}\r\n                                description={item.desc}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\nexport default ReportListModal","import {\r\n    gql\r\n} from '@apollo/client'\r\n\r\nexport const LOAD_SINGLE_STD = gql`\r\n    query loadSingle($id: String!) {\r\n        loadSingleStd(id: $id) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            history {\r\n                state\r\n                date\r\n                reason\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            baocao2 {\r\n                name\r\n                _id\r\n            }\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const REQUEST_CONFIRM_PAYMENT = gql`\r\n    mutation requestConfirmPayment($students: [String]!) {\r\n        requestConfirmPayment (students: $students) {\r\n           randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CONFIRM_PAYMENT = gql`\r\n    mutation confirmPayment($students: [String]!) {\r\n        confirmPayment (students: $students) {\r\n           randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const REQUEST_WITHDRAW = gql`\r\n    mutation requestWithdraw($students: [String]!) {\r\n        requestWithdraw(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CONFIRM_WITHDRAW = gql`\r\n    mutation confirmWithdraw($students: [String]!) {\r\n        confirmWithdraw(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CANCEL_WITHDRAW_REQUEST = gql`\r\n    mutation cancelWithDraw($students: [String]!) {\r\n        cancelWithDraw(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const DELETE_STUDENT = gql`\r\n    mutation deleteStudent($student: String!) {\r\n        deleteStudent(student: $student)\r\n    }\r\n`\r\nexport const MOVE_TO_R1 = gql`\r\n    mutation moveToR1($students: [String], $report: String!) {\r\n        moveToR1(students: $students, report: $report)\r\n    }\r\n`\r\nexport const REQUEST_RESERVE = gql`\r\n    mutation requestResrv($students: [String]!) {\r\n        requestResrv (students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CANCEL_REQUEST_RESERV = gql`\r\n    mutation cancelRequestResrv($students: [String]!) {\r\n        cancelRequestResrv(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CONFIRM_RESERVE_BC1 = gql`\r\n    mutation confirmReserveBC1($students: [String]!) {\r\n        confirmReserveBC1(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const REQUEST_TO_RETURN = gql`\r\n    mutation requestToReturn($students: [String]!) {\r\n        requestToReturn(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const LOAD_A_REPORT = gql`\r\n    query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n        loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n            reports {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                },\r\n                stdCount\r\n                created\r\n            }\r\n            total\r\n        }\r\n    }\r\n`\r\nexport const APPROVE_RESERV = gql`\r\n    mutation confirmWithdraw($students: [String]!) {\r\n        confirmWithdraw(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const APPROVE_R1 = gql`\r\n    mutation approveReport($report: String!) {\r\n        approveReport(report: $report)\r\n    }\r\n`\r\nexport const REMOVE_FROM_REPORT = gql`\r\n    mutation removeFromAttReport($students: [String], $report: String!) {\r\n        removeFromAttReport(students: $students, report: $report)\r\n    }\r\n`\r\n\r\nexport const LOAD_SINGLE_REPORT = gql`\r\n    query loadSingleAttReport($report: String!, $filter: FilterInput) {\r\n        loadSingleAttReport(report: $report, filter: $filter) {\r\n            report {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n            }\r\n            students {\r\n                _id\r\n                randomId\r\n                ten\r\n                ngaysinh\r\n                hangbang\r\n                mobile\r\n                trangthai\r\n                # baoluu\r\n                baocao1 {\r\n                    name\r\n                    _id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const MARK_COMPLETED = gql `\r\n    mutation markCompleted($students: [String]!) {\r\n        markCompleted(students: $students)\r\n    }\r\n`\r\n\r\nexport const REQUEST_CONFIRM_P_2 = gql `\r\n    mutation requestConfirmPaymentTwo($students: [String]!) {\r\n        requestConfirmPaymentTwo(students: $students)\r\n    }\r\n`\r\n\r\nexport const CONFIRM_PAYMENT_TWO = gql `\r\n    mutation confirmPaymentTwo($students: [String]!) {\r\n        confirmPaymentTwo(students: $students)\r\n    }\r\n`\r\n\r\nexport const REQUEST_RESERVE_RESULT = gql `\r\n    mutation requestReserveResult($students: [String]!) {\r\n        requestReserveResult(students: $students)\r\n    }\r\n`\r\nexport const CANCEL_RESERVE_RESULT = gql `\r\n    mutation cancelReserveResult($students: [String]!) {\r\n        cancelReserveResult(students: $students)\r\n    }\r\n`\r\nexport const CREATE_A_REPORT = gql`\r\n    mutation createAReport($report: ReportOneInput) {\r\n        createAReport(report: $report) {\r\n            _id\r\n            hangbang\r\n            name\r\n            desc\r\n            status\r\n            created\r\n            createdBy {\r\n                name\r\n            },\r\n            stdCount\r\n        }\r\n    }\r\n`\r\n// const LOAD_A_REPORT = gql`\r\n//     query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n//         loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n//             reports {\r\n//                 _id\r\n//                 hangbang\r\n//                 name\r\n//                 desc\r\n//                 status\r\n//                 createdBy {\r\n//                     name\r\n//                 },\r\n//                 stdCount\r\n//                 created\r\n//             }\r\n//             total\r\n//         }\r\n//     }\r\n// `\r\n\r\nexport const CONFIRM_RESERVE_RESULT = gql `\r\n    mutation confirmReserveResult($students: [String]!) {\r\n        confirmReserveResult(students: $students )\r\n    }\r\n`\r\n\r\nexport const REQUEST_RETURN_RESULT = gql `\r\n    mutation requestReturnResult($students: [String]!) {\r\n        requestReturnResult(students: $students )\r\n    }\r\n`\r\nexport const CREATE_BREPORT = gql `\r\n    mutation createBreport($report: ReportOneInput!) {\r\n        createBreport(report: $report) {\r\n            _id\r\n            hangbang\r\n            name\r\n            desc\r\n            status\r\n            createdBy {\r\n                name\r\n            }\r\n            created\r\n            stdCount\r\n            approveDate\r\n        }\r\n    }\r\n`\r\nexport const LOAD_B_REPORTS = gql `\r\n    query loadBreports($filter: ReportFilter, $page: Int, $limit: Int) {\r\n        loadBreports(filter: $filter, page: $page, limit: $limit) {\r\n            reports {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n                stdCount\r\n                approveDate\r\n            }\r\n            total\r\n        }\r\n    }\r\n`\r\nexport const LOAD_SINGLE_B_REPORT = gql `\r\n    query loadSingleBReport($report: String! $filter: FilterInput) {\r\n        loadSingleBReport(report: $report, filter: $filter) {\r\n             report {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n            }\r\n            students {\r\n                _id\r\n                randomId\r\n                ten\r\n                ngaysinh\r\n                hangbang\r\n                mobile\r\n                trangthai\r\n                # baoluu\r\n                baocao1 {\r\n                    name\r\n                    _id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const MOVE_TO_R2 = gql`\r\n    mutation moveToR2($students: [String], $report: String!) {\r\n        moveToR2(students: $students, report: $report)\r\n    }\r\n`\r\nexport const APPROVE_B_REPORT = gql `\r\n    mutation approveBReport($report: String!) {\r\n        approveBReport(report: $report) {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n                stdCount\r\n                approveDate\r\n            }\r\n        }\r\n`\r\nexport const REJECT_WD_FN = gql `\r\n    mutation rejectWithdrawFN($students: [String]!) {\r\n        rejectWithdrawFN(students: $students)\r\n    }\r\n`\r\nexport const CONFIRM_WD_GD = gql `\r\n    mutation confirmWithdrawGD($students: [String]!) {\r\n        confirmWithdrawGD(students: $students)\r\n    }\r\n`\r\nexport const REJECT_WD_GD = gql `\r\n    mutation rejectWithdrawGD($students: [String]!) {\r\n        rejectWithdrawGD(students: $students)\r\n    }\r\n`\r\nexport const MARK_GRAD = gql `\r\n    mutation markGrad($students: [String]!) {\r\n        markGrad(students: $students)\r\n    }\r\n`\r\nexport const MARK_FAIL = gql `\r\n    mutation markFail($students: [String]!) {\r\n        markFail(students: $students)\r\n    }\r\n`\r\nexport const MARK_FOR_RETEST = gql `\r\n    mutation markForReTest($students: [String]!) {\r\n        markForReTest(students: $students)\r\n    }\r\n`\r\nexport const RESERVE_RESULT = gql `\r\n    mutation adminReserveResult($students: [String]!) {\r\n        adminReserveResult(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_CONFIRM_RETURN = gql `\r\n    mutation adminConfirmReturn($students: [String]!) {\r\n        adminConfirmReturn(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_MARK_FINISH = gql `\r\n    mutation adminMarkFinish($students: [String]!) {\r\n        adminMarkFinish(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_MARK_REMOVE = gql `\r\n    mutation adminMarkRemove($students: [String]!) {\r\n        adminMarkRemove(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_MARK_FINAL_FAIL = gql `\r\n    mutation adminMarkFinalFail($students: [String]!, $reason: String!) {\r\n        adminMarkFinalFail(students: $students, reason: $reason)\r\n    }\r\n`\r\nexport const TEACHER_REQUEST_CONFIRM_RETEST_FEE = gql`\r\n    mutation requestConfirmRetestPayment($students: [String]!) {\r\n        requestConfirmRetestPayment(students: $students)\r\n    }\r\n`\r\n\r\nexport const ADM_CONFIRM_RETEST_FEE = gql `\r\n    mutation adminConfirmRetestFee($students: [String]!) {\r\n        adminConfirmRetestFee(students: $students)\r\n    }\r\n`\r\nexport const T_REQUEST_SWAP = gql `\r\n    mutation requestSwap($student: String!, $replacement: String!) {\r\n        requestSwap(student: $student, replacement: $replacement) {\r\n            _id\r\n            randomId\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            hangbang\r\n            mobile\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            ycdc {\r\n                ten\r\n                randomId\r\n            }\r\n            baoluu {\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n            }\r\n            baocao2 {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ADM_CONFIRM_SWAP = gql `\r\n    mutation adminConfirmSwap($students: [String]!) {\r\n        adminConfirmSwap(students: $students) {\r\n            _id\r\n            randomId\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            hangbang\r\n            mobile\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            ycdc {\r\n                ten\r\n                randomId\r\n            }\r\n            baoluu {\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n            }\r\n            baocao2 {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport {\r\n    Button,\r\n    PageHeader,\r\n    Tooltip,\r\n    Menu,\r\n    Dropdown,\r\n    message,\r\n    Modal\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useLazyQuery,\r\n} from '@apollo/client'\r\nimport {\r\n    CaretLeftFilled,\r\n    CheckCircleOutlined,\r\n    CheckOutlined,\r\n    CheckSquareOutlined,\r\n    DeleteOutlined,\r\n    DollarOutlined,\r\n    DownloadOutlined,\r\n    EllipsisOutlined,\r\n    ExclamationOutlined,\r\n    FilterOutlined,\r\n    OrderedListOutlined,\r\n    PlusOutlined,\r\n    PoundOutlined,\r\n    ReloadOutlined,\r\n    RetweetOutlined,\r\n    RollbackOutlined,\r\n    TransactionOutlined,\r\n    UnorderedListOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\nimport StudentDrawer from './LandingPage/CreateStudentDrawer'\r\nimport StudentList from './LandingPage/StudentList'\r\nimport FilterModal from './LandingPage/CreateStudentDrawer/FilterModal'\r\nimport ReportModal from './Modals/ReportOneModal'\r\nimport XLSX from 'xlsx'\r\nimport {\r\n    REQUEST_CONFIRM_PAYMENT,\r\n    CONFIRM_PAYMENT,\r\n    REQUEST_WITHDRAW,\r\n    CONFIRM_WITHDRAW,\r\n    LOAD_A_REPORT,\r\n    MOVE_TO_R1,\r\n    REQUEST_CONFIRM_P_2,\r\n    CONFIRM_PAYMENT_TWO,\r\n    MARK_COMPLETED,\r\n    REQUEST_RETURN_RESULT,\r\n    REJECT_WD_FN,\r\n    CONFIRM_WD_GD,\r\n    REJECT_WD_GD,\r\n    MARK_GRAD,\r\n    MARK_FAIL,\r\n    MARK_FOR_RETEST,\r\n    LOAD_B_REPORTS,\r\n    MOVE_TO_R2,\r\n    RESERVE_RESULT,\r\n    ADMIN_CONFIRM_RETURN,\r\n    ADMIN_MARK_FINISH,\r\n    ADMIN_MARK_REMOVE,\r\n    ADMIN_MARK_FINAL_FAIL,\r\n    TEACHER_REQUEST_CONFIRM_RETEST_FEE,\r\n    ADM_CONFIRM_RETEST_FEE\r\n} from '../../common/ClientQueries'\r\nimport moment from 'moment'\r\nimport StudentStatus from '../../common/StudentStatus'\r\n\r\nconst CREATE_STUDENT = gql`\r\n    mutation CreateStudentMutation($student: StudentInput!) {\r\n        createStudent(student: $student) {\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nconst LOAD_STUDENTS = gql`\r\n    query LoadStudents($filter: FilterInput, $page: Int, $limit: Int) {\r\n        loadStudents(filter: $filter, page: $page, limit: $limit) {\r\n            total\r\n            students {\r\n                _id\r\n                randomId\r\n                created\r\n                ten\r\n                ngaysinh\r\n                anh34\r\n                hangbang\r\n                quequan\r\n                cmt1\r\n                cmt2\r\n                bangcap\r\n                dondk\r\n                giaykhamSK\r\n                hopdongdaotao\r\n                trangthai\r\n                mobile\r\n                baocao1 {\r\n                    name\r\n                    _id\r\n                }\r\n                baocao2 {\r\n                    name\r\n                    _id\r\n                }\r\n                baoluu {\r\n                    thoihan\r\n                    trangthai\r\n                }\r\n                kq1 {\r\n                    ngay\r\n                    lythuyet\r\n                    thuchanh\r\n                    duongtruong\r\n                }\r\n                kq2 {\r\n                    ngay\r\n                    lythuyet\r\n                    thuchanh\r\n                    duongtruong\r\n                }\r\n                createdBy\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst TLandingPage = () => {\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    console.log(user)\r\n    const pageSize=50\r\n    const [createDrw, toggleCreateDrw] = React.useState(false)\r\n    const [createStudent] = useMutation(CREATE_STUDENT, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [loadStudents, { loading: loadingStudents, data: students = { loadStudents: [] } }] = useLazyQuery(LOAD_STUDENTS, { fetchPolicy: 'network-only' })\r\n    const [exportXLSX, { loading: exporting }] = useLazyQuery(LOAD_STUDENTS, { fetchPolicy: 'network-only', onCompleted: (data: any) => {\r\n        const {loadStudents: { students}} = data\r\n        exportFile(students)\r\n    } })\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const [reportModal, toggleReportModal] = React.useState(false)\r\n    const [bc2Modal, toggleBC2Modal] = React.useState(false)\r\n    const [moveR1] = useMutation(MOVE_TO_R1, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [moveR2] = useMutation(MOVE_TO_R2, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [requestConfirmP] = useMutation(REQUEST_CONFIRM_PAYMENT, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [confirmP] = useMutation(CONFIRM_PAYMENT, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [requestWD] = useMutation(REQUEST_WITHDRAW, { refetchQueries: [LOAD_STUDENTS]})\r\n    // const [requestRSV] = useMutation(REQUEST_RESERVE, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [cfWithdraw] = useMutation(CONFIRM_WITHDRAW, { refetchQueries: [LOAD_STUDENTS]})\r\n    // const [cfReserv] = useMutation(CONFIRM_RESERVE_BC1, { refetchQueries: [LOAD_STUDENTS]})\r\n    // const [requestReturn] = useMutation(REQUEST_TO_RETURN, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [requestConfirmP2] = useMutation(REQUEST_CONFIRM_P_2, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [confirmP2] = useMutation(CONFIRM_PAYMENT_TWO, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [markComplete] = useMutation(MARK_COMPLETED, { refetchQueries: [LOAD_STUDENTS] })\r\n    // const [requestReserveResult] = useMutation(REQUEST_RESERVE_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    // const [confirmReserveResult] = useMutation(CONFIRM_RESERVE_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [requestReturnResult] = useMutation(REQUEST_RETURN_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [rejectWDFN] = useMutation(REJECT_WD_FN, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [acceptWDGD] = useMutation(CONFIRM_WD_GD, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [rejectWDGD] = useMutation(REJECT_WD_GD, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [markGrad] = useMutation(MARK_GRAD, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [markFail] = useMutation(MARK_FAIL, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [markforretest] = useMutation(MARK_FOR_RETEST, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [reserveResult] = useMutation(RESERVE_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admConfirmReturn] = useMutation(ADMIN_CONFIRM_RETURN, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admMarkFinish] = useMutation(ADMIN_MARK_FINISH, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admMarkRemove] = useMutation(ADMIN_MARK_REMOVE, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admMarkFinalFail] = useMutation(ADMIN_MARK_FINAL_FAIL, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [tRequestCRF] = useMutation(TEACHER_REQUEST_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admCFRF] = useMutation(ADM_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_STUDENTS] })\r\n\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        ten: null,\r\n        mobile: null,\r\n        hangbang: null,\r\n        randomId: null,\r\n        trangthai: null\r\n    })\r\n    const [currentPage, setCurrentPage] = React.useState(1)\r\n    const [selected, setSelected] = React.useState<string[]>([])\r\n    const [working, toggleWorking] = React.useState(false)\r\n    const [withdrawModal, toggleWDRModal] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadStudents({\r\n                variables: {\r\n                    filter,\r\n                    page: currentPage,\r\n                    limit: pageSize\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadStudents, filter, currentPage])\r\n    \r\n    const createStd = async (student: any) => {\r\n        await createStudent({\r\n            variables: {\r\n                student\r\n            }\r\n        })\r\n            // .then(() => loadStudents())\r\n    }\r\n    \r\n    const notFilterEmpty = () => {\r\n        const matchingKey = Object.keys(filter).find(k => filter[k] !== null)\r\n        return Boolean(matchingKey)\r\n    }\r\n    // console.log(notFilterEmpty())\r\n    const onFilterClick = () => {\r\n        if (notFilterEmpty()) {\r\n            // console.log('filter is not empty')\r\n            setFilter({\r\n                ten: null,\r\n                mobile: null,\r\n                hangbang: null,\r\n                randomId: null,\r\n                trangthai: null\r\n            })\r\n            console.log(filter)\r\n        } else {\r\n            toggleFilterModal(!filterModal)\r\n        }\r\n    }\r\n\r\n    const rowSelection = {\r\n        onChange: (keys: any) => setSelected(keys),\r\n        selectedRowKeys: selected\r\n    }\r\n\r\n    const onMove = async (report: string, type: string) => {\r\n        if (type === 'BC1') {\r\n            await moveR1({\r\n                variables: {\r\n                    report,\r\n                    students: selected\r\n                }\r\n            })\r\n        } else {\r\n            await moveR2({\r\n                variables: {\r\n                    report,\r\n                    students: selected\r\n                }\r\n            })\r\n        }\r\n        setSelected([])\r\n    }\r\n\r\n    const doActionWithConfirm = async (command: any, modalTitle: string, msg:string) => {\r\n        if (!selected || selected.length === 0) {\r\n            message.error('Chọn hồ sơ muốn bảo lưu trước khi thực hiện thao tác')\r\n            return\r\n        }\r\n        try {\r\n            Modal.confirm({\r\n                visible: withdrawModal,\r\n                title: modalTitle,\r\n                content: msg,\r\n                onCancel: () => toggleWDRModal(false),\r\n                onOk: async () => {\r\n                    toggleWorking(true)\r\n                    await command({\r\n                        variables: {\r\n                            students: selected\r\n                        }\r\n                    })\r\n                    setSelected([])\r\n                    toggleWorking(false)\r\n                },\r\n                okButtonProps: {\r\n                    loading: working\r\n                }\r\n            })\r\n        } catch (e) {\r\n            message.error('Đã có lỗi xẩy ra trong quá trình thực hiện - vui lòng kiểm tra lại')\r\n        }\r\n    }\r\n\r\n    const doAction = async (command: any ) => {\r\n        if (!selected || selected.length === 0) {\r\n            message.error('Chọn hồ sơ trước khi thực hiện thao tác', 100)\r\n            return\r\n        }\r\n        try {\r\n            toggleWorking(true)\r\n            await command({\r\n                variables: {\r\n                    students: selected\r\n                }\r\n            })\r\n            setSelected([])\r\n            toggleWorking(false)\r\n        } catch (e) {\r\n            message.error('Đã có lỗi xẩy ra trong quá trình thực thi')\r\n        }\r\n    }\r\n\r\n    const confirmFinalFail = async (reason: string) => {\r\n        let content = 'Đánh dấu các hồ sơ đã chọn thi trượt'\r\n        switch (reason) {\r\n            case 'THI_TRUOT_LT':\r\n                content += ` lý thuyết?`\r\n                break;\r\n            case 'THI_TRUOT_SH':\r\n                content +=` Sa hình`\r\n                break;\r\n            case 'THI_TRUOT_DT':\r\n                content += ` Đường trường`\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        try {\r\n            Modal.confirm({\r\n                visible: withdrawModal,\r\n                onCancel: () => toggleWDRModal(false),\r\n                onOk: async () => {\r\n                    await admMarkFinalFail({\r\n                        variables: {\r\n                            students: selected,\r\n                            reason\r\n                        }\r\n                    })\r\n                    setSelected([])\r\n                },\r\n                title: 'Đánh dấu hồ sơ thi trượt',\r\n                content\r\n            })\r\n        } catch (e) {\r\n            message.error('Không thể thay đổi thông tin hồ sơ')\r\n        }\r\n    }\r\n\r\n    const exportFile = (data: any) => {\r\n        // console.log('exporting....')\r\n        const ws = XLSX.utils.json_to_sheet(data.map((std:Record<string,any>) => ({\r\n            'Mã Hồ sơ': std.randomId,\r\n            'Tên': std.ten,\r\n            'Ngày Sinh': moment(parseFloat(std.ngaysinh)).format('DD/MM/YYYY'),\r\n            'Hạng bằng lái': std.hangbang,\r\n            'Số điện thoại': std.mobile,\r\n            'Trạng thái hồ sơ': StudentStatus[std.trangthai],\r\n            'Ngày tạo hồ sơ': moment(parseFloat(std.created)).format('DD/MM/YYYY'),\r\n        })))\r\n        const wb = XLSX.utils.book_new()\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Danh sach')\r\n        XLSX.writeFile(wb, 'danhsach.xlsx')\r\n    }\r\n\r\n    const onExportClick = async () => {\r\n        await exportXLSX({\r\n            variables: {\r\n                filter,\r\n                page: 1,\r\n                limit: 10000\r\n            }\r\n        })\r\n    }\r\n    let MenuOption = (<Menu />)\r\n    if (user.role === 'TEACHER') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<PlusOutlined />} key=\"t1\" onClick={() => toggleCreateDrw(!createDrw)}>\r\n                    Thêm hồ sơ\r\n                </Menu.Item>\r\n                <Menu.SubMenu key=\"_bc\" icon={<CaretLeftFilled />} title=\"Yêu cầu xác nhận thanh toán\">\r\n                    <Menu.Item icon={<DollarOutlined />} key=\"t2\" onClick={() => doAction(requestConfirmP)}>\r\n                        Yêu cầu XNTT đợt 1\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<PoundOutlined />} key=\"t3\" onClick={() => doAction(requestConfirmP2)}>\r\n                        Yêu cầu XNTT đợt 2\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<TransactionOutlined />} key=\"t4\" onClick={() => doAction(tRequestCRF)}>\r\n                        Yêu cầu XNTT thi lại\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<RollbackOutlined />} key=\"t5\" onClick={() => doAction(requestWD)}>\r\n                    Yêu cầu rút hồ sơ\r\n                </Menu.Item>\r\n                <Menu.Item icon={<ReloadOutlined />} key=\"t6\" onClick={() => doAction(requestReturnResult)}>\r\n                    Yêu cầu quay lại thi\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n    if (user.role === 'TEACHER') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<PlusOutlined />} key=\"t1\" onClick={() => toggleCreateDrw(!createDrw)}>\r\n                    Thêm hồ sơ\r\n                </Menu.Item>\r\n                <Menu.SubMenu key=\"_bc\" icon={<CaretLeftFilled />} title=\"Yêu cầu xác nhận thanh toán\">\r\n                    <Menu.Item icon={<DollarOutlined />} key=\"t2\" onClick={() => doAction(requestConfirmP)}>\r\n                        Yêu cầu XNTT đợt 1\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<PoundOutlined />} key=\"t3\" onClick={() => doAction(requestConfirmP2)}>\r\n                        Yêu cầu XNTT đợt 2\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<TransactionOutlined />} key=\"t4\" onClick={() => doAction(tRequestCRF)}>\r\n                        Yêu cầu XNTT thi lại\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<RollbackOutlined />} key=\"t5\" onClick={() => doAction(requestWD)}>\r\n                    Yêu cầu rút hồ sơ\r\n                </Menu.Item>\r\n                <Menu.Item icon={<ReloadOutlined />} key=\"t6\" onClick={() => doAction(requestReturnResult)}>\r\n                    Yêu cầu quay lại thi\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n    if (user.role === 'ADMIN') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.SubMenu key=\"A1\" icon={<CaretLeftFilled />} title=\"Báo cáo \">\r\n                    <Menu.Item icon={<OrderedListOutlined />} key=\"_a2\" onClick={() => toggleReportModal(true)}>\r\n                        Chuyển báo cáo 1\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<UnorderedListOutlined />} key=\"_a3\" onClick={() => toggleBC2Modal(true)}>\r\n                        Chuyển báo cáo 2\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.SubMenu key=\"_course\" icon={<CaretLeftFilled />} title=\"Khóa học\">\r\n                    <Menu.Item icon={<CheckOutlined />} key=\"_a4\" onClick={() => doAction(markComplete)}>\r\n                        Đánh dấu hoàn thành khóa học\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<DeleteOutlined />} key=\"_a5\" onClick={() => doActionWithConfirm(admMarkRemove, 'Hủy Hồ sơ | bỏ học', 'Bạn có chắc muốn hủy các hồ sơ đã chọn?')}>\r\n                        Hủy hồ sơ / bỏ học\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<CheckSquareOutlined />} key=\"_a6\" onClick={() => doAction(markGrad)}>\r\n                        Đánh dấu Đã tốt nghiệp\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<ExclamationOutlined />} key=\"_a7\" onClick={() => doAction(markFail)}>\r\n                        Đánh dấu trượt TN\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<RetweetOutlined />} key=\"_a8\" onClick={() => doAction(markforretest)}>\r\n                        Vào danh sách thi lại TN\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item icon={<UnorderedListOutlined />} key=\"_a9\" onClick={() => doActionWithConfirm(reserveResult, 'Bảo lưu kết quả', 'Bạn có chắc muốn bảo lưu kết quả cho các hồ sơ đã chọn?')}>\r\n                        Bảo lưu kết quả\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<ReloadOutlined />} key=\"_a10\" onClick={() => doActionWithConfirm(admConfirmReturn, 'Xác nhận quay lại', 'Xác nhận cho các hồ sơ đang bảo lưu quay lại thi')}>\r\n                        Xác nhận quay lại thi\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.SubMenu key=\"_failed\" icon={<CaretLeftFilled />} title=\"Thi trượt\">\r\n                    <Menu.Item key=\"a11\" onClick={() => confirmFinalFail('THI_TRUOT_LT')}>Thi trượt lý thuyết</Menu.Item>\r\n                    <Menu.Item key=\"a12\" onClick={() => confirmFinalFail('THI_TRUOT_SH')}>Thi trượt Sa hình</Menu.Item>\r\n                    <Menu.Item key=\"a13\" onClick={() => confirmFinalFail('THI_TRUOT_DT')}>Thi trượt đường trường</Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<CheckCircleOutlined color=\"green\" />} key=\"_a14\" onClick={() => doActionWithConfirm(admMarkFinish, 'Xác nhận Hoàn thành', 'Xác nhận cho các hồ sơ đã chọn hoàn thành khóa học')}>\r\n                    Xác nhận Hoàn thành\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n        if (user.role === 'FINANCE') {\r\n            MenuOption = (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.SubMenu key=\"f1\" icon={<CaretLeftFilled />} title=\"Xác nhận thanh toán\">\r\n                        <Menu.Item icon={<DollarOutlined />} key=\"_f2\" onClick={() => doAction(confirmP)}>\r\n                            Xác nhận thanh toán đợt 1\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<PoundOutlined />} key=\"_f3\" onClick={() => doAction(confirmP2)}>\r\n                            Xác nhận thanh toán đợt 2\r\n                        </Menu.Item>\r\n                        <Menu.Item icon={<CheckCircleOutlined />} key=\"_f4\" onClick={() => doActionWithConfirm(admCFRF, 'Xác nhận Thanh toán', 'Xác nhận thanh toán thi lại cho hồ sơ thi trượt?')}>\r\n                            Xác nhận thanh toán thi lại\r\n                        </Menu.Item>\r\n                    </Menu.SubMenu>\r\n                    <Menu.Item icon={<CheckCircleOutlined />} key=\"_f5\" onClick={() => doAction(cfWithdraw)}>\r\n                        Chấp thuận rút HS\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<DeleteOutlined />} key=\"_f6\" onClick={() => doAction(rejectWDFN)}>\r\n                        Không chấp thuận rút HS\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )\r\n        }\r\n        if (user.role === 'MANAGER') {\r\n            MenuOption = (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<CheckCircleOutlined />} key=\"_m1\" onClick={() => doAction(acceptWDGD)}>\r\n                        Chấp thuận rút HS\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<DeleteOutlined />} key=\"_m2\" onClick={() => doAction(rejectWDGD)}>\r\n                        Không chấp thuận rút HS\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )\r\n        }\r\n\r\n\r\n    const extras = [\r\n        <Tooltip key=\"_exprt\" title=\"Tải xuống file Excel\">\r\n            <Button loading={exporting} shape=\"round\" type=\"text\" icon={<DownloadOutlined />} onClick={() => onExportClick()} />\r\n        </Tooltip>,\r\n        <Tooltip key=\"_filt\" title={notFilterEmpty() ? 'Bỏ bộ lọc' : 'Lọc hồ sơ'}>\r\n            <Button\r\n                danger={notFilterEmpty() || false}\r\n                onClick={() => onFilterClick()}\r\n                key=\"_Filter\"\r\n                shape=\"round\"\r\n                type=\"text\"\r\n                >\r\n                <FilterOutlined />\r\n                {/* {notFilterEmpty() ? 'Bỏ bộ lọc' : 'Lọc hồ sơ'} */}\r\n            </Button>\r\n        </Tooltip>,\r\n        <Tooltip title=\"Tải lại\" key=\"_reload\">\r\n            <Button type=\"text\" key=\"_reload\" onClick={() => loadStudents({ variables: { filter, page: currentPage, limit: pageSize } })} shape=\"round\">\r\n                <ReloadOutlined />\r\n            </Button>\r\n        </Tooltip>,\r\n        <Dropdown trigger={['click']} key=\"_options\" overlay={MenuOption}>\r\n            <Tooltip title=\"Chức năng\">\r\n                <Button type=\"primary\" icon={<EllipsisOutlined />} loading={working} />\r\n            </Tooltip>\r\n        </Dropdown>\r\n    ]\r\n    \r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title={`Danh sách hồ sơ`}\r\n                extra={extras}\r\n            />\r\n            <StudentList\r\n                rowSelection={rowSelection}\r\n                students={students.loadStudents}\r\n                loading={loadingStudents}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                pageSize={pageSize}\r\n            />\r\n            <div>\r\n                <StudentDrawer\r\n                    visible={createDrw}\r\n                    onClose={() => toggleCreateDrw(false)}\r\n                    createStudent={createStd}\r\n                />\r\n            </div>\r\n            <FilterModal\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                onOk={() => toggleFilterModal(false)}\r\n            />\r\n            <ReportModal\r\n                dataKey=\"loadAReport\"\r\n                query={LOAD_A_REPORT}\r\n                onMove={(report: string) => onMove(report, 'BC1')}\r\n                visible={reportModal}\r\n                onCancel={() => toggleReportModal(false)}\r\n                onOk={() => toggleReportModal(false)}\r\n                />\r\n            <ReportModal\r\n                dataKey=\"loadBreports\"\r\n                query={LOAD_B_REPORTS}\r\n                onMove={(report: string) => onMove(report, 'BC2')}\r\n                visible={bc2Modal}\r\n                onCancel={() => toggleBC2Modal(false)}\r\n                onOk={() => toggleBC2Modal(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TLandingPage","import React from 'react'\r\nimport {\r\n    Modal,\r\n} from 'antd'\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void\r\n}\r\n\r\nconst ReserveModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk\r\n}) => {\r\n    \r\n    return (\r\n        <Modal\r\n            title=\"Gửi yêu cầu rút hồ sơ?!\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onOk}\r\n        >\r\n            <p>\r\n                Gửi yêu cầu rút hồ sơ tới bộ phận đào tạo. Phòng đào tạo sẽ phê duyệt việc rút hồ sơ và hoàn tiền.\r\n                Bạn có thật sự muốn rút hồ sơ này?\r\n            </p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ReserveModal\r\n","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List\r\n} from 'antd'\r\nimport LoadinCenter from '../../../common/LoadingCenter'\r\n// import { report } from 'process'\r\nconst rStatus = {\r\n    'PENDING': 'Đang mở',\r\n    'APPROVED': \"Đã duyệt\"\r\n}\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (report: string) => void\r\n    reports?: Record<string,any>[] | []\r\n    loading: boolean\r\n}\r\n\r\nconst AvailableReportModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    reports = [],\r\n    loading\r\n}) => {\r\n    return (\r\n        <Modal\r\n            title=\"Chuyển hồ sơ vào báo cáo 1?\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => null}\r\n        >\r\n            {loading && (\r\n                <LoadinCenter />\r\n            )}\r\n            {reports?.length > 0 ? (\r\n                <List\r\n                    dataSource={reports}\r\n                    renderItem={(item) => (\r\n                        <List.Item key={item._id} style={{ cursor: 'pointer'}} onClick={() => onOk(item._id)}>\r\n                            <List.Item.Meta\r\n                                title={`${item.name} - (${item.hangbang})`}\r\n                                description={item.desc}\r\n                            />\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <p>\r\n                                    <strong>\r\n                                        {item.stdCount || 0}\r\n                                    </strong>\r\n                                </p>\r\n                                <p>\r\n                                    {rStatus[item.status as keyof Object]}\r\n                                </p>\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            ) : <span>Không tìm thấy báo cáo phù hợp</span>}\r\n        </Modal>\r\n    )\r\n}\r\nexport default AvailableReportModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport {\r\n    T_REQUEST_SWAP\r\n} from '../../../common/ClientQueries'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\n\r\nconst LOAD_SWAP_STDS = gql `\r\n    query loadStudents($filter: FilterInput) {\r\n        loadStudents(filter: $filter) {\r\n            students {\r\n                _id\r\n                ten\r\n                randomId\r\n                mobile\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void,\r\n    student: string\r\n}\r\n\r\nconst SwapModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    student\r\n}) => {\r\n    const [requestSwp, { loading }] = useMutation(T_REQUEST_SWAP)\r\n    const [loadStudents, { loading: loadingStd, data }] = useLazyQuery(LOAD_SWAP_STDS, { fetchPolicy: 'network-only'})\r\n    const [selected, setSelected] = React.useState('')\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadStudents({\r\n                variables: {\r\n                    filter: {\r\n                        trangthai: 'CHO_VAO_BC_1'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if (visible) {\r\n            load()\r\n        }\r\n    }, [loadStudents, visible])\r\n\r\n    const onSwap = async (replacement: string) => {\r\n        try {\r\n            await requestSwp({\r\n                variables: {\r\n                    student,\r\n                    replacement\r\n                }\r\n            })\r\n            message.success('Yêu cầu đổi chỗ thành công')\r\n            onCancel()\r\n        } catch (error) {\r\n            message.error('Không thể yêu cầu đổi chỗ, vui lòng kiểm tra lại thông tin')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Yêu cầu đổi chỗ\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => onSwap(selected)}\r\n            okButtonProps={{ loading }}\r\n        >\r\n            {loadingStd && <span>Loading....</span>}\r\n            {data && (\r\n                <List\r\n                    dataSource={data.loadStudents.students}\r\n                    renderItem={(item:any) => (\r\n                        <List.Item\r\n                            actions={selected === item._id ? [<CheckOutlined twoToneColor=\"blue\" />] : []}\r\n                            key={item._id}\r\n                            style={{ cursor: 'pointer'}}\r\n                            onClick={() => setSelected(item._id)}\r\n                        >\r\n                            <List.Item.Meta title={`${item.ten} - ${item.mobile}`} description={item.randomId} />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SwapModal","import React from 'react'\r\nimport {\r\n    PageHeader,\r\n    Button,\r\n    // Dropdown,\r\n    Menu,\r\n    Modal,\r\n    Dropdown\r\n} from 'antd'\r\nimport {\r\n    // EllipsisOutlined,\r\n    DollarCircleOutlined,\r\n    UsergroupAddOutlined,\r\n    CalendarOutlined,\r\n    DeleteOutlined,\r\n    CloseOutlined,\r\n    ExclamationCircleOutlined ,\r\n    // DollarOutlined,\r\n    EllipsisOutlined,\r\n    CheckOutlined,\r\n    CheckCircleFilled,\r\n    DeleteTwoTone,\r\n    // CalendarTwoTone,\r\n    ReloadOutlined,\r\n    OrderedListOutlined,\r\n    RetweetOutlined,\r\n    InfoCircleOutlined,\r\n    // CaretRightFilled,\r\n    CaretLeftFilled,\r\n    PoundOutlined,\r\n    SwapOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport ReserveModal from './Modals/ReserveModal'\r\nimport AvailableReportModal from './Modals/ReportListModal'\r\nimport Report2Modal from '../Main/Modals/ReportOneModal'\r\nimport SwapModal from './Modals/SwapModal'\r\nimport {\r\n    LOAD_B_REPORTS,\r\n    // ADM_CONFIRM_SWAP\r\n} from '../../common/ClientQueries'\r\n// import { Moment } from 'moment'\r\n\r\ntype CType = {\r\n    student: any\r\n    role: string\r\n    deleteStudent: (student: string) => void\r\n    moveToR1: (students: string[], report: string) => void\r\n    reports: Record<string,any>[] | []\r\n    loadingReport: boolean\r\n    doAction: (action: string, students: string[]) => void\r\n    movetoR2: (students: string[], report: string) => void\r\n    confirmAction: (action: string, students: string[], modalTitle: string, modalContent: string) => void\r\n    markFailed: (students: string[], reason: string) => void\r\n}\r\n\r\n\r\nconst Header:React.FC<CType> = ({\r\n    student,\r\n    role,\r\n    moveToR1,\r\n    deleteStudent,\r\n    reports,\r\n    loadingReport,\r\n    doAction,\r\n    movetoR2,\r\n    confirmAction,\r\n    markFailed\r\n}) => {\r\n    const [reportModal, toggleReportModal] = React.useState(false)\r\n    const [reservModal, toggleReservModal] = React.useState(false)\r\n    const [deleteModal, toggleDeleteModdal] = React.useState(false)\r\n    // const [rModal, toggleRModal] = React.useState(false)\r\n    // const [acceptRsvModal, toggleAcceptRsvModal] = React.useState(false)\r\n    const [r2Modal, toggleR2Modal] = React.useState(false)\r\n    const [swapModal, toggleSwapModal] = React.useState(false)\r\n\r\n    const history = useHistory()\r\n    const createMenu = () => {\r\n        const { trangthai, _id } = student\r\n        const items = []\r\n        // teacher actions\r\n        if (role === 'TEACHER') {\r\n            if (trangthai === 'MOI_TAO') {\r\n                items.push(<Menu.Item disabled={trangthai !== 'MOI_TAO'} key=\"T_1\" icon={<DollarCircleOutlined />} onClick={() => doAction('requestConfirmPayment',[_id])}>Yêu cầu XN thanh toán đợt 1</Menu.Item>)\r\n                // items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleReservModal(true)} icon={<UsergroupAddOutlined />}>Yêu cầu rút hồ sơ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_VAO_BC_1') {\r\n                items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleReservModal(true)} icon={<UsergroupAddOutlined />}>Yêu cầu rút hồ sơ</Menu.Item>)\r\n                // items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleReservModal(true)} icon={<UsergroupAddOutlined />}>Yêu cầu rút hồ sơ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_TRONG_BC_1') {\r\n                // items.push(<Menu.Item key=\"T_4\" onClick={() => confirmReservBC1([_id])} icon={<CalendarOutlined />}>Yêu cầu bảo lưu</Menu.Item>)\r\n                items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleSwapModal(true)} icon={<SwapOutlined />}>Yêu cầu đổi chỗ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XN_HOAN_HUY_FN') {\r\n                items.push(<Menu.Item key=\"T_3\" onClick={() => doAction('cancelWithdraw',[_id])} icon={<CalendarOutlined />}>Hủy yêu cầu rút hồ sơ</Menu.Item>)\r\n            }\r\n            // if (trangthai === 'XAC_NHAN_BC_1') {\r\n            //     items.push(<Menu.Item key=\"T_5\" onClick={() => doAction('requestConfirmP2',[_id])} icon={<DollarOutlined />}>Yêu cầu XN thanh toán đợt 2</Menu.Item>)\r\n            // }\r\n            \r\n            // if (trangthai === 'DANG_BAO_LUU_HOC') {\r\n            //     // items.push(<Menu.Item key=\"T_6\" onClick={() => doAction('requestReturn',[_id])} icon={<RollbackOutlined />}>Yêu cầu quay lại học</Menu.Item>)\r\n            // }\r\n            \r\n            if (trangthai === 'DA_HOC_XONG') {\r\n                items.push(<Menu.Item key=\"T_8\" onClick={() => doAction('requestConfirmP2',[_id])} icon={<CloseOutlined />}>Yêu cầu XNTT đợt 2</Menu.Item>)\r\n            }\r\n            // if (trangthai === 'DA_HOC_XONG' || trangthai === 'CHO_XAC_NHAN_TT2' || trangthai === 'CHO_VAO_BC_2') {\r\n            //     items.push(<Menu.Item key=\"T_9\" onClick={() => doAction('requestReserveResult', [_id])} icon={<CalendarOutlined />}>Yêu cầu bảo lưu thi</Menu.Item>)\r\n            // }\r\n            if (trangthai === 'YEU_CAU_BAO_LUU_THI') {\r\n                items.push(<Menu.Item key=\"T_9\" onClick={() => doAction('cancelReserveResult', [_id])} icon={<DeleteTwoTone />}>Hủy Yêu cầu bảo lưu thi</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_BAO_LUU_THI') {\r\n                items.push(<Menu.Item key=\"T_10\" onClick={() => doAction('requestReturnResult', [_id])} icon={<ReloadOutlined />}>Yêu cầu quay lại thi</Menu.Item>)\r\n            }\r\n            if (trangthai === 'THI_TRUOT_LT' || trangthai === 'THI_TRUOT_SH' || trangthai === 'THI_TRUOT_DT') {\r\n                items.push(<Menu.Item key=\"T_11\" onClick={() => doAction('tRequestCRF',[_id])} icon={<PoundOutlined />}>Yêu cầu XNTT thi lại</Menu.Item>)\r\n            }\r\n        }\r\n        // finance actions - \r\n        if (role === 'FINANCE') {\r\n            if (trangthai === 'CHO_XAC_NHAN_TT1') {\r\n                items.push(<Menu.Item key=\"F_confirmP1\" icon={<CheckOutlined />} onClick={() => doAction('confirmPayment',[_id])}>Xác nhận thanh toán đợt 1</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XAC_NHAN_TT2') {\r\n                items.push(<Menu.Item key=\"F_confirmP2\" icon={<CheckCircleFilled />} onClick={() => doAction('confirmPaymentTwo',[_id])}>Xác nhận thanh toán đợt 2</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XN_HOAN_HUY_FN') {\r\n                items.push(<Menu.Item key=\"F_acceptwd\" icon={<CheckCircleFilled />} onClick={() => doAction('confirmWithdraw',[_id])}>Chấp thuận rút HS</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_rjctwd\" onClick={() => doAction('rejectWDFN',[_id])}>Không Chấp thuận rút HS</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XNTT_TL_LT') {\r\n                items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => doAction('fnConfirmRF',[_id])}>Xác nhận phí thi lại lý thuyết</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XNTT_TL_SH') {\r\n                items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => doAction('fnConfirmRF',[_id])}>Xác nhận phí thi lại sa hình</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XNTT_TL_DT') {\r\n                items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => doAction('fnConfirmRF',[_id])}>Xác nhận phí thi lại đường trường</Menu.Item>)\r\n            }\r\n        }\r\n        // admin actions--\r\n        if (role === 'ADMIN') {\r\n            if (trangthai ==='CHO_VAO_BC_1') {\r\n                items.push(<Menu.Item key=\"A_priorJoin\" onClick={() => toggleReportModal(true)} icon={<UsergroupAddOutlined />}>Chuyển vào báo cáo 1</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DA_RUT_HS') {\r\n                items.push(<Menu.Item icon={<DeleteOutlined />} key=\"A_Daruths\" onClick={() => confirmDelete(_id)}>Xóa hồ sơ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_YC_DOI_CHO') {\r\n\r\n                items.push(<Menu.Item icon={<SwapOutlined />} key=\"A_SWP\" onClick={() => doAction('admConfirmSwp',[_id])}>Xác nhận đổi chỗ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'XAC_NHAN_BC_1') {\r\n                items.push(<Menu.Item icon={<CheckOutlined />} key=\"A_XNHX\" onClick={() => doAction('markCompleted',[_id])}>Đánh dấu hoàn thành học</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DA_HOC_XONG') {\r\n                items.push(<Menu.Item icon={<DeleteOutlined />} key=\"A_XNBL2\" onClick={() => confirmAction('markRemove', [_id], 'Huỷ hồ sơ / bỏ học', 'Bạn có chắc muốn hủy các hồ sơ đã chọn?')}>Hủy hồ sơ / bỏ học</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_THI_TN') {\r\n                items.push(<Menu.Item icon={<CheckOutlined />} key=\"A_5\" onClick={() => doAction('markGrad',[_id])}>Đánh dấu đã TN</Menu.Item>)\r\n                items.push(<Menu.Item icon={<ExclamationCircleOutlined />} key=\"A_6\" onClick={() => doAction('markFail',[_id])}>Đánh dấu TRƯỢT TN</Menu.Item>)\r\n            }\r\n            if (trangthai === 'TRUOT_TN') {\r\n                items.push(<Menu.Item icon={<RetweetOutlined />} key=\"A_9\" onClick={() => doAction('markForRetest',[_id])}>Vào danh sách thi lại TN</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_VAO_BC_2') {\r\n                items.push(<Menu.Item icon={<OrderedListOutlined />} key=\"A_7\" onClick={() => toggleR2Modal(true)}>Chuyển vào báo cáo 2</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_VAO_BC_2' || trangthai === 'DANG_TRONG_BC_2') {\r\n                items.push(<Menu.Item icon={<CalendarOutlined />} key=\"A_81\" onClick={() => confirmAction('reservResult',[_id], \"Bảo lưu kết quả?\", \"Bạn có muốn bảo lưu kết quả của hồ sơ này không?\")}>Bảo lưu kết quả</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_YC_QUAY_LAI_THI') {\r\n                items.push(<Menu.Item icon={<ReloadOutlined />} key=\"A_82\" onClick={() => confirmAction('confirmReturn',[_id], \"Quay lại thi\", \"Bạn có muốn cho hồ sơ này quay lại thi?\")}>Xác nhận quay lại thi</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_TRONG_BC_2') {\r\n                items.push(<Menu.Item icon={<InfoCircleOutlined />} key=\"A_8\" onClick={() => confirmAction('markFinish',[_id], \"Hoàn thành khóa học\", \"Bạn có muốn đánh dấu hồ sơ này đã hoàn thành khóa học?\")}>Hoàn thành khóa học</Menu.Item>)\r\n                items.push(\r\n                    <Menu.SubMenu key=\"_a10\" title=\"Thi trượt\" icon={<CaretLeftFilled />}>\r\n                        <Menu.Item key=\"_a101\" onClick={() => markFailed([_id], 'THI_TRUOT_LT')}>Thi trượt lý thuyết</Menu.Item>\r\n                        <Menu.Item key=\"_a102\" onClick={() => markFailed([_id], 'THI_TRUOT_SH')}>Thi trượt sa hình</Menu.Item>\r\n                        <Menu.Item key=\"_a103\" onClick={() => markFailed([_id], 'THI_TRUOT_DT')}>Thi trượt đường trường</Menu.Item>\r\n                    </Menu.SubMenu>\r\n                )\r\n            }\r\n        }\r\n        if (role === 'MANAGER') {\r\n            items.push(<Menu.Item icon={<CheckOutlined />} key=\"_gd1\" onClick={() => doAction('confirmWDGD',[_id])}>Chấp thuận rút HS</Menu.Item>)\r\n            items.push(<Menu.Item icon={<DeleteOutlined />} key=\"_gd2\" onClick={() => doAction('rejectWDGD',[_id])}>Không chấp thuận rút HS</Menu.Item>)\r\n        }\r\n        const menu = (\r\n            <Dropdown\r\n                trigger={['click']}\r\n                overlay={(\r\n                    <Menu theme=\"dark\">\r\n                        {items}\r\n                    </Menu>\r\n            )}>\r\n                <Button type=\"primary\" shape=\"round\">\r\n                    <EllipsisOutlined />\r\n                </Button>\r\n            </Dropdown>\r\n            \r\n        ) \r\n        return menu\r\n    }\r\n    const confirmReserv = async () => {\r\n        await doAction('requestWithdraw',[student._id])\r\n        // console.log(enddate.toDate())\r\n        toggleReservModal(false)\r\n    }\r\n\r\n    const confirmDelete = async (student: string) => {\r\n        Modal.confirm({\r\n            onCancel: () => toggleDeleteModdal(false),\r\n            visible: deleteModal,\r\n            onOk: async () => deleteStudent(student),\r\n            title: 'Bạn có thật sự muốn xóa hồ sơ này?',\r\n        })\r\n    }\r\n\r\n    const confirmMoveToR1 = async (report: string) => {\r\n        await moveToR1([student._id], report)\r\n        toggleReportModal(false)\r\n    }\r\n\r\n    const confirmMoveR2 = async (report: string) => {\r\n        await movetoR2([student._id], report)\r\n    }\r\n\r\n    // const confirmReservBC1 = async (students: string[]) => {\r\n    //     Modal.confirm({\r\n    //         visible: rModal,\r\n    //         onCancel: () => toggleRModal(false),\r\n    //         onOk: async () => {\r\n    //             await doAction('requestReserve',students)\r\n    //         },\r\n    //         title: 'Bạn có muốn bảo lưu hồ sơ này?'\r\n    //     })\r\n    // }\r\n\r\n    // const onConfirmRequestResrv = async (students: string[]) => {\r\n    //     Modal.confirm({\r\n    //         visible: acceptRsvModal,\r\n    //         onCancel: () => toggleAcceptRsvModal(false),\r\n    //         onOk: async () => doAction('confirmReserve',students),\r\n    //         title: \"Xác nhận yêu cầu bảo lưu học viên của giáo viên\"\r\n    //     })\r\n    // }\r\n    \r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Thông tin hồ sơ\"\r\n                subTitle={student.randomId}\r\n                extra={createMenu()}\r\n                onBack={() => history.goBack()}\r\n            />\r\n            <AvailableReportModal\r\n                loading={loadingReport}\r\n                reports={reports}\r\n                visible={reportModal}\r\n                onCancel={() => toggleReportModal(false)}\r\n                onOk={(report: string) => confirmMoveToR1(report)}\r\n            />\r\n            <ReserveModal\r\n                visible={reservModal}\r\n                onCancel={() => toggleReservModal(false)}\r\n                onOk={confirmReserv}\r\n            />\r\n            <Report2Modal\r\n                dataKey=\"loadBreports\"\r\n                query={LOAD_B_REPORTS}\r\n                onMove={(report: string) => confirmMoveR2(report)}\r\n                visible={r2Modal}\r\n                onCancel={() => toggleR2Modal(false)}\r\n                onOk={() => toggleR2Modal(false)}\r\n            />\r\n            <SwapModal\r\n                student={student._id}\r\n                visible={swapModal}\r\n                onCancel={() => toggleSwapModal(false)}\r\n                onOk={() => toggleSwapModal(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {\r\n    Typography,\r\n    Divider,\r\n    Descriptions,\r\n    // Button,\r\n    Image\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport status from '../../../common/StudentStatus'\r\n\r\nconst { Title } = Typography\r\n\r\ntype BasicInfoType = {\r\n    student: any,\r\n    role: string\r\n}\r\n\r\n\r\nconst BasicInfo:React.FC<BasicInfoType> = ({\r\n    student,\r\n    role,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Divider />\r\n            <Descriptions\r\n                layout=\"vertical\"\r\n                title={<Title level={4}>Thông tin cơ bản</Title>}\r\n            >\r\n                <Descriptions.Item label=\"Họ và tên\">\r\n                    <strong>\r\n                        {student.ten}\r\n                    </strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Ngày tháng năm sinh\">{moment(parseFloat(student.ngaysinh)).format('DD/MM/YYYY')}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Quê quán\">{student.quequan}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Số điện thoại\">{student.mobile}</Descriptions.Item>\r\n                <Descriptions.Item label=\"CMND\">\r\n                    <Image src={`http://localhost:5001/${student.anh34}`} />\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n            <Divider />\r\n            <Descriptions\r\n                layout=\"vertical\"\r\n                title={<Title level={4}>Thông tin đào tạo</Title>}\r\n            >\r\n                <Descriptions.Item label=\"Hạng bằng lái\">\r\n                    <strong>{student.hangbang}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Số điện thoại\">\r\n                    <strong>{student.mobile}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Trạng thái\">\r\n                {/* @ts-ignore */}\r\n                    <strong>{status[student.trangthai]}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Báo cáo 1\">\r\n                    <strong>{student.baocao1?.name || 'Không có thông tin'}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Báo cáo 2\">\r\n                    <strong>{student.baocao2?.name || 'Không có thông tin'}</strong>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\nexport default BasicInfo","import React from 'react'\r\nimport {\r\n    Space,\r\n    Timeline,\r\n    Typography\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport {\r\n    // ArrowRightOutlined,\r\n    CheckCircleOutlined,\r\n    // CheckCircleTwoTone,\r\n    ClockCircleOutlined,\r\n    // ClockCircleTwoTone,\r\n    ExclamationCircleOutlined,\r\n    // ExclamationCircleTwoTone,\r\n    RightCircleOutlined\r\n} from '@ant-design/icons'\r\n\r\nconst status = [\r\n    'MOI_TAO',\r\n    'DANG_TRONG_BC_1',\r\n    'DANG_YC_DOI_CHO',\r\n    'XAC_NHAN_BC_1',\r\n    'DANG_TRONG_BC_2',\r\n]\r\n\r\nconst redStatus = [\r\n    'TRUOT_TN',\r\n    'DA_RUT_HS',\r\n    'DA_BO_HOC',\r\n    'THI_TRUOT_LT',\r\n    'THI_TRUOT_SH',\r\n    'THI_TRUOT_DT',\r\n]\r\n\r\nconst successStatus = [\r\n    'DA_HOC_XONG',\r\n    'HOAN_THANH',\r\n    'CHO_VAO_BC_2',\r\n]\r\n\r\nconst pendingSts = [\r\n    'DANG_BAO_LUU_THI',\r\n    'DANG_YC_QUAY_LAI_THI',\r\n    'CHO_VAO_BC_1',\r\n    'CHO_XAC_NHAN_TT1',\r\n    'CHO_XN_HOAN_HUY_FN',\r\n    'CHO_XN_HOAN_HUY_GD',\r\n    'CHO_THI_TN',\r\n    'CHO_XAC_NHAN_TT2',\r\n    'CHO_XNTT_TL_LT',\r\n    'CHO_XNTT_TL_SH',\r\n    'CHO_XNTT_TL_DT',\r\n]\r\n\r\nconst { Title } = Typography\r\n\r\ntype Ctype = {\r\n    history: Record<string,any>[]\r\n}\r\n\r\nconst StudentTimeline:React.FC<Ctype> = ({\r\n    history\r\n}) => {\r\n    return (\r\n        <Space direction=\"vertical\" size=\"large\" style={{width: '100%', marginTop: '3em'}}>\r\n            <Title level={3} style={{ textAlign: 'center'}}>Lịch sử hồ sơ</Title>\r\n            <Timeline mode=\"left\">\r\n                {history.map(h => {\r\n                    let Icon\r\n                    if (successStatus.indexOf(h.state) >= 0) {\r\n                        Icon = <CheckCircleOutlined style={{color: 'green'}} />\r\n                    }\r\n                    if (status.indexOf(h.state) >= 0) {\r\n                        Icon = <RightCircleOutlined style={{color: 'green'}} />\r\n                    }\r\n                    if (redStatus.indexOf(h.state) >= 0) {\r\n                        Icon = <ExclamationCircleOutlined style={{color: 'red' }} />\r\n                    }\r\n                    if (pendingSts.indexOf(h.state) >= 0) {\r\n                        Icon = <ClockCircleOutlined style={{ color: 'darkmagenta'}} />\r\n                    }\r\n                    return (\r\n                        <Timeline.Item dot={Icon} key={h.date} label={moment(parseFloat(h.date)).format('DD/MM/YYYY')}>{h.reason}</Timeline.Item>\r\n                    )\r\n                })}\r\n            </Timeline>\r\n        </Space>\r\n    )\r\n}\r\nexport default StudentTimeline","import React from 'react'\r\nimport {\r\n    message,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    Alert\r\n} from 'antd'\r\nimport {\r\n    // gql,\r\n    useMutation,\r\n    useLazyQuery,\r\n    // ApolloError\r\n} from '@apollo/client'\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\nimport Header from './Header'\r\nimport BasicInfo from './StudentInfo/Basic'\r\nimport {\r\n    LOAD_A_REPORT,\r\n    LOAD_SINGLE_STD,\r\n    REQUEST_CONFIRM_PAYMENT,\r\n    CONFIRM_PAYMENT,\r\n    REQUEST_WITHDRAW,\r\n    APPROVE_RESERV,\r\n    REJECT_WD_FN,\r\n    CANCEL_WITHDRAW_REQUEST,\r\n    DELETE_STUDENT,\r\n    MOVE_TO_R1,\r\n    // REQUEST_RESERVE,\r\n    CANCEL_REQUEST_RESERV,\r\n    CONFIRM_RESERVE_BC1,\r\n    // REQUEST_TO_RETURN,\r\n    MARK_COMPLETED,\r\n    REQUEST_CONFIRM_P_2,\r\n    CONFIRM_PAYMENT_TWO,\r\n    REQUEST_RESERVE_RESULT,\r\n    CANCEL_RESERVE_RESULT,\r\n    CONFIRM_RESERVE_RESULT,\r\n    REQUEST_RETURN_RESULT,\r\n    CONFIRM_WD_GD,\r\n    REJECT_WD_GD,\r\n    MARK_GRAD,\r\n    MARK_FAIL,\r\n    MARK_FOR_RETEST,\r\n    MOVE_TO_R2,\r\n    RESERVE_RESULT,\r\n    ADMIN_CONFIRM_RETURN,\r\n    ADMIN_MARK_FINISH,\r\n    ADMIN_MARK_REMOVE,\r\n    ADMIN_MARK_FINAL_FAIL,\r\n    TEACHER_REQUEST_CONFIRM_RETEST_FEE,\r\n    ADM_CONFIRM_RETEST_FEE,\r\n    ADM_CONFIRM_SWAP\r\n} from '../../common/ClientQueries'\r\nimport StudentTimeline from './StudentInfo/Timeline'\r\n\r\n\r\ntype RouteParams = {\r\n    id: string\r\n}\r\n\r\nconst SingleStudent = () => {\r\n    const { id } = useParams<RouteParams>()\r\n    const history = useHistory()\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const [confirmModal, toggleConfirmModal] = React.useState(false)\r\n    const [loadStd, { loading, data, error}] = useLazyQuery(LOAD_SINGLE_STD)\r\n    const [requestConfirmPayment] = useMutation(REQUEST_CONFIRM_PAYMENT, { refetchQueries: [LOAD_SINGLE_STD]})\r\n    const [loadAReports, { data: reports = { loadAReport:[]}, loading: loadingReports }] = useLazyQuery(LOAD_A_REPORT)\r\n    // const [prioJoin] = useMutation(PRIORITY_JOIN)\r\n    // const [loadAroom, { data: availableRooms }] = useLazyQuery(LOAD_AVAILABLE_ROOM)\r\n    const [confirmP] = useMutation(CONFIRM_PAYMENT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestWD] = useMutation(REQUEST_WITHDRAW, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmReserv] = useMutation(APPROVE_RESERV, { refetchQueries: [LOAD_SINGLE_STD] }) // finance action - do not remove\r\n    const [cancelWithdraw] = useMutation(CANCEL_WITHDRAW_REQUEST, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [delStudent] = useMutation(DELETE_STUDENT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [mover1] = useMutation(MOVE_TO_R1, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    // const [requestResrv] = useMutation(REQUEST_RESERVE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [cancelRequestResrv] = useMutation(CANCEL_REQUEST_RESERV, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmRequestResrv] = useMutation(CONFIRM_RESERVE_BC1, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    // const [reqReturn] = useMutation(REQUEST_TO_RETURN, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markComplete] = useMutation(MARK_COMPLETED, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestConfirmP2] = useMutation(REQUEST_CONFIRM_P_2, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmPaymentTwo] = useMutation(CONFIRM_PAYMENT_TWO, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestReserveResult] = useMutation(REQUEST_RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [cancelReserveResult] = useMutation(CANCEL_RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmReserveResult] = useMutation(CONFIRM_RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestReturnResult] = useMutation(REQUEST_RETURN_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [rejectWDFN] = useMutation(REJECT_WD_FN, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmWDGD] = useMutation(CONFIRM_WD_GD, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [rejectWDGD] = useMutation(REJECT_WD_GD, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markGrad] = useMutation(MARK_GRAD, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markFail] = useMutation(MARK_FAIL, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markForRetest] = useMutation(MARK_FOR_RETEST, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [movetoR2] = useMutation(MOVE_TO_R2, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [reservResult] = useMutation(RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmReturn] = useMutation(ADMIN_CONFIRM_RETURN, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markFinish] = useMutation(ADMIN_MARK_FINISH, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markRemove] = useMutation(ADMIN_MARK_REMOVE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [admMarkFFail] = useMutation(ADMIN_MARK_FINAL_FAIL, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [tRequestCRF] = useMutation(TEACHER_REQUEST_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [fnConfirmRF] = useMutation(ADM_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [admConfirmSwp] = useMutation(ADM_CONFIRM_SWAP, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    \r\n    const commands:Record<string,any> = {\r\n        'requestConfirmPayment': requestConfirmPayment,\r\n        'confirmPayment': confirmP,\r\n        'requestWithdraw': requestWD,\r\n        'cancelWithdraw': cancelWithdraw,\r\n        'confirmWithdraw': confirmReserv,\r\n        // 'requestReserve': requestResrv,\r\n        'cancelReserve': cancelRequestResrv,\r\n        'confirmReserve': confirmRequestResrv,\r\n        // 'requestReturn': reqReturn,\r\n        'markCompleted': markComplete,\r\n        'requestConfirmP2': requestConfirmP2,\r\n        'confirmPaymentTwo': confirmPaymentTwo,\r\n        'requestReserveResult': requestReserveResult,\r\n        'cancelReserveResult': cancelReserveResult,\r\n        'confirmReserveResult': confirmReserveResult,\r\n        'requestReturnResult': requestReturnResult,\r\n        'rejectWDFN': rejectWDFN,\r\n        'confirmWDGD':confirmWDGD,\r\n        'rejectWDGD':rejectWDGD,\r\n        'markGrad':markGrad,\r\n        'markFail':markFail,\r\n        'markForRetest':markForRetest,\r\n        'movetoR2': movetoR2,\r\n        'reservResult': reservResult,\r\n        'confirmReturn': confirmReturn,\r\n        'markFinish': markFinish,\r\n        'markRemove': markRemove,\r\n        'admMarkFFail': admMarkFFail,\r\n        'tRequestCRF': tRequestCRF,\r\n        'fnConfirmRF': fnConfirmRF,\r\n        'admConfirmSwp': admConfirmSwp\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadStd({\r\n                variables: {\r\n                    id\r\n                }\r\n            })\r\n            if (user.role === 'ADMIN' || user.role === 'MANAGER') {\r\n                await loadAReports({\r\n                    variables: {\r\n                        filter: {\r\n                            status: 'PENDING',\r\n                        },\r\n                        page: 1,\r\n                        limit: 10\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        load()\r\n    }, [id, loadStd, loadAReports, user])\r\n\r\n\r\n    const deleteStudent = async (student: string) => {\r\n        await delStudent({\r\n            variables: {\r\n                student\r\n            }\r\n        })\r\n        history.goBack()\r\n    }\r\n\r\n    const moveToR1 = async (students: string[], report: string) => {\r\n        try {\r\n            await mover1({\r\n                variables: {\r\n                    students,\r\n                    report\r\n                }\r\n            })\r\n            message.success('Chuyển vào BC 1 thành công')\r\n        } catch (e) {\r\n            message.error('Đã có lỗi xẩy ra trong quá trình chuyển BC1')\r\n        }\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return <span>....loading</span>\r\n    }\r\n\r\n    const doAction = async (action: string, students: string[]) => {\r\n        if (!students || students.length === 0) {\r\n            message.error('Không thể thực hiện thao tác - thiếu thông tin hồ sơ')\r\n        }\r\n        try {\r\n            commands[action as keyof Object]({\r\n                variables: {\r\n                    students\r\n                }\r\n            })\r\n            // await action({\r\n                // })\r\n            message.success('Thành công')\r\n        } catch (e) {\r\n            message.error('Thao tác không thành công - vui lòng kiểm tra lại thông tin')\r\n        }\r\n\r\n    }\r\n\r\n    const confirmAction = async(action: string, students: string[], modalTitle: string, modalContent: string) => {\r\n        if (!students || students.length === 0) {\r\n            message.error('Không thể thực hiện thao tác - thiếu thông tin hồ sơ')\r\n        }\r\n        try {\r\n            Modal.confirm({\r\n                title: modalTitle,\r\n                content: modalContent,\r\n                onCancel: () => toggleConfirmModal(false),\r\n                visible: confirmModal,\r\n                onOk: async () => {\r\n                    commands[action as keyof Object]({\r\n                        variables: {\r\n                            students\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            // await action({\r\n            // })\r\n        } catch (e) {\r\n            message.error('Thao tác không thành công - vui lòng kiểm tra lại thông tin')\r\n        }\r\n\r\n    }\r\n\r\n    const markFailed = async (students: string[], reason: string) => {\r\n        try {\r\n            await admMarkFFail({\r\n                variables: {\r\n                    students,\r\n                    reason\r\n                }\r\n            })\r\n            message.success('Đánh dấu thi trượt thành công')\r\n        } catch (error) {\r\n            message.error('Đã có lỗi xẩy ra, vui lòng kiểm tra lại thông tin')\r\n        }\r\n    }\r\n\r\n    if (!loading && !error && data) {\r\n        if (!data.loadSingleStd) {\r\n            return (\r\n                <Alert message=\"Không tìm thấy người dùng\" type=\"error\" />\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <Header\r\n                    markFailed={markFailed}\r\n                    confirmAction={confirmAction}\r\n                    role={user.role}\r\n                    student={data.loadSingleStd}\r\n                    deleteStudent={deleteStudent}\r\n                    moveToR1={moveToR1}\r\n                    reports={reports.loadAReport.reports}\r\n                    loadingReport={loadingReports}\r\n                    doAction={doAction}\r\n                    movetoR2={async (students: string[], report: string) => {\r\n                        await movetoR2({\r\n                            variables: {\r\n                                students,\r\n                                report\r\n                            }\r\n                        })\r\n                    }}\r\n                />\r\n                <Row>\r\n                    <Col sm={24} md={12}>\r\n                        <BasicInfo\r\n                            student={data.loadSingleStd}\r\n                            role={user.role}\r\n                        />\r\n                    </Col>\r\n                    <Col sm={24} md={12}>\r\n                        <StudentTimeline history={data.loadSingleStd.history} />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\nexport default SingleStudent","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    message\r\n} from 'antd'\r\nimport grades from '../../common/HangBang'\r\n\r\nconst { Option } = Select\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (r: Record<string,any>) => void\r\n    type: string\r\n}\r\n\r\nconst CreateReportModal:React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    type\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [creating, toggleCreating] = React.useState(false)\r\n\r\n    const onCreate = async () => {\r\n        toggleCreating(true)\r\n        const report = form.getFieldsValue()\r\n        console.log(report)\r\n        if (!report.name || !report.hangbang) {\r\n            message.error('Không thể tạo báo cáo do thiếu thông tin')\r\n            onCancel()\r\n        }\r\n        toggleCreating(false)\r\n        onOk(report)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onCreate}\r\n            title={`Tạo mới báo cáo mới - ${type === 'BC1' ? 'Báo cáo 1' : 'Báo cáo 2'}`}\r\n            okButtonProps={{\r\n                loading: creating\r\n            }}\r\n        >\r\n            <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n                <Form.Item label=\"Tên báo cáo\" name=\"name\" rules={[{ required: true, message: 'Bắt buộc phải có tên'}]}>\r\n                    <Input placeholder=\"báo cáo một - ngày/tháng/năm\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Hạng bằng\" name=\"hangbang\" rules={[{ required: true, message: 'Bắt buộc phải có hạng bằng lái'}]}>\r\n                    <Select>\r\n                        {Object.keys(grades).map(g => (\r\n                            <Option key={g} value={g}>{`${g} -  ${grades[g as keyof Object]}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Ghi chú\" name=\"desc\">\r\n                    <Input placeholder=\"Ghi chú & diễn giải\" />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CreateReportModal","export const trangthaibaocao = {\r\n    'PENDING': 'Đang chờ phê duyệt',\r\n    'APPROVED': 'Đã phê duyệt'\r\n}","import React from 'react'\r\nimport {\r\n    Table\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\nimport { trangthaibaocao } from '../../../common/trangthai'\r\n\r\ntype CType = {\r\n    reports: Record<string,any>[]\r\n    type: string\r\n}\r\n\r\nconst ReportList:React.FC<CType> = ({\r\n    reports,\r\n    type\r\n}) => {\r\n    const columns = [\r\n        {\r\n            title: 'Ngày tạo',\r\n            dataIndex: 'created',\r\n            render: (text: string) => <span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Hạng bằng',\r\n            dataIndex: 'hangbang'\r\n        },\r\n        {\r\n            title: 'Tên báo cáo',\r\n            dataIndex: 'name',\r\n            render: (text: string, record: any) => <Link to={`${ type==='BC1'? '/rp1/':'/rp2/'}${record._id}`}>{text}</Link>\r\n        },\r\n        {\r\n            title: 'Chú thích',\r\n            dataIndex: 'desc'\r\n        },\r\n        {\r\n            title: 'SL học viên',\r\n            dataIndex: 'stdCount',\r\n            render: (text: string) => <strong>{text? text : '0'}</strong>\r\n        },\r\n        {\r\n            title: 'Trạng thái',\r\n            dataIndex: 'status',\r\n            render: (text: string) => (\r\n                <span>\r\n                    {trangthaibaocao[text as keyof Object]}\r\n                </span>\r\n            )\r\n        }\r\n    ]\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={reports}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportList\r\n","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\nimport hangbang from '../../../common/HangBang'\r\n\r\nconst { Option } = Select\r\nconst trangthais = {\r\n    'PENDING': 'Đang chờ phê duyệt',\r\n    'APPROVED': 'Đã phê duyệt'\r\n}\r\n\r\ntype ReportFilterModalType = {\r\n    visible: boolean,\r\n    onCancel: () => void\r\n    onOk: (filter: Record<string,any>) => void\r\n    filter: Record<string, any>\r\n}\r\n\r\nconst ReportFileterModal:React.FC<ReportFilterModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    filter\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    form.setFieldsValue(filter)\r\n    const onConfirm = () => {\r\n        onOk(form.getFieldsValue())\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            title=\"Lọc báo cáo\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onConfirm}\r\n        >\r\n            <Form form={form} labelCol={{ span: 6}} wrapperCol={{ span: 18}}>\r\n                <Form.Item label=\"Tên báo cáo\" name=\"name\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Chú thích\" name=\"desc\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Hạng bằng\" name=\"hangbang\">\r\n                    <Select>\r\n                        {Object.keys(hangbang).map(hb => (\r\n                            <Option value={hb} key={hb}>{`${hb} - ${hangbang[hb as keyof Object]}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Trạng thái\" name=\"status\">\r\n                    <Select>\r\n                        {Object.keys(trangthais).map(hb => (\r\n                            <Option value={hb} key={hb}>{trangthais[hb as keyof Object]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ReportFileterModal","export const notFilterEmpty = (filter: any) => {\r\n    const matchingKey = Object.keys(filter).find(k => filter[k] !== null)\r\n    return Boolean(matchingKey)\r\n}\r\n","import React from 'react';\r\nimport {\r\n    PageHeader,\r\n    Button,\r\n    Space,\r\n    Pagination\r\n} from 'antd'\r\nimport {\r\n    FilterOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n    // gql,\r\n    useMutation,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport CreateReportModal from'./CreateReportModal'\r\nimport ReportList from './ReportList/ReportList'\r\nimport ReportFileterModal from './Modals/FilterReportModal'\r\nimport {\r\n    notFilterEmpty\r\n} from '../../common/utils'\r\n\r\n\r\n// const CREATE_A_REPORT = gql `\r\n//     mutation createAReport($report: ReportOneInput) {\r\n//         createAReport(report: $report) {\r\n//             _id\r\n//             hangbang\r\n//             name\r\n//             desc\r\n//             status\r\n//             created\r\n//             createdBy {\r\n//                 name\r\n//             },\r\n//             stdCount\r\n//         }\r\n//     }\r\n// `\r\n// const LOAD_A_REPORT = gql `\r\n//     query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n//         loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n//             reports {\r\n//                 _id\r\n//                 hangbang\r\n//                 name\r\n//                 desc\r\n//                 status\r\n//                 createdBy {\r\n//                     name\r\n//                 },\r\n//                 stdCount\r\n//                 created\r\n//             }\r\n//             total\r\n//         }\r\n//     }\r\n// `\r\ntype ReportType = {\r\n    createQuery: {\r\n        reportKey: string,\r\n        query: any\r\n    }\r\n    loadQuery: {\r\n        reportKey: string,\r\n        query: any\r\n    }\r\n    title: string,\r\n    type: string\r\n}\r\nconst ReportOnes:React.FC<ReportType> = ({\r\n    createQuery,\r\n    loadQuery,\r\n    title,\r\n    type\r\n}) => {\r\n    const limit = 50\r\n    // const [createReportOne] = useMutation(CREATE_A_REPORT)\r\n    const [createReportOne] = useMutation(createQuery.query, {refetchQueries: [loadQuery.query]})\r\n    const [createMdl, toggleCreateMdl] = React.useState(false)\r\n    // const [loadAReports, {data: reportData}] = useLazyQuery(LOAD_A_REPORT)\r\n    const [loadAReports, { data: reportData }] = useLazyQuery(loadQuery.query)\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        name: null,\r\n        desc: null,\r\n        hangbang: null,\r\n        status: null\r\n    })\r\n    const [page, setPage] = React.useState(1)\r\n    React.useEffect(() => {\r\n        const loadReports = async () => {\r\n            await loadAReports({\r\n                variables: {\r\n                    filter,\r\n                    page,\r\n                    limit\r\n                }\r\n            })\r\n        }\r\n        loadReports()\r\n    }, [ loadAReports, filter, page, limit ])\r\n\r\n    const createReport = async (report: Record<string,any>) => {\r\n        await createReportOne({\r\n            variables: {\r\n                report\r\n            }\r\n        })\r\n        toggleCreateMdl(false)\r\n    } \r\n\r\n    const onToggleFilter = () => {\r\n        if (notFilterEmpty(filter)) {\r\n            setFilter({\r\n                name: null,\r\n                desc: null,\r\n                hangbang: null,\r\n                status: null\r\n            })\r\n        } else {\r\n            toggleFilterModal(true)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title={title}\r\n                extra={[\r\n                    <Button shape=\"round\" key=\"_add\" type=\"primary\" onClick={() => toggleCreateMdl(true)}>\r\n                        <PlusOutlined />\r\n                    </Button>,\r\n                    <Button danger={notFilterEmpty(filter)} key=\"_filter\" shape=\"round\" onClick={() => onToggleFilter()}>\r\n                        <FilterOutlined />\r\n                        {/* {notFilterEmpty(filter) ? 'Xóa bộ lọc' : 'Lọc báo cáo'} */}\r\n                    </Button>\r\n                ]}\r\n            />\r\n            {reportData && reportData[loadQuery.reportKey] && (\r\n                <Space direction=\"vertical\" style={{width: '100%'}}>\r\n                    <ReportList\r\n                        type={type}\r\n                        reports={reportData[loadQuery.reportKey as keyof Object].reports}\r\n                    />\r\n                    <Pagination\r\n                        current={page}\r\n                        onChange={(page: number) => setPage(page)}\r\n                        total={reportData[loadQuery.reportKey as keyof Object].total}\r\n                        pageSize={limit}\r\n                    />\r\n                </Space>\r\n            )}\r\n            <CreateReportModal\r\n                type={type}\r\n                visible={createMdl}\r\n                onCancel={() => toggleCreateMdl(false)}\r\n                onOk={(report) => createReport(report)}\r\n            />\r\n            <ReportFileterModal\r\n                filter={filter}\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                onOk={(filter: Record<string,any>) => setFilter(filter)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ReportOnes","import React from 'react'\r\nimport {\r\n    List,\r\n    Modal,\r\n    Input,\r\n    Form,\r\n    Divider,\r\n    // message\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    // useMutation,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport { CheckOutlined, IdcardOutlined, MobileOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\ntype ModalType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (stds: string[]) => void\r\n    hangbang: string\r\n    type: string\r\n}\r\n\r\nconst SEARCH_STUDENTS_4_BC1 = gql`\r\n    query searchStd4bc1($filter: FilterInput, $hangbang: String!) {\r\n        searchStd4bc1(filter: $filter, hangbang: $hangbang) {\r\n            _id\r\n            randomId\r\n            ten\r\n            ngaysinh\r\n            # anh34\r\n            quequan\r\n            # cmt1\r\n            # cmt2\r\n            # bangcap\r\n            hangbang\r\n            mobile\r\n            # dondk\r\n            # giaykhamSK\r\n            # hopdongdaotao\r\n            trangthai\r\n            # baoluu\r\n            # baocao1\r\n            # kq1\r\n            # kq2\r\n            # createdBy\r\n            # created\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst AddStdModal:React.FC<ModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    type,\r\n    hangbang\r\n}) => {\r\n    let searchTimeout:any = null\r\n    const [searchStds, { data = { searchStd4bc1:[]}}] = useLazyQuery(SEARCH_STUDENTS_4_BC1, { fetchPolicy: 'network-only'})\r\n    const [selected, setSelected] = React.useState<string[]>([])\r\n    const [adding, toggleAdding] = React.useState(false)\r\n\r\n    const onStudentClick = (student: string) => {\r\n        const idx = selected.indexOf(student)\r\n        if (idx >= 0) {\r\n            setSelected(selected.filter(s => s!== student))\r\n        } else {\r\n            setSelected([student].concat(selected))\r\n        }\r\n    }\r\n\r\n    const onKeywordChange:React.ChangeEventHandler<HTMLInputElement> = async (e) => {\r\n        if (searchTimeout) {\r\n            clearTimeout(searchTimeout)\r\n        }\r\n        searchTimeout = setTimeout(() => {\r\n            const { value } = e.target\r\n            const filter = {\r\n                ten: value,\r\n                mobile: value,\r\n                randomId: value,\r\n                trangthai: type === 'BC1' ? 'CHO_VAO_BC_1' : 'CHO_VAO_BC_2'\r\n            }\r\n            // if (value.length >=3) {\r\n                searchStds({\r\n                    variables: {\r\n                        filter,\r\n                        hangbang\r\n                    }\r\n                })\r\n            // }\r\n            // const page = 1\r\n            // const limit = 20\r\n        }, 700)\r\n    }\r\n\r\n    const add = async () => {\r\n        toggleAdding(true)\r\n        await onOk(selected)\r\n        toggleAdding(false)\r\n        onCancel()    \r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => add()}\r\n            okButtonProps={{\r\n                loading: adding\r\n            }}\r\n            title=\"Thêm hồ sơ vào BC 1\"\r\n        >\r\n            <Form layout=\"vertical\">\r\n                <Form.Item label=\"Tìm kiếm hồ sơ\">\r\n                    <Input onChange={onKeywordChange} placeholder=\"Tìm theo tên/sdt/ mã HS\" />\r\n                </Form.Item>\r\n            </Form>\r\n            <Divider />\r\n            {data.searchStd4bc1.length > 0 && <p>Chọn trong danh sách({selected.length})</p>}\r\n            <List\r\n                dataSource={data.searchStd4bc1}\r\n                renderItem={(item:any) => (\r\n                    <List.Item\r\n                        style={{ cursor: 'pointer'}}\r\n                        key={item._id}\r\n                        onClick={() => onStudentClick(item._id)}\r\n                        actions={selected.indexOf(item._id) >=0 ? [<CheckOutlined style={{ color: 'blue'}} />]: ['']}\r\n                    >\r\n                        <List.Item.Meta\r\n                            title={`${item.ten} - ${item.randomId}`}\r\n                            description={<p><MobileOutlined />{item.mobile}{` - `}<IdcardOutlined />{moment(parseFloat(item.ngaysinh)).format('DD/MM/YYYY')}</p>}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\nexport default AddStdModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input\r\n} from 'antd'\r\n\r\ntype ModalType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (filter: Record<string,any>) => void\r\n}\r\n\r\nconst FilterModal: React.FC<ModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [loading, toggleLoading] = React.useState(false)\r\n    \r\n    const changeFilter = async () => {\r\n        toggleLoading(true)\r\n        await onOk(form.getFieldsValue())\r\n        toggleLoading(false)\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={changeFilter}\r\n            title=\"Lọc hồ sơ\"\r\n            okButtonProps={{\r\n                loading\r\n            }}\r\n        >\r\n            <Form form={form} labelCol={{span: 6}} wrapperCol={{span:18}}>\r\n                <Form.Item label=\"Mã hồ sơ\" name=\"randomId\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Tên học viên\" name=\"ten\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Số điện thoại\" name=\"mobile\">\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default FilterModal","import React from 'react'\r\nimport {\r\n    Menu,\r\n    Button,\r\n    Dropdown,\r\n    Modal,\r\n    PageHeader,\r\n    Table,\r\n    message\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport { CheckOutlined, EllipsisOutlined, FilterOutlined, MinusOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\n\r\nimport AddStdModal from './AddStdModal'\r\nimport FilterModal from './FilterModal'\r\n// import { MARK_COMPLETED } from '../../common/ClientQueries'\r\n\r\ntype CType = {\r\n    students: Record<string,any>[]\r\n    removeStudents: (students: string[]) => void\r\n    setFilter: (filter: Record<string,any>) => void\r\n    filter: Record<string, any>\r\n    report: Record<string,any>\r\n    addStudents: (students: string[]) => void\r\n    markComp: (students: string[]) => void\r\n    type: string\r\n}\r\n\r\nconst StudentsList:React.FC<CType> = ({\r\n    students,\r\n    removeStudents,\r\n    setFilter,\r\n    filter,\r\n    report,\r\n    addStudents,\r\n    markComp,\r\n    type\r\n}) => {\r\n    const [selected, setSelected] = React.useState<string[]>([])\r\n    // const [working, setWorking] = React.useState<string>('')\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const [removeModal, toggleRemoveModal] = React.useState(false)\r\n    const [addModal, toggleAddModal] = React.useState(false)\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            render: (_: any, __: any, index: number) => <span>{index + 1}</span>\r\n        },\r\n        {\r\n            title: 'Mã hồ sơ',\r\n            dataIndex: 'randomId'\r\n        },\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'ten'\r\n        },\r\n        {\r\n            title: 'Ngày sinh',\r\n            dataIndex: 'ngaysinh',\r\n            render: (t: string) => <span>{moment(parseFloat(t)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Số điện thoại',\r\n            dataIndex: 'mobile'\r\n        }\r\n    ]\r\n    const rowSelection = {\r\n        onChange: (keys: any) => {\r\n            setSelected(keys)\r\n            console.log(`the keys of the row is ${keys}`)\r\n        },\r\n        selectedRowKeys: selected\r\n        \r\n    }\r\n\r\n    const notFilterEmpty = () => {\r\n        const matchingKey = Object.keys(filter).find(k => filter[k] !== null)\r\n        return Boolean(matchingKey)\r\n    }\r\n    const remove = async () => {\r\n        Modal.confirm({\r\n            title: 'Loại hồ sơ khỏi báo cáo?',\r\n            content: 'Bạn sẽ không phải thêm lại thông tin cho những hồ sơ này',\r\n            onCancel: () => toggleRemoveModal(false),\r\n            visible: removeModal,\r\n            onOk: async () => {\r\n                // setWorking('removing')\r\n                await removeStudents(selected)\r\n                setSelected([])\r\n                // setWorking('')\r\n                toggleRemoveModal(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const onFilterClick = () => {\r\n        if (notFilterEmpty()) {\r\n            setFilter({\r\n                ten: null,\r\n                mobile: null,\r\n                hangbang: null,\r\n                randomId: null,\r\n                trangthai: null\r\n            })\r\n        } else {\r\n            toggleFilterModal(true)\r\n        }\r\n    }\r\n    const onCompleted = async() => {\r\n        if (!selected || selected.length === 0) {\r\n            message.error('Chọn hồ sơ trước khi thực hiện thao tác')\r\n            return\r\n        }\r\n        await markComp(selected)\r\n    }\r\n\r\n    const FunctionsDrop = () => {\r\n        if (type !==\"BC2\") {\r\n            return (\r\n                <Dropdown key=\"_men\" trigger={['click']} overlay={(\r\n                    <Menu theme=\"dark\">\r\n                    {report.status === 'PENDING' && <Menu.Item onClick={() => toggleAddModal(true)} key=\"_ađd\" icon={<PlusOutlined />}>Thêm hồ sơ</Menu.Item>}\r\n                    {report.status === 'PENDING' && <Menu.Item disabled={selected.length === 0} onClick={() => remove()} key=\"_rm\" icon={<MinusOutlined />}>Loại hồ sơ</Menu.Item>}\r\n                    <Menu.Item icon={<CheckOutlined />} onClick={() => onCompleted()}>Đánh dấu hoàn thành học</Menu.Item>\r\n                </Menu>\r\n            )}>\r\n                <Button shape=\"round\" type=\"primary\" icon={<EllipsisOutlined />} />\r\n            </Dropdown>\r\n        )\r\n        }\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            {(user.role === 'MANAGER' || user.role === 'ADMIN') && (\r\n                <PageHeader\r\n                    title=\"Danh sách hồ sơ\"\r\n                    extra={[\r\n                        <Button danger={notFilterEmpty()} shape=\"round\" key=\"_filter\" icon={<FilterOutlined />} onClick={() => onFilterClick()}>\r\n                            {notFilterEmpty() ? 'Bỏ lọc' : 'Lọc'}\r\n                        </Button>,\r\n                        FunctionsDrop(),\r\n                    ]}\r\n                />\r\n                )}\r\n            {(user.role === 'TEACHER' || user.role === 'FINANCE') && (\r\n                <PageHeader\r\n                    title=\"Danh sách hồ sơ\"\r\n                />\r\n            )}\r\n            <Table\r\n                rowKey=\"_id\"\r\n                rowSelection={rowSelection}\r\n                dataSource={students}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n            <FilterModal\r\n                // setFilter={setFilter}\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                onOk={(filter: Record<string, any>) => setFilter(filter)}\r\n            />\r\n            <AddStdModal\r\n                type={type}\r\n                hangbang={report.hangbang}\r\n                visible={addModal}\r\n                onCancel={() => toggleAddModal(false)}\r\n                onOk={(stds: string[]) => addStudents(stds)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsList","import React from 'react'\r\nimport {\r\n    Button,\r\n    Descriptions,\r\n    message,\r\n    PageHeader\r\n} from 'antd'\r\nimport {\r\n    useParams\r\n} from 'react-router-dom'\r\nimport {\r\n    // gql,\r\n    useLazyQuery,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport StudentsList from './StudentsList'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nimport { trangthaibaocao } from '../../common/trangthai'\r\nimport moment from 'moment'\r\n\r\ntype ReportOneType = {\r\n    loadReport: any,\r\n    approveReport: any,\r\n    markComplete: any,\r\n    addStd: any,\r\n    removeStd: any\r\n    dataKey: string\r\n    type: string\r\n}\r\n\r\nconst SingleAttReport:React.FC<ReportOneType> = ({\r\n    loadReport,\r\n    approveReport,\r\n    markComplete,\r\n    addStd,\r\n    removeStd,\r\n    dataKey,\r\n    type\r\n}) => {\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const params:any = useParams()\r\n    const [loadR, { loading, data }] = useLazyQuery(loadReport)\r\n    const [approveR, { loading: approving }] = useMutation(approveReport, { refetchQueries: [loadReport]})\r\n    const [markCompleted] = useMutation(markComplete, { refetchQueries: [loadReport]})\r\n    const [addToR1] = useMutation(addStd, {\r\n        refetchQueries: [loadReport]\r\n    })\r\n    const [removeStds] = useMutation(removeStd, {\r\n        refetchQueries: [loadReport]\r\n    })\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        randomId: null,\r\n        ten: null,\r\n        mobile: null\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadR({\r\n                variables: {\r\n                    report: params.id,\r\n                    filter\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadR, params, filter])\r\n    // const { id } = params\r\n\r\n    const removeStudents = async (students: string[]) => {\r\n        try {\r\n            await removeStds({\r\n                variables: {\r\n                    students,\r\n                    report: data[dataKey as keyof Object].report._id\r\n                },\r\n                update: () => {}\r\n            })\r\n            message.success('Loại hồ sơ thành công')\r\n        } catch (e) {\r\n            message.error('Không thể loại hồ sơ khỏi báo cáo - vui lòng kiểm tra lại')\r\n        }\r\n    } \r\n\r\n    const addStudents = async (students: string[]) => {\r\n        try {\r\n            const { report } = data[dataKey as keyof Object]\r\n            if (!report || !report._id) {\r\n                throw new Error('Báo cáo không hợp lệ')\r\n            }\r\n            addToR1({\r\n                variables: {\r\n                    students,\r\n                    report: report._id\r\n                }\r\n            })\r\n            message.success('Thêm vào báo cáo thành công')\r\n        } catch (e) {\r\n            message.error('Không thể thêm vào báo cáo')\r\n        }\r\n    }\r\n\r\n    const markComp = async (students: string[]) => {\r\n        try {\r\n            await markCompleted({\r\n                variables: {\r\n                    students\r\n                }\r\n            })\r\n            message.success('Đã Đánh dấu hoàn thành')\r\n        } catch (e) {\r\n            message.error('không thể thực hiện được thao tác')\r\n        }\r\n    }\r\n\r\n    const approve = async () => {\r\n        if (!data || !data[dataKey as keyof Object]) {\r\n            message.error('Không thể duyệt được báo cáo')\r\n        } else {\r\n            try {\r\n                await approveR({\r\n                    variables: {\r\n                        report: data[dataKey as keyof Object].report._id\r\n                    }\r\n                })\r\n                message.success('Phê duyệt thành công')\r\n            } catch (e) {\r\n                message.error('Không thể duyệt được báo cáo')\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <LoadinCenter />\r\n    }\r\n    const extra = []\r\n    if (user.role === 'MANAGER' && type !=='BC2') {\r\n        extra.push(\r\n            (\r\n                <Button disabled={!data || data[dataKey as keyof Object].report.status === 'APPROVED'} onClick={() => approve()} loading={approving} type=\"primary\" shape=\"round\">\r\n                    <CheckOutlined />\r\n                    Phê duyệt\r\n                </Button>\r\n            )\r\n        )\r\n    }\r\n    if (data && data[dataKey as keyof Object]) {\r\n        const { report } = data[dataKey as keyof Object]\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    title={`Báo cáo: ${report.name}`}\r\n                    extra={extra}\r\n                    subTitle={`${report.desc}`}\r\n                >\r\n                    <Descriptions size=\"small\" column={3}>\r\n                        <Descriptions.Item label=\"Hạng Bằng\">{report.hangbang}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ngày tạo\">{moment(parseFloat(report.created)).format('DD/MM/YYYY')}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Trạng thái\">{trangthaibaocao[report.status as keyof Object]}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Người tạo\">{report.createdBy.name}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </PageHeader>\r\n                {/* <BasicInfor report={data[dataKey as keyof Object].report} /> */}\r\n                <StudentsList\r\n                    type={type}\r\n                    report={data[dataKey as keyof Object].report}\r\n                    filter={filter}\r\n                    setFilter={setFilter}\r\n                    students={data[dataKey as keyof Object].students}\r\n                    removeStudents={removeStudents}\r\n                    addStudents={addStudents}\r\n                    markComp={markComp}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\nexport default SingleAttReport","import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    useMutation\r\n} from '@apollo/client'\r\n\r\nconst CHANGE_PWD = gql `\r\n    mutation changePwd($currentPwd: String!, $newPwd: String!, $confirmNewPwd: String!) {\r\n        changePwd(currentPwd: $currentPwd, newPwd: $newPwd, confirmNewPwd: $confirmNewPwd)\r\n    }\r\n`\r\n\r\nconst PasswordForm = () => {\r\n    const [form] = Form.useForm()\r\n    const [changePwd, { loading }] = useMutation(CHANGE_PWD)\r\n    const onChange = async () => {\r\n        const { currentPwd, newPwd, confirmNewPwd} = form.getFieldsValue()\r\n        if (!currentPwd || !newPwd || !confirmNewPwd) {\r\n            message.error('Vui lòng điền đầy đủ thông tin')\r\n            return\r\n        }\r\n        try {\r\n            await changePwd({\r\n                variables: {\r\n                    currentPwd,\r\n                    newPwd,\r\n                    confirmNewPwd\r\n                }\r\n            })\r\n            message.success('Đổi mật khẩu thành công')\r\n            form.resetFields()\r\n        } catch (error) {\r\n            message.error('Đã có lỗi xẩy ra, vui lòng kiểm tra thông tin')\r\n            // return\r\n        }\r\n    }\r\n    return (\r\n        <Form form={form} labelCol={{span: 8}} wrapperCol={{ span: 16}}>\r\n            <Form.Item label=\"Mật khẩu cũ\" rules={[{required: true, message: 'Bắt buộc phải điền'}]} name=\"currentPwd\">\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item label=\"Mật khẩu mới\" rules={[{required: true, message: 'Bắt buộc phải điền'}]} name=\"newPwd\">\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item label=\"Nhập lại mật khẩu mới\" rules={[{required: true, message: 'Bắt buộc phải điền'}]} name=\"confirmNewPwd\">\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Button\r\n                onClick={() => onChange()}\r\n                type=\"primary\"\r\n                loading={loading}\r\n            >\r\n                Đổi mật khẩu\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\nexport default PasswordForm","import React from 'react'\r\nimport {\r\n    PageHeader,\r\n    Row,\r\n    Col\r\n} from 'antd'\r\n// import {\r\n//     useAuth\r\n// } from '../../../context/AuthenticationContext'\r\nimport PwdForm from './ChangePwdForm'\r\n\r\nconst Profile = () => {\r\n    // const { getUser } = useAuth()\r\n    // const user = getUser()\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col xs={24} sm={24} md={12} lg={8} style={{ textAlign: 'right'}}>\r\n                <PageHeader title=\"Đổi mật khẩu\" />\r\n                <PwdForm />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default Profile","import React from 'react'\r\nimport {\r\n    Button,\r\n    message,\r\n    Modal,\r\n    Space,\r\n    Table\r\n} from 'antd'\r\nimport { DeleteOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\ntype Ctype = {\r\n    users: Record<string,any>[]\r\n    deleteUser: (params: any) => void\r\n}\r\nconst roles:Record<string,string> = {\r\n    'TEACHER': 'Giáo Viên',\r\n    'ADMIN': 'NV P.Đào Tạo',\r\n    'FINANCE': 'Kế toán',\r\n    'MANAGER': 'Quản lý',\r\n    'SUPER_ADMIN': 'Quản trị viên',\r\n}\r\nconst UsersList:React.FC<Ctype> = ({\r\n    users,\r\n    deleteUser\r\n}) => {\r\n    const [confirmModal, toggleConfirmModal] = React.useState(false)\r\n    const [deleting, toggleDeleting] = React.useState(false)\r\n    const confirmDelete = async (name: string,_id: string) => {\r\n        Modal.confirm({\r\n            title:'Xóa tài khoản người dùng',\r\n            content: `Bạn có muốn khóa tài khoản $Ơname`,\r\n            visible: confirmModal,\r\n            onCancel: () => toggleConfirmModal(false),\r\n            onOk: async () => {\r\n                try {\r\n                    toggleDeleting(true)\r\n                    await deleteUser({\r\n                        variables: {\r\n                            _id\r\n                        }\r\n                    })\r\n                    message.success(\"Tài khoản đã được xóa\")\r\n                    toggleDeleting(false)\r\n                } catch (error) {\r\n                    message.error('Không thể xóa được tài khoản')\r\n                }\r\n            },\r\n            okButtonProps: {\r\n                danger: true,\r\n                loading: deleting\r\n            }\r\n        })\r\n    }\r\n    const columns = [\r\n        {\r\n            title: \"Tên\",\r\n            dataIndex: 'name',\r\n            render: (text: string, record: any) => {\r\n                return (\r\n                    <Space>\r\n                        {record.disabled && <LockOutlined style={{ color: 'red'}} />}\r\n                        <Link to={`/users/${record._id}`}>\r\n                            {text}\r\n                        </Link>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Email/phone',\r\n            dataIndex: 'email'\r\n        },\r\n        {\r\n            title: 'Vai trò / quyền',\r\n            dataIndex: 'role',\r\n            render: (text: string) => <span>{roles[text]}</span>\r\n        },\r\n        {\r\n            title: 'Xóa',\r\n            render: (_text: string, record: any) => <Button onClick={() => confirmDelete(record.name, record._id)} icon={<DeleteOutlined />} danger type=\"text\" />\r\n        }\r\n    ]\r\n    return (\r\n        <Table\r\n            dataSource={users}\r\n            columns ={columns}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UsersList","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void\r\n    createU: (user: Record<string,any>) => void\r\n}\r\n\r\nexport const roles = {\r\n    'TEACHER': 'Giáo viên',\r\n    'ADMIN': 'Đào tạo',\r\n    'FINANCE': 'Kế toán',\r\n    'MANAGER': 'Quản lý - Giám đốc',\r\n    'SUPER_ADMIN': 'Quạn trị hệ thống'\r\n}\r\nconst { Option } = Select\r\nconst CreateUserModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    createU\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [loading, toggleLoading] = React.useState(false)\r\n    const createUser = async () => {\r\n        toggleLoading(true)\r\n        const data = form.getFieldsValue()\r\n        await createU(data)\r\n        toggleLoading(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={createUser}\r\n            title=\"Tạo người dùng mới\"\r\n            okButtonProps={{ loading }}\r\n        >\r\n            <Form form={form} labelCol={{span: 8}} wrapperCol={{span: 16}}>\r\n                <Form.Item label=\"Tên người dùng\" name=\"name\" rules={[{required: true, message: 'Thông tin bắt buộc'}]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email/SDT\" name=\"email\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item label=\"Nhập lại mật khẩu\" name=\"confirmPassword\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item label=\"Vai trò, chức năng\" name=\"role\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Select>\r\n                        {Object.keys(roles).map(k => (\r\n                            <Option key={k} value={k}>{roles[k as keyof Object]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CreateUserModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\nimport {\r\n    roles\r\n} from './CreateUserModal'\r\n\r\nconst { Option } = Select\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk?: () => void\r\n    filter?: Record<string,any>\r\n    setFilter: (filter: Record<string,any>) => void\r\n}\r\n\r\nconst FilterModal:React.FC<MType> =({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    filter,\r\n    setFilter\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const confirmFilter = () => {\r\n        setFilter(form.getFieldsValue())\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={confirmFilter}\r\n            title=\"Tìm kiếm người dùng\"\r\n        >\r\n            <Form form={form} labelCol={{ span: 6}} wrapperCol={{ span: 18}}>\r\n                <Form.Item name=\"name\" label=\"Tên người dùng\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"email\" label=\"Email / SDT\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"role\" label=\"Vai trò\">\r\n                    <Select>\r\n                        {Object.keys(roles).map(k => (\r\n                            <Option key={k} value={k}>{roles[k as keyof Object]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default FilterModal","import React from 'react'\r\nimport {\r\n    Button,\r\n    message,\r\n    PageHeader,\r\n    Tooltip\r\n} from 'antd'\r\nimport { CloseOutlined, PlusOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport CreateUserModal from './CreateUserModal'\r\nimport FilterModal from './FilterModal'\r\n\r\ntype CType = {\r\n    createUser: (user: Record<string,any>) => void\r\n    setFilter: (filter: Record<string,any>) => void\r\n    filter: Record<string, any>\r\n}\r\n\r\nconst SettingHeader:React.FC<CType> = ({\r\n    createUser,\r\n    setFilter,\r\n    filter\r\n}) => {\r\n    const [createModal, toggleCreateModal] = React.useState(false)\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const createU = async (user: Record<string,any>) => {\r\n        try {\r\n            await createUser({\r\n                variables: {\r\n                    userInput: user\r\n                }\r\n            })\r\n            message.success('Tạo người dùng thành công')\r\n            toggleCreateModal(false)\r\n        } catch (e) {\r\n            message.error('Không thể tạo người dùng mới. Vui lòng kiểm tra lại thông tin')\r\n        }\r\n    }\r\n\r\n    const isFilterEmpty = () => {\r\n        return Object.values(filter).every(f => f === null)\r\n    }\r\n\r\n    const onFilterClick = () => {\r\n        if (isFilterEmpty()) {\r\n            toggleFilterModal(true)\r\n        } else {\r\n            setFilter({\r\n                name: null,\r\n                email: null,\r\n                role: null\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Danh sách người dùng\"\r\n                extra={[\r\n                    <Tooltip title=\"Thêm người dùng\" key=\"1\">\r\n                        <Button onClick={() => toggleCreateModal(true)} type=\"primary\" shape=\"round\" icon={<PlusOutlined />} />\r\n                    </Tooltip>,\r\n                    <Tooltip title={isFilterEmpty() ? 'Tìm kiếm': 'Bỏ tìm kiếm'} key=\"2\">\r\n                        <Button\r\n                            onClick={() => onFilterClick()}\r\n                            type=\"text\"\r\n                            icon={isFilterEmpty() ? <SearchOutlined /> : <CloseOutlined />}\r\n                        />\r\n                    </Tooltip>\r\n                ]} \r\n                />\r\n            <CreateUserModal\r\n                createU={createU}\r\n                visible={createModal}\r\n                onCancel={() => toggleCreateModal(false)}\r\n                onOk={() => toggleCreateModal(false)}\r\n            />\r\n            <FilterModal\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                setFilter={setFilter}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingHeader","import React from 'react'\r\nimport {\r\n    gql,\r\n    useLazyQuery,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport UsersList from './MainComps/UsersList'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport Header from './MainComps/Header'\r\n// import { Modal } from 'antd'\r\n\r\nconst LOAD_USERS = gql `\r\n    query loadUsers($filter: UserFilter, $page: Int, $limit: Int) {\r\n        loadUsers(filter: $filter, page: $page, limit: $limit) {\r\n            _id\r\n            name\r\n            email\r\n            role\r\n            disabled\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\nconst CREATE_USER = gql `\r\n    mutation createUser($userInput: UserInput) {\r\n        createUser(userInput: $userInput) {\r\n            name\r\n        }\r\n    }\r\n`\r\nconst DELETE_USER = gql`\r\n    mutation deleteUser($_id: String!) {\r\n        deleteUser(_id: $_id)\r\n    }\r\n`\r\nconst UserMgt = () => {\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        name: null,\r\n        email: null,\r\n        role: null\r\n    })\r\n    const limit = 100\r\n    const [loadUsers, { loading, data: loadUsersR }] = useLazyQuery(LOAD_USERS)\r\n    const [createUser] = useMutation(CREATE_USER, {refetchQueries: [LOAD_USERS]})\r\n    const [deleteUser] = useMutation(DELETE_USER, { refetchQueries: [LOAD_USERS]})\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadUsers({\r\n                variables: {\r\n                    filter,\r\n                    page: 1,\r\n                    limit\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadUsers, filter])\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                filter={filter}\r\n                createUser={createUser}\r\n                setFilter={setFilter}\r\n            />\r\n            {loading && (\r\n                <LoadinCenter />\r\n            )}\r\n            {!loading && loadUsersR && (\r\n                <UsersList\r\n                    users={loadUsersR.loadUsers}\r\n                    deleteUser={deleteUser}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default UserMgt","import React from 'react'\r\nimport {\r\n    Descriptions\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst roles: Record<string, string> = {\r\n    'TEACHER': 'Giáo Viên',\r\n    'ADMIN': 'NV P.Đào Tạo',\r\n    'FINANCE': 'Kế toán',\r\n    'MANAGER': 'Quản lý',\r\n    'SUPER_ADMIN': 'Quản trị viên',\r\n}\r\n\r\ntype CType = {\r\n    user: any\r\n}\r\nconst BasicInfor: React.FC<CType> = ({\r\n    user\r\n}) => {\r\n    return (\r\n        <Descriptions title=\"Thông tin người dùng\">\r\n            <Descriptions.Item label=\"Tên\">\r\n                <strong>{user.name}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Tên đăng nhập/ email/ SDT\">\r\n                <strong>{user.email}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Vai trò\">\r\n                <strong>{roles[user.role]}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Trạng thái\">\r\n                <strong>{user.disabled ? 'Đã khóa' : 'Đang hoạt động'}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Ngày tạo\">\r\n                <strong>{moment(parseFloat(user.created)).format('DD/MM/YYYY')}</strong>\r\n            </Descriptions.Item>\r\n        </Descriptions>\r\n    )\r\n}\r\nexport default BasicInfor ","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input\r\n} from 'antd'\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (password: string, confirmPassword: string) => void\r\n}\r\n\r\nconst ResetPwdModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [loading, toggleLoading] = React.useState(false)\r\n    const setPwd = async () => {\r\n        toggleLoading(true)\r\n        const {password, confirmPassword}  = form.getFieldsValue()\r\n        await onOk(password, confirmPassword)\r\n        toggleLoading(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            title=\"Đặt lại mật khẩu người dùng\"\r\n            okButtonProps={{ loading}}\r\n            onOk={() => setPwd()}\r\n        >\r\n            <Form form={form} labelCol={{ span: 8}} wrapperCol={{ span: 16}}>\r\n                <Form.Item label=\"Mật khẩu mới\" name=\"password\" rules={[{required: true, message: 'Bắt buộc phải có'}, {min: 6, message: 'Tối thiểu 6 ký tự'}]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item label=\"Nhập lai Mật khẩu mới\" name=\"confirmPassword\" rules={[{required: true, message: 'Bắt buộc phải có'}, {min: 6, message: 'Tối thiểu 6 ký tự'}]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ResetPwdModal","import React from 'react'\r\nimport {\r\n    Button,\r\n    PageHeader,\r\n    Tooltip,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport {\r\n    gql,\r\n    useLazyQuery,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport UserInfo from './UserInfo'\r\nimport { KeyOutlined, LockOutlined, UnlockOutlined } from '@ant-design/icons'\r\nimport ResetPwdModal from './ResetPwdModal'\r\n\r\nconst LOAD_USER = gql `\r\n    query loadUser($_id: String!) {\r\n        loadUser(_id: $_id) {\r\n            _id\r\n            disabled\r\n            name\r\n            email\r\n            role\r\n            createdBy\r\n            created\r\n            profile {\r\n                avatar\r\n            }\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\nconst LOCK_USER = gql `\r\n    mutation disableUser($_id: String!, $disabled: Boolean) {\r\n        disableUser(_id: $_id, disabled: $disabled) {\r\n             _id\r\n            disabled\r\n            name\r\n            email\r\n            role\r\n            createdBy\r\n            created\r\n            profile {\r\n                avatar\r\n            }\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\nconst RESET_PWD = gql `\r\n    mutation setPwd($_id: String!, $password: String!, $confirmPassword: String!) {\r\n        setPwd(_id: $_id, password: $password, confirmPassword: $confirmPassword) {\r\n             _id\r\n            disabled\r\n            name\r\n            email\r\n            role\r\n            createdBy\r\n            created\r\n            profile {\r\n                avatar\r\n            }\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\n\r\nconst SingleUser = () => {\r\n    const params:any = useParams()\r\n    const { id } = params\r\n    const history = useHistory()\r\n    const [loadUser, { loading, data }] = useLazyQuery(LOAD_USER)\r\n    const [disableUser] = useMutation(LOCK_USER)\r\n    const [resetPwd] = useMutation(RESET_PWD)\r\n    const [confirmModal, toggleConfirmModal] = React.useState(false)\r\n    const [pwdModal, togglePwdModal] = React.useState(false)\r\n    // const [deleteUser] = useMutation(DELETE_USER, { refetchQueries: [LOAD_USER]})\r\n    \r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadUser({\r\n                variables: {\r\n                    _id: id\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [id, loadUser])\r\n\r\n    const confirmLock = async (disabled: boolean, title: string, content: string) => {\r\n        Modal.confirm({\r\n            title,\r\n            content,\r\n            visible: confirmModal,\r\n            onCancel: () => toggleConfirmModal(false),\r\n            onOk: () => {\r\n                disableUser({\r\n                    variables: {\r\n                        _id: data.loadUser._id,\r\n                        disabled\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const updatePwd = async (password: string, confirmPassword: string) => {\r\n        try {\r\n            await resetPwd({\r\n                variables: {\r\n                    _id: id,\r\n                    password,\r\n                    confirmPassword\r\n                }\r\n            })\r\n            message.success('Đặt lại mật khẩu thành công')\r\n            togglePwdModal(false)\r\n        } catch (error) {\r\n            message.error('Đặt lại mật khẩu không thành công')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <LoadinCenter />\r\n            )}\r\n            {data && data.loadUser && (\r\n                <div>\r\n                    <PageHeader\r\n                        onBack={() => history.push('/users')}\r\n                        title=\"Thông tin người dùng\"\r\n                        extra={[\r\n                            <Tooltip title=\"Khóa tài khoản\" id=\"1\">\r\n                                {!data.loadUser.disabled ?\r\n                                    <Button onClick={() => confirmLock(!data.loadUser.disabled, 'Khóa tài khoản', `Bạn có muốn khóa tài khoản người dùng ${data.loadUser.name} `)} danger type=\"text\" icon={<LockOutlined />} />\r\n                                    :\r\n                                    <Button onClick={() => confirmLock(!data.loadUser.disabled, 'Mở khóa tài khoản', `Bạn có muốn mở khóa tài khoản người dùng ${data.loadUser.name} `)} type=\"text\" icon={<UnlockOutlined />} />\r\n                                }\r\n                            </Tooltip>,\r\n                            <Tooltip title=\"Đặt lại mật khẩu\" id=\"2\">\r\n                                <Button onClick={() => togglePwdModal(true)} type=\"text\" icon={<KeyOutlined />} />\r\n                            </Tooltip>\r\n                        ]}\r\n                    />\r\n                    <UserInfo\r\n                        user={data.loadUser}\r\n                    />\r\n                    <ResetPwdModal\r\n                        visible={pwdModal}\r\n                        onCancel={() => togglePwdModal(false)}\r\n                        onOk={updatePwd}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default SingleUser","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  Button,\r\n  Dropdown\r\n} from 'antd'\r\nimport {\r\n  LogoutOutlined,\r\n  OrderedListOutlined,\r\n  SettingOutlined,\r\n  SnippetsOutlined,\r\n  SolutionOutlined,\r\n  UsergroupAddOutlined,\r\n  UserOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n  useLazyQuery,\r\n  gql\r\n} from '@apollo/client'\r\nimport {\r\n  User,\r\n  useAuth\r\n} from '../../context/AuthenticationContext'\r\nimport Main from './Main'\r\nimport {\r\n  useHistory,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  // useLocation\r\n} from 'react-router-dom'\r\nimport './home.css'\r\nimport {\r\n  LOAD_A_REPORT,\r\n  CREATE_A_REPORT,\r\n  APPROVE_R1,\r\n  MOVE_TO_R1,\r\n  REMOVE_FROM_REPORT,\r\n  LOAD_SINGLE_REPORT,\r\n  MARK_COMPLETED,\r\n  LOAD_B_REPORTS,\r\n  CREATE_BREPORT,\r\n  LOAD_SINGLE_B_REPORT,\r\n  MOVE_TO_R2,\r\n  APPROVE_B_REPORT,\r\n} from '../common/ClientQueries'\r\nimport SingleStudent from './SingleStudent'\r\nimport ReportOnes from './ReportOnes'\r\nimport SingleAttReport from './SingleReportOne'\r\nimport Profile from './Profile'\r\nimport UserMgt from './UserMgt'\r\nimport SingleUser from './SingleUser'\r\n\r\nconst {\r\n  // Sider,\r\n  Content,\r\n  Header\r\n} = Layout\r\n\r\nconst GET_USER = gql`\r\n  query me {\r\n    me{\r\n      _id\r\n      role\r\n      email\r\n      name\r\n      shouldChangePwd\r\n      profile {\r\n        avatar\r\n      }\r\n    }\r\n  }\r\n`\r\n// \r\nfunction Home() {\r\n  console.log('re-rendering')\r\n  const { setUser } = useAuth()\r\n  const history = useHistory()\r\n  const [loadUser, { loading, data, error }] = useLazyQuery(GET_USER, { onCompleted: (data: any) => {\r\n    const { me } = data\r\n    setUser(me as User)\r\n  }})\r\n  // const [sider, setSider] = React.useState(false);\r\n  const { logout } = useAuth()\r\n  // const location = useLocation()\r\n\r\n  React.useEffect(() => {\r\n    const load = async () => {\r\n      await  loadUser()\r\n      // if (data) {\r\n      //   const { me } = data\r\n      //   setUser(me as User)\r\n      // }\r\n    }\r\n    load()\r\n  }, [loadUser, setUser])\r\n  \r\n  const handleLogout = () => {\r\n    logout()\r\n    history.push('/login')\r\n  }\r\n  \r\n  // const onCollapse = (collapse: boolean) => setSider(collapse)\r\n\r\n  const menu = (\r\n    <Menu theme=\"dark\">\r\n      <Menu.Item icon={<UserOutlined />}>\r\n        <Link to=\"/profile\">\r\n          Đổi mật khẩu\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item icon={<LogoutOutlined />} onClick={() => handleLogout()}>Đăng xuất</Menu.Item>\r\n    </Menu>\r\n  )\r\n  \r\n  if (error) {\r\n    history.push('/login')\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <span>loading...</span>\r\n    )\r\n  }\r\n  if (!loading && !error && data) {\r\n    return (\r\n      <Layout className=\"homeContainer\">\r\n        <Header className=\"homeHeader\">\r\n          <div  style={{ flexGrow: 1 }} >\r\n            <Menu style={{fontSize: '16px'}} theme=\"dark\" mode=\"horizontal\">\r\n              <Menu.Item key=\"one\" icon={<SnippetsOutlined style={{fontSize: '16px'}} />}>\r\n                <Link to=\"/\">\r\n                  Hồ sơ\r\n                </Link>\r\n              </Menu.Item>\r\n              {data.me && (data.me.role === 'ADMIN' || data.me.role === 'MANAGER' || data.me.role === 'SUPER_ADMIN') && (\r\n                <Menu.Item key=\"two\" icon={<OrderedListOutlined style={{ fontSize: '16px' }} />}>\r\n                  <Link to=\"/rp1\">\r\n                    Báo cáo 1\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n              {data.me && (data.me.role === 'ADMIN' || data.me.role === 'MANAGER' || data.me.role === 'SUPER_ADMIN') && (\r\n                <Menu.Item key=\"three\" icon={<SolutionOutlined style={{ fontSize: '16px' }} />}>\r\n                  <Link to=\"/rp2\">\r\n                    Báo cáo 2\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n              {data.me && (data.me.role === 'SUPER_ADMIN') && (\r\n                <Menu.SubMenu title=\"Hệ thống\" icon={<SettingOutlined />}>\r\n                  <Menu.Item key=\"four\" icon={<UsergroupAddOutlined />}>\r\n                    <Link to=\"/users\">\r\n                      Người dùng\r\n                    </Link>\r\n                  </Menu.Item>\r\n                </Menu.SubMenu>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n          <Dropdown trigger={['click']} overlay={menu}>\r\n            <Button shape=\"round\" >{data.me.name}</Button>\r\n          </Dropdown>\r\n        </Header>\r\n        <Content className=\"homeContent\">\r\n          <Switch>\r\n            <Route path=\"/std/:id\" exact>\r\n              <SingleStudent />\r\n            </Route>\r\n            <Route path=\"/rp1\" exact>\r\n              <ReportOnes\r\n                type=\"BC1\"\r\n                title=\"Danh sách báo cáo 1\"\r\n                createQuery={{\r\n                  reportKey: 'loadAReport',\r\n                  query:CREATE_A_REPORT\r\n                }}\r\n                loadQuery={{\r\n                  reportKey: 'loadAReport',\r\n                  query: LOAD_A_REPORT\r\n                }}\r\n              />\r\n            </Route>\r\n            <Route path=\"/rp1/:id\" exact>\r\n              <SingleAttReport\r\n                type=\"BC1\"\r\n                dataKey=\"loadSingleAttReport\"\r\n                loadReport={LOAD_SINGLE_REPORT}\r\n                approveReport={APPROVE_R1}\r\n                markComplete={MARK_COMPLETED}\r\n                addStd={MOVE_TO_R1}\r\n                removeStd={REMOVE_FROM_REPORT}\r\n              />\r\n            </Route>\r\n            <Route path=\"/rp2\" exact>\r\n              <ReportOnes\r\n                  type=\"BC2\"\r\n                  title=\"Danh sách báo cáo 2\"\r\n                  createQuery={{\r\n                  reportKey: 'loadAReports',\r\n                  query: CREATE_BREPORT\r\n                }}\r\n                loadQuery={{\r\n                  reportKey: 'loadBreports',\r\n                  query: LOAD_B_REPORTS\r\n                }}/>\r\n            </Route>\r\n            <Route path=\"/rp2/:id\" exact>\r\n              <SingleAttReport\r\n                type=\"BC2\"\r\n                dataKey=\"loadSingleBReport\"\r\n                loadReport={LOAD_SINGLE_B_REPORT}\r\n                approveReport={APPROVE_B_REPORT}\r\n                markComplete={MARK_COMPLETED}\r\n                addStd={MOVE_TO_R2}\r\n                removeStd={REMOVE_FROM_REPORT}\r\n              />\r\n            </Route>\r\n            <Route path=\"/profile\" exact>\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/users\" exact>\r\n              <UserMgt />\r\n            </Route>\r\n            <Route path=\"/users/:id\" exact>\r\n              <SingleUser />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Main />\r\n            </Route>\r\n          </Switch>\r\n        </Content>\r\n      </Layout>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default Home\r\n\r\n","import React from 'react'\r\nimport {\r\n  gql,\r\n  useMutation,\r\n} from '@apollo/client'\r\nimport {\r\n  useAuth\r\n} from '../../context/AuthenticationContext'\r\nimport {\r\n  useHistory,\r\n} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  message\r\n} from 'antd'\r\nimport './LoginForm.css'\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      user {\r\n        _id\r\n        role\r\n        email\r\n        name\r\n      }\r\n      token\r\n      tokenExpiration\r\n    }\r\n  }\r\n`\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory()\r\n  const { setToken } = useAuth()\r\n  // const [passwordVisible, togglePasswordVisible] = React.useState(false)\r\n  const [login, { loading, error }] = useMutation(LOGIN)\r\n  // const handleClickShowPassword = () => togglePasswordVisible(!passwordVisible)\r\n  const [form] = Form.useForm()\r\n  \r\n  const onLogin = async (values: any) => {\r\n    await login({\r\n      variables: {\r\n        ...values\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (!res) {\r\n        message.error('Vui long kiem tra lai sdt/mk')\r\n      }\r\n      if (error) {\r\n        message.error('Đã có lỗi xẩy ra trong quá trình đăng nhập, vui lòng kiểm tra lại thông tin tài khoản')\r\n      }\r\n      const { data: { login: { token } } } = res\r\n      setToken(token)\r\n      history.push('/')\r\n    })\r\n    .catch(err => {\r\n      message.error('Đã có lỗi xẩy ra trong quá trình đăng nhập, vui lòng kiểm tra lại thông tin tài khoản')\r\n    })\r\n  }\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col xs={24} sm={12} lg={6}>\r\n        <Form onFinish={onLogin} className=\"loginForm\" form={form} layout=\"vertical\">\r\n          <Form.Item label=\"Email/SDT\" name=\"email\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"password\" label=\"password\">\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" loading={loading} htmlType=\"submit\">Login</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default LoginForm","import React from 'react'\r\nimport LoginForm from './LoginForm'\r\n\r\nfunction Login() {\r\n  return (\r\n    <div data-testid=\"login-container\">\r\n      <LoginForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport \"antd/dist/antd.css\"\r\nimport './App.css';\r\nimport AuthProvider from './context/AuthenticationContext';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport ProtectedRoute from './Utils/ProtectedRoute';\r\nimport Home from './components/Home'\r\nimport Login from './components/Login'\r\n\r\nexport interface AState {\r\n  people: {\r\n    name: String,\r\n    age: number,\r\n    url: string,\r\n    note: string\r\n  }[]\r\n}\r\nfunction App() {\r\n  // const [people, setPeople] = React.useState<AState['people']>([])\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <ProtectedRoute path=\"/\">\r\n            <Home />\r\n          </ProtectedRoute>\r\n        </Switch>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ApolloClient, InMemoryCache, ApolloLink, from } from '@apollo/client'\r\n// import { createUploadLink } from 'apollo-upload-client'\r\nconst { createUploadLink } = require('apollo-upload-client')\r\n\r\nconst uri = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_API : process.env.REACT_APP_PROD_API\r\nconst httpLink = new createUploadLink({ uri })\r\n// const httpLink = new createUploadLink()\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({headers = {} }) => ({\r\n    headers: {\r\n      ...headers,\r\n      'x-token': localStorage.getItem('ACCESS_TOKEN') || null\r\n    }\r\n  }));\r\n  return forward(operation);\r\n});\r\nexport const client = new ApolloClient({\r\n  // uri: 'https://countries-274616.ew.r.appspot.com/',\r\n  // uri: 'http://localhost:3000',\r\n  // headers: {\r\n  //   'x-token': localStorage.getItem('ACCESS_TOKEN') || ''\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      BasicPurchase: {\r\n        keyFields: ['_id']\r\n      },\r\n      PurchaseList: {\r\n        keyFields: ['__typename']\r\n      }\r\n    }\r\n  }),\r\n  link: from([\r\n    authMiddleware,\r\n    httpLink\r\n  ])\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloProvider } from '@apollo/client';\r\n\r\nimport {\r\n  client\r\n} from './Utils/ApolloClient'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}