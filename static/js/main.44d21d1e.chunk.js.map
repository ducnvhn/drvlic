{"version":3,"sources":["context/AuthenticationContext.tsx","Utils/ProtectedRoute.tsx","components/common/HangBang.tsx","components/Home/Main/LandingPage/CreateStudentDrawer/CreateStudentForm.tsx","components/Home/Main/LandingPage/CreateStudentDrawer/index.tsx","components/common/StudentStatus.tsx","components/Home/Main/LandingPage/StudentList/index.tsx","components/Home/Main/LandingPage/CreateStudentDrawer/FilterModal.tsx","components/common/LoadingCenter.tsx","components/Home/Main/Modals/ReportOneModal.tsx","components/common/ClientQueries.tsx","components/Home/Main/Modals/ConfirmPaymentModal.tsx","Utils/math.tsx","components/Home/Main/Modals/RefundList.tsx","components/Home/Main/index.tsx","components/Home/SingleStudent/Modals/ReserveModal.tsx","components/Home/SingleStudent/Modals/ReportListModal.tsx","components/Home/SingleStudent/Modals/SwapModal.tsx","components/Home/SingleStudent/Modals/ForceStatusModal.tsx","components/Home/SingleStudent/Header.tsx","components/Home/SingleStudent/StudentInfo/Basic.tsx","components/Home/SingleStudent/StudentInfo/Timeline.tsx","components/Home/SingleStudent/index.tsx","components/Home/ReportOnes/CreateReportModal.tsx","components/common/trangthai.tsx","components/Home/ReportOnes/ReportList/ReportList.tsx","components/Home/ReportOnes/Modals/FilterReportModal.tsx","components/common/utils.tsx","components/Home/ReportOnes/index.tsx","components/Home/SingleReportOne/AddStdModal.tsx","components/Home/SingleReportOne/FilterModal.tsx","components/Home/SingleReportOne/StudentsList.tsx","components/Home/SingleReportOne/index.tsx","components/Home/Profile/ChangePwdForm.tsx","components/Home/Profile/index.tsx","components/Home/UserMgt/MainComps/UsersList.tsx","components/Home/UserMgt/MainComps/CreateUserModal.tsx","components/Home/UserMgt/MainComps/FilterModal.tsx","components/Home/UserMgt/MainComps/Header.tsx","components/Home/UserMgt/index.tsx","components/Home/SingleUser/UserInfo.tsx","components/Home/SingleUser/ResetPwdModal.tsx","components/Home/SingleUser/index.tsx","components/Home/Report/comps/RecordsList.tsx","components/Home/Report/comps/RecordsHeader.tsx","components/Home/Report/index.tsx","components/Home/index.tsx","components/Login/LoginForm.tsx","components/Login/index.tsx","App.tsx","reportWebVitals.ts","Utils/ApolloClient.tsx","index.tsx"],"names":["roles","contextDefaultValue","authContext","createContext","AuthProvider","children","React","useState","user","setCurrentUser","Provider","value","setToken","token","localStorage","setItem","setUser","u","getUser","logout","getToken","getItem","useAuth","useContext","ProtectedRoute","rest","render","location","to","pathname","state","from","hangbang","Option","Select","UPLOAD_AVATAR","gql","fLayout","wrapperCol","span","labelCol","CreateStudentForm","createStudent","close","Form","useForm","form","imgList","setImgList","cmt1","setCmt1","cmt2","setCmt2","useMutation","uploadFile","creating","setCreating","onAvatarChange","key","file","newImgsList","fileList","onPreview","a","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","window","open","document","write","outerHTML","customUpload","field","onSuccess","variables","then","res","data","message","error","oldData","getFieldsValue","uploadAvatar","setFieldsValue","console","log","create","ngaysinh","moment","toDate","locale","viVN","Item","rules","required","name","label","format","placeholder","align","size","style","display","textAlign","modalTitle","aspect","customRequest","maxCount","listType","onChange","length","hidden","Object","keys","hangbangs","map","k","shape","loading","onClick","type","StudentDrawer","visible","onClose","width","title","status","StudentList","students","currentPage","setCurrentPage","pageSize","rowSelection","setSort","sort","columns","dataIndex","text","record","textDecoration","trangthai","CheckCircleTwoTone","twoToneColor","sorter","parseFloat","randomId","_","baocao1","role","_id","baocao2","direction","flexGrow","pagination","filters","extra","s","order","rowKey","spinning","indicator","LoadingOutlined","fontSize","dataSource","rowClassName","total","page","showSizeChanger","current","showQuickJumper","grades","FilterModal","onCancel","filter","onOk","setFilter","onOkPress","onFinish","g","LoadinCenter","marginTop","ReportListModal","onMove","query","dataKey","useLazyQuery","fetchPolicy","loadReports","moving","toggleMoving","useEffect","load","moveStds","report","reports","renderItem","item","actions","stdCount","cursor","Meta","description","desc","LOAD_SINGLE_STD","REQUEST_CONFIRM_PAYMENT","CONFIRM_PAYMENT","REQUEST_WITHDRAW","CONFIRM_WITHDRAW","CANCEL_WITHDRAW_REQUEST","DELETE_STUDENT","MOVE_TO_R1","CANCEL_REQUEST_RESERV","CONFIRM_RESERVE_BC1","LOAD_A_REPORT","APPROVE_RESERV","APPROVE_R1","REMOVE_FROM_REPORT","LOAD_SINGLE_REPORT","MARK_COMPLETED","REQUEST_CONFIRM_P_2","CONFIRM_PAYMENT_TWO","REQUEST_RESERVE_RESULT","CANCEL_RESERVE_RESULT","CREATE_A_REPORT","CONFIRM_RESERVE_RESULT","REQUEST_RETURN_RESULT","CREATE_BREPORT","LOAD_B_REPORTS","LOAD_SINGLE_B_REPORT","MOVE_TO_R2","APPROVE_B_REPORT","REJECT_WD_FN","CONFIRM_WD_GD","REJECT_WD_GD","MARK_GRAD","MARK_FAIL","MARK_FOR_RETEST","RESERVE_RESULT","ADMIN_CONFIRM_RETURN","ADMIN_MARK_FINISH","ADMIN_MARK_REMOVE","ADMIN_MARK_FINAL_FAIL","TEACHER_REQUEST_CONFIRM_RETEST_FEE","ADM_CONFIRM_RETEST_FEE","T_REQUEST_SWAP","ADM_CONFIRM_SWAP","FORCE_STATUS","LOAD_RECORDS","CPModal","confirm","command","selected","working","toggleWorking","onConfirm","amount","Error","okButtonProps","addonBefore","numberWithCommas","x","toString","replace","RefundModal","student","refund","ten","CREATE_STUDENT","LOAD_STUDENTS","TLandingPage","createDrw","toggleCreateDrw","refetchQueries","loadStudents","loadingStudents","onCompleted","exportFile","exportXLSX","exporting","filterModal","toggleFilterModal","reportModal","toggleReportModal","bc2Modal","toggleBC2Modal","moveR1","moveR2","requestConfirmP","confirmP","requestWD","cfWithdraw","requestConfirmP2","confirmP2","markComplete","requestReturnResult","rejectWDFN","acceptWDGD","rejectWDGD","markGrad","markFail","markforretest","reserveResult","admConfirmReturn","admMarkFinish","admMarkRemove","admMarkFinalFail","tRequestCRF","admCFRF","refundModal","toggleRefundModal","mobile","created","setSelected","withdrawModal","toggleWDRModal","cpModal","toggleCPModal","cpModalTitle","setCPModalTitle","confirmCmd","setConfirmCmd","limit","createStd","notFilterEmpty","matchingKey","find","Boolean","selectedRowKeys","doActionWithConfirm","msg","Modal","content","e","doAction","confirmFinalFail","reason","ws","XLSX","utils","json_to_sheet","std","StudentStatus","wb","book_new","book_append_sheet","writeFile","onExportClick","MenuOption","theme","icon","PlusOutlined","SubMenu","CaretLeftFilled","DollarOutlined","PoundOutlined","TransactionOutlined","RollbackOutlined","ReloadOutlined","OrderedListOutlined","UnorderedListOutlined","CheckOutlined","DeleteOutlined","CheckSquareOutlined","ExclamationOutlined","RetweetOutlined","CheckCircleOutlined","color","extras","DownloadOutlined","danger","FilterOutlined","trigger","overlay","EllipsisOutlined","indexOf","ReserveModal","rStatus","AvailableReportModal","LOAD_SWAP_STDS","SwapModal","requestSwp","loadingStd","onSwap","replacement","success","ForceStatusModal","Header","moveToR1","deleteStudent","loadingReport","movetoR2","confirmAction","markFailed","changeStatus","reservModal","toggleReservModal","deleteModal","toggleDeleteModdal","r2Modal","toggleR2Modal","swapModal","toggleSwapModal","statusModal","toggleStatusModal","confirmCMD","setConfirmCMD","cpTitle","setCPTitle","confirmP1","confirmWithdraw","history","useHistory","confirmReserv","confirmDelete","confirmMoveToR1","confirmMoveR2","switchStatus","subTitle","items","push","disabled","DollarCircleOutlined","UsergroupAddOutlined","SwapOutlined","CalendarOutlined","CloseOutlined","DeleteTwoTone","CheckCircleFilled","ExclamationCircleOutlined","InfoCircleOutlined","FieldTimeOutlined","createMenu","onBack","goBack","Title","Typography","BasicInfo","layout","level","quequan","anh34","redStatus","successStatus","pendingSts","StudentTimeline","mode","h","Icon","RightCircleOutlined","ClockCircleOutlined","dot","date","SingleStudent","id","useParams","confirmModal","toggleConfirmModal","loadStd","requestConfirmPayment","loadAReports","loadAReport","loadingReports","cancelWithdraw","delStudent","mover1","cancelRequestResrv","confirmRequestResrv","confirmPaymentTwo","requestReserveResult","cancelReserveResult","confirmReserveResult","confirmWDGD","markForRetest","reservResult","confirmReturn","markFinish","markRemove","admMarkFFail","fnConfirmRF","admConfirmSwp","forceStatus","commands","action","modalContent","loadSingleStd","sm","md","Basic","CreateReportModal","toggleCreating","onCreate","trangthaibaocao","ReportList","trangthais","ReportFileterModal","hb","ReportOnes","createQuery","loadQuery","createReportOne","createMdl","toggleCreateMdl","reportData","setPage","createReport","reportKey","SEARCH_STUDENTS_4_BC1","AddStdModal","searchTimeout","searchStds","searchStd4bc1","adding","toggleAdding","onKeywordChange","clearTimeout","setTimeout","target","add","idx","concat","onStudentClick","MobileOutlined","IdcardOutlined","toggleLoading","changeFilter","StudentsList","removeStudents","addStudents","markComp","removeModal","toggleRemoveModal","addModal","toggleAddModal","__","index","t","remove","MinusOutlined","stds","SingleAttReport","loadReport","approveReport","addStd","removeStd","params","loadR","approveR","approving","markCompleted","addToR1","removeStds","update","approve","column","createdBy","CHANGE_PWD","PasswordForm","changePwd","currentPwd","newPwd","confirmNewPwd","resetFields","Password","Profile","justify","xs","lg","UsersList","users","deleteUser","deleting","toggleDeleting","LockOutlined","_text","CreateUserModal","createU","createUser","SettingHeader","createModal","toggleCreateModal","userInput","isFilterEmpty","values","every","f","email","SearchOutlined","LOAD_USERS","CREATE_USER","DELETE_USER","UserMgt","loadUsers","loadUsersR","BasicInfor","ResetPwdModal","setPwd","password","confirmPassword","min","LOAD_USER","LOCK_USER","RESET_PWD","SingleUser","loadUser","disableUser","resetPwd","pwdModal","togglePwdModal","confirmLock","updatePwd","UnlockOutlined","KeyOutlined","UserInfo","reasons","RecordsList","records","totalRecords","RangePicker","DatePicker","RecordHeader","start","setStart","end","setEnd","defaultPickerValue","startOf","endOf","d","onOpenChange","Report","loadRecords","Content","Layout","GET_USER","Home","me","menu","UserOutlined","LogoutOutlined","className","SnippetsOutlined","SolutionOutlined","SettingOutlined","MoneyCollectOutlined","path","exact","Main","LOGIN","LoginForm","login","onLogin","catch","err","htmlType","Login","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createUploadLink","require","uri","process","authMiddleware","ApolloLink","operation","forward","setContext","headers","client","ApolloClient","cache","InMemoryCache","typePolicies","BasicPurchase","keyFields","PurchaseList","link","ReactDOM","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.44d21d1e.chunk.js","sourcesContent":["import React, { createContext, useContext } from 'react'\r\n\r\nexport enum roles {OWNER = 'OWNER', AGENT='AGENT'}\r\n\r\nexport interface User {\r\n  email: string\r\n  expDate: String | null\r\n  name: String\r\n  profile: {\r\n    avatar: string\r\n  },\r\n  role: string\r\n  _id: string\r\n}\r\n\r\ntype TAuthContext = {\r\n  setUser:(user: User) => void,\r\n  getUser: () => User,\r\n  setToken: (token:string) => void,\r\n  logout: () => void,\r\n  getToken: () => string,\r\n  // setToken: \r\n}\r\n\r\nconst contextDefaultValue: TAuthContext = { } as TAuthContext\r\n\r\nconst authContext = createContext(contextDefaultValue)\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setCurrentUser] = React.useState({} as User)\r\n  const setToken = (token: string) => localStorage.setItem('ACCESS_TOKEN', token)\r\n  const getToken = () => localStorage.getItem('ACCESS_TOKEN') || ''\r\n  const setUser = (u: User) => setCurrentUser(u)\r\n  const getUser = () => user\r\n  const logout = () => localStorage.setItem('ACCESS_TOKEN', '')\r\n  return (\r\n    <authContext.Provider value={{ setToken, setUser, getUser, logout, getToken}}>\r\n      {children}\r\n    </authContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthProvider\r\nexport const useAuth = () => useContext(authContext)","import React from 'react'\r\nimport {\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport {\r\n  useAuth\r\n} from '../context/AuthenticationContext'\r\n\r\ninterface IProps {\r\n  path: string\r\n}\r\n\r\nconst ProtectedRoute: React.FC<IProps> = ({ children, ...rest }) => {\r\n  const { getToken } = useAuth()\r\n  const token = getToken()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        token && token!=='' ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","const hangbang = {\r\n    'A1': 'Lái xe moto, xe gắn máy dưới 175cm3',\r\n    'A2': 'Lái xe moto, xe gắn máy trên 175cm3',\r\n    'B1': 'Lái xe ô tô dưới 9 chỗ - không KD',\r\n    'B2': 'Lái xe ô to trên 9 chỗ - kinh doanh',\r\n    'C': 'Lái xe tải dưới xxx kg',\r\n    'D': 'Lái xe tải - trên xxx kg',\r\n    'E': 'Lái xe tải bự',\r\n    'F': 'Lái xe container, xe đầu kéo xxx',\r\n}\r\nexport default hangbang","import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Upload,\r\n    ConfigProvider,\r\n    Button,\r\n    Space,\r\n    message,\r\n    Select\r\n} from 'antd'\r\nimport ImgCrop from 'antd-img-crop'\r\nimport {\r\n    gql,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport viVN from 'antd/lib/locale/vi_VN'\r\nimport moment from 'moment'\r\nimport hangbangs from '../../../../common/HangBang'\r\n\r\nconst {Option} = Select\r\n\r\nconst UPLOAD_AVATAR = gql`\r\n    mutation uploadAvatar($file: Upload!) {\r\n        uploadAvatar(file: $file) {\r\n            url\r\n        }\r\n    }\r\n`\r\n\r\nconst fLayout = {\r\n    wrapperCol: { span: 18 },\r\n    labelCol: { span: 6 }\r\n}\r\ninterface CTypes {\r\n    createStudent: (data: any) => void\r\n    close: () => void\r\n}\r\nconst CreateStudentForm: React.FC<CTypes> = ({\r\n    createStudent,\r\n    close\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [imgList, setImgList] = React.useState([])\r\n    const [cmt1, setCmt1] = React.useState([])\r\n    const [cmt2, setCmt2] = React.useState([])\r\n    const [uploadFile] = useMutation(UPLOAD_AVATAR)\r\n    const [creating, setCreating] = React.useState(false)\r\n    const onAvatarChange = (key: string, { file, fileList: newImgsList }: any) =>  {\r\n        if (key === 'anh34') {\r\n            setImgList(newImgsList)\r\n        }\r\n        if (key === 'cmt1') {\r\n            setCmt1(newImgsList)\r\n        }\r\n        if (key === 'cmt2') {\r\n            setCmt2(newImgsList)\r\n        }\r\n    }\r\n    const onPreview = async (file:any) => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow:any = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n    const customUpload = async (field:string, { file, onSuccess }: any) => {\r\n        await uploadFile({\r\n            variables: {\r\n                file\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res || !res.data) {\r\n                message.error('Không tải lên được hình ảnh')\r\n            }\r\n            // console.log(res)\r\n            const oldData = form.getFieldsValue()\r\n            oldData[field] = res.data.uploadAvatar.url\r\n            form.setFieldsValue(oldData)\r\n            console.log(oldData)\r\n        })\r\n        onSuccess('ok')\r\n    }\r\n    const create = async () => {\r\n        setCreating(true)\r\n        try {\r\n            const data = form.getFieldsValue()\r\n            console.log(data)\r\n            await createStudent({\r\n                ...data,\r\n                ngaysinh: moment(data.ngaysinh).toDate()\r\n            })\r\n        } catch (e) {\r\n            message.error('Đã có lỗi trong quá trình xử lý, vui lòng thử lại sau')\r\n        }\r\n        setCreating(false)\r\n        form.setFieldsValue({})\r\n        close()\r\n    }\r\n    return (\r\n        <ConfigProvider locale={viVN}>\r\n            <Form form={form} {...fLayout}>\r\n                <Form.Item rules={[\r\n                    {\r\n                        required: true,\r\n                        message: \"Bắt buộc phải có\"\r\n                    }\r\n                ]} name=\"ten\" label=\"Họ và tên học viên\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"ngaysinh\" label=\"Ngày tháng năm sinh\" rules={[{required: true, message: \"Bắt buộc phải có\"}]}>\r\n                    <DatePicker\r\n                        format=\"DD/MM/YYYY\"\r\n                        placeholder=\"Chọn ngày tháng năm sinh\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name=\"quequan\" label=\"Quê Quán\" rules={[{ required: true, message: 'Trường bắt buộc' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Upload Ảnh\">\r\n                    <Space align=\"center\" size=\"large\">\r\n                        <div style={{ display: \"block\", textAlign: 'center'}}>\r\n                            <p>Ảnh thẻ 3x4</p>\r\n                            <ImgCrop\r\n                                modalTitle=\"căn chỉnh ảnh\"\r\n                                aspect={3 / 4}\r\n                            >\r\n                                <Upload\r\n                                    customRequest={(data) => customUpload('anh34', data)}\r\n                                    maxCount={1}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={imgList}\r\n                                    onChange={(data) => onAvatarChange('anh34', data)}\r\n                                    onPreview={onPreview}\r\n                                    >\r\n                                    {imgList.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </div>\r\n                        <div style={{ display: \"block\", textAlign: 'center'}}>\r\n                            <p>Ảnh mặt trước CMT</p>\r\n                            <ImgCrop\r\n                                modalTitle=\"căn chỉnh ảnh\"\r\n                                aspect={5 / 3}\r\n                                >\r\n                                <Upload\r\n                                    customRequest={(data) => customUpload('cmt1', data)}\r\n                                    maxCount={2}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={cmt1}\r\n                                    onChange={(data) => onAvatarChange('cmt1', data)}\r\n                                    onPreview={onPreview}\r\n                                    >\r\n                                    {cmt1.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </div>\r\n                        <div style={{ display: \"block\", textAlign: 'center'}}>\r\n                            <p>Ảnh mặt sau CMT</p>\r\n                            <ImgCrop\r\n                                modalTitle=\"căn chỉnh ảnh\"\r\n                                aspect={5 / 3}\r\n                            >\r\n                                <Upload\r\n                                    customRequest={(data) => customUpload('cmt2', data)}\r\n                                    maxCount={1}\r\n                                    listType=\"picture-card\"\r\n                                    fileList={cmt2}\r\n                                    onChange={(data) => onAvatarChange('cmt2', data)}\r\n                                    onPreview={onPreview}\r\n                                >\r\n                                    {cmt2.length < 1 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </div>\r\n                    </Space>\r\n                </Form.Item>\r\n                <Form.Item hidden name=\"anh34\" label=\"Ảnh 3 x 4\" rules={[{ required: true, message: 'Phải có một ảnh 3x4'}]} />\r\n                <Form.Item hidden name=\"cmt1\" label=\"Ảnh CMT/CCCD mặt trước\" rules={[{ required: true, message: 'Phải có một ảnh' }]} />\r\n                <Form.Item hidden name=\"cmt2\" label=\"Ảnh CMT/CCCD mặt sau\" rules={[{ required: true, message: 'Phải có một ảnh' }]} />\r\n                <Form.Item label=\"Hạng bằng lái\" name=\"hangbang\">\r\n                    <Select>\r\n                        {Object.keys(hangbangs).map(k => (\r\n                            <Option value={k} key={k}>{`${k} - ${hangbangs[k as keyof Object]}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"mobile\" label=\"Số Điện thoại\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Space>\r\n                    <Button shape=\"round\" loading={creating} onClick={() => create()} type=\"primary\">Tạo hồ sơ</Button>\r\n                    <Button shape=\"round\" onClick={() => close()}>Hủy</Button>\r\n                </Space>\r\n            </Form>\r\n        </ConfigProvider>\r\n    )\r\n}\r\nexport default CreateStudentForm","import React from 'react'\r\nimport {\r\n    Drawer,\r\n} from 'antd'\r\nimport CreateStudentForm from './CreateStudentForm'\r\n\r\n\r\ninterface CTypes {\r\n    visible: boolean\r\n    onClose: () => void\r\n    createStudent: (data: any) => void\r\n}\r\nconst StudentDrawer: React.FC<CTypes> = ({\r\n    visible,\r\n    onClose,\r\n    createStudent\r\n}) => {\r\n    return (\r\n        <Drawer\r\n            visible={visible}\r\n            onClose={onClose}\r\n            width=\"700\"\r\n            title=\"Tạo Hồ Sơ mới\"\r\n        >\r\n            <CreateStudentForm close={onClose} createStudent={createStudent} />\r\n        </Drawer>\r\n    )\r\n}\r\nexport default StudentDrawer\r\n","const status:Record<string,string> = {\r\n    'MOI_TAO': \"Hồ sơ mới\",\r\n    'CHO_XAC_NHAN_TT1': \"Chờ XNTT đợt 1\",\r\n    'CHO_VAO_BC_1': \"Chờ vào BC1\",\r\n    'DANG_TRONG_BC_1': \"Đã xếp vào BC1\",\r\n    // 'YEU_CAU_RUT_HS': \"Đang YC rút hồ sơ\",\r\n    'CHO_XN_HOAN_HUY_FN': \"Chờ kế toán XN rút HS\",\r\n    'CHO_XN_HOAN_HUY_GD': \"Chờ GD phê duyệt rút HS\",\r\n    'DA_RUT_HS': \"Đã rút HS\",\r\n    'DANG_YC_DOI_CHO': \"Đang yêu cầu đổi chỗ\",\r\n    'XAC_NHAN_BC_1': \"Đang học\",\r\n    // 'YEU_CAU_BAO_LUU_HOC':,\r\n    // 'DANG_BAO_LUU_HOC':,\r\n    'DA_HOC_XONG': \"Hoàn thành học\",\r\n    'DA_BO_HOC': \"Đã bỏ\",\r\n    'CHO_XAC_NHAN_TT2': \"Chờ XNTT đợt 2\",\r\n    'CHO_THI_TN': \"Chờ thi TN\",\r\n    'TRUOT_TN': 'Trượt Tốt nghiệp',\r\n    'CHO_VAO_BC_2': \"Chờ vào BC2\",\r\n    // 'YEU_CAU_BAO_LUU_THI':,\r\n    'DANG_BAO_LUU_THI': \"Đang bảo lưu\",\r\n    'DANG_YC_QUAY_LAI_THI': \"Đang yêu cầu quay lại thi\",\r\n    'DANG_TRONG_BC_2': \"Đang trong BC2\",\r\n    // 'XAC_NHAN_BC_2':,\r\n    'THI_TRUOT_LT': \"Thi trượt lý thuyết\",\r\n    'THI_TRUOT_SH': \"Thi trượt sa hình\",\r\n    'THI_TRUOT_DT': \"Thi trượt đường trường\",\r\n    'CHO_XNTT_TL_LT': 'Chờ XNTT thi lại lý thuyết',\r\n    'CHO_XNTT_TL_SH': 'Chờ XNTT thi lại sa hình',\r\n    'CHO_XNTT_TL_DT': 'Chờ XNTT thi lại đường trường',\r\n    'HOAN_THANH': \"Đã hoàn thành\"\r\n}\r\nexport default status","import React from 'react'\r\nimport moment from 'moment'\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Space\r\n} from 'antd'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\nimport {\r\n    LoadingOutlined,\r\n    CheckCircleTwoTone \r\n} from '@ant-design/icons';\r\nimport './style.css'\r\nimport status from '../../../../common/StudentStatus'\r\nimport {\r\n    useAuth\r\n} from '../../../../../context/AuthenticationContext'\r\nimport { ColumnGroupType, ColumnType } from 'antd/lib/table';\r\n\r\ninterface cType {\r\n    students: {\r\n        students:any[]\r\n        total: number\r\n    }\r\n    loading: boolean\r\n    currentPage: number\r\n    pageSize: number\r\n    setCurrentPage: (page: number) => void\r\n    rowSelection: {\r\n        onChange: (keys: any) => void\r\n        selectedRowKeys: string[]\r\n    },\r\n    sort: Record<string,any>\r\n    setSort: (sort: Record<string, any>) => void\r\n}\r\n\r\nconst StudentList:React.FC<cType> = ({\r\n    students,\r\n    loading,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    rowSelection,\r\n    sort,\r\n    setSort\r\n}) => {\r\n    // const [selected, setSelected] = React.useState<string[]>([])\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const columns:any = [\r\n        {\r\n            title: 'Mã hồ sơ',\r\n            dataIndex: 'randomId',\r\n            render: (text:string, record: any) => {\r\n                return (\r\n                    <Space style={{ textDecoration: record.trangthai === 'DA_RUT_HS' ? 'line-through': 'none'}}>\r\n                        {record.trangthai === 'HOAN_THANH' && <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> }\r\n                        {text}\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Ngày tạo',\r\n            dataIndex: 'created',\r\n            sorter: true, \r\n            render: (text: string) => <span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: ['ten'],\r\n            render: (text: string, record: any) =><Link to={`/std/${record.randomId}`}>{text}</Link>\r\n        },\r\n        {\r\n            title: 'Ngày sinh',\r\n            dataIndex: 'ngaysinh',\r\n            render: (text: string) => {\r\n                return (<span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'Số Điện thoại',\r\n            dataIndex: 'mobile'\r\n        },\r\n        {\r\n            title: 'Hạng bằng lái',\r\n            dataIndex: 'hangbang'\r\n        },\r\n        {\r\n            title: 'Trạng Thái',\r\n            dataIndex: 'trangthai',\r\n            render: (text: string) => {\r\n                \r\n                return <span>{status[text as keyof Object]}</span>\r\n            }\r\n        },\r\n        {\r\n            title: 'Báo cáo 1',\r\n            render: (_: string, record: any) => {\r\n                if (record.baocao1) {\r\n                    if (user.role === 'TEACHER') {\r\n                        return <span>{record.baocao1.name}</span>\r\n                    } else {\r\n                        return (<Link to={`/rp1/${record.baocao1._id}`}>{record.baocao1.name}</Link>)\r\n\r\n                    }\r\n                }\r\n                return (<span>----</span>)\r\n            }\r\n        },\r\n        {\r\n            title: 'Báo cáo 2',\r\n            render: (_: string, record: any) => {\r\n                if (record.baocao2) {\r\n                    if (user.role === 'TEACHER') {\r\n                        return <span>{record.baocao1.name}</span>\r\n                    }\r\n                    if (user.role === 'MANAGER' || user.role === 'ADMIN') {\r\n                        return (<Link to={`/rp1/${record.baocao2._id}`}>{record.baocao2.name}</Link>)\r\n                    }\r\n                }\r\n                return (<span>----</span>)\r\n            }\r\n        }\r\n    ]\r\n    // const rowSelection = {\r\n    //     onChange: (keys: any) => setSelected(keys),\r\n    //     selectedRowKeys: selected\r\n    // }\r\n    return (\r\n        <div style={{display: 'flex'}}>\r\n            <Space direction=\"vertical\" size=\"large\" style={{flexGrow: 1}}>\r\n                <Table\r\n                    onChange={(pagination, filters, sorter:any, extra) => {\r\n                        if (sorter) {\r\n                            let s:Record<string,any> = {}\r\n                            s[sorter.field as keyof Object] = sorter.order === 'descend' ? 1 : -1\r\n                            setSort(s)\r\n                        }\r\n                    }}\r\n                    rowKey=\"_id\"\r\n                    loading={{\r\n                        spinning: loading,\r\n                        indicator: <LoadingOutlined style={{fontSize: 24}} />\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={students.students}\r\n                    pagination={false}\r\n                    rowClassName={(record:any) => {\r\n                        if (record.trangthai === 'DA_RUT_HS') {\r\n                            return 'disabledStudent'\r\n                        }\r\n                        if (record.trangthai === 'DA_BO_HOC') {\r\n                            return 'disabledStudent'\r\n                        }\r\n                        return ''\r\n                    }}\r\n                    rowSelection={rowSelection}\r\n                />\r\n                {students.total > pageSize && (\r\n                    <Pagination\r\n                        onChange={(page) => setCurrentPage(page)}\r\n                        showSizeChanger={false}\r\n                        current={currentPage}\r\n                        total={students.total}\r\n                        pageSize={pageSize}\r\n                        size=\"small\"\r\n                        showQuickJumper={false}\r\n                    />\r\n                )}\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\nexport default StudentList","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\nimport status from '../../../../common/StudentStatus'\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void,\r\n    filter: Record<string,any>\r\n    setFilter: (filter: Record<string,any>) => void\r\n}\r\n\r\n\r\nconst grades = [\r\n    'A1',\r\n    'A2',\r\n    'B1',\r\n    'B2',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F'\r\n]\r\n\r\nconst FilterModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    filter,\r\n    setFilter\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    form.setFieldsValue(filter)\r\n\r\n    const onOkPress = () => {\r\n        setFilter({\r\n            ...form.getFieldsValue()\r\n        })\r\n        onCancel()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Lọc hồ sơ\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onOkPress}\r\n        >\r\n            <Form form={form} onFinish={onOkPress} labelCol={{ span: 6 }} wrapperCol={{span: 18}} >\r\n                <Form.Item label=\"Mã hồ sơ\" name=\"randomId\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"ten\" label=\"Tên học viên\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"mobile\" label=\"Số điện thoại\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"hangbang\" label=\"Hạng bằng lái\">\r\n                    <Select>\r\n                        {grades.map(g=> (\r\n                            <Select.Option key={g} value={g}>{g}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"trangthai\" label=\"Trạng thái hồ sơ\">\r\n                    <Select>\r\n                        {Object.keys(status).map((state) => (\r\n                            <Select.Option key={state} value={state}>{status[state]}</Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default FilterModal","import React from 'react'\r\nimport {\r\n    Spin\r\n} from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst LoadinCenter = () => {\r\n    return (\r\n        <div style={{\r\n            textAlign: 'center',\r\n            marginTop: '5em'\r\n        }}>\r\n            <Spin\r\n                indicator={(\r\n                    <LoadingOutlined style={{fontSize: 24}} />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default LoadinCenter\r\n","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List\r\n} from 'antd'\r\nimport {\r\n    // gql,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../../common/LoadingCenter'\r\n\r\n// const LOAD_A_REPORT = gql`\r\n//     query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n//         loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n//             reports {\r\n//                 _id\r\n//                 hangbang\r\n//                 name\r\n//                 desc\r\n//                 status\r\n//                 createdBy {\r\n//                     name\r\n//                 },\r\n//                 stdCount\r\n//                 created\r\n//             }\r\n//             total\r\n//         }\r\n//     }\r\n// `\r\n\r\ntype ModalType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void,\r\n    onMove: (report: string) => void\r\n    query: any\r\n    dataKey: string\r\n}\r\n\r\nconst ReportListModal:React.FC<ModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    onMove,\r\n    query,\r\n    dataKey\r\n}) => {\r\n    const [loadReports, { loading, data }] = useLazyQuery(query,{fetchPolicy: 'network-only'})\r\n    const [moving, toggleMoving] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadReports({\r\n                variables: {\r\n                    filter: {\r\n                        status: 'PENDING',\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if (visible) {\r\n            load()\r\n        }\r\n    }, [visible, loadReports])\r\n\r\n    const moveStds = async (report: string) => {\r\n        toggleMoving(true)\r\n        await onMove(report)\r\n        toggleMoving(false)\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onOk}\r\n            title=\"Chọn báo cáo\"\r\n        >\r\n            {(loading || moving) && (\r\n                <LoadinCenter />\r\n            )}\r\n            {data && data[dataKey as keyof Object] && (\r\n                <List\r\n                    dataSource={data[dataKey as keyof Object].reports}\r\n                    renderItem={(item: any) => (\r\n                        <List.Item\r\n                            onClick={() => moveStds(item._id)}\r\n                            actions={[\r\n                                <strong>{item.stdCount}</strong>\r\n                            ]}\r\n                            style={{cursor: 'pointer'}}\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={item.name}\r\n                                description={item.desc}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\nexport default ReportListModal","import {\r\n    gql\r\n} from '@apollo/client'\r\n\r\nexport const LOAD_SINGLE_STD = gql`\r\n    query loadSingle($id: String!) {\r\n        loadSingleStd(id: $id) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            refund\r\n            history {\r\n                state\r\n                date\r\n                reason\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            baocao2 {\r\n                name\r\n                _id\r\n            }\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const REQUEST_CONFIRM_PAYMENT = gql`\r\n    mutation requestConfirmPayment($students: [String]!) {\r\n        requestConfirmPayment (students: $students) {\r\n           randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CONFIRM_PAYMENT = gql`\r\n    mutation confirmPayment($students: [String]!, $amount: Float) {\r\n        confirmPayment (students: $students, amount: $amount) {\r\n           randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const REQUEST_WITHDRAW = gql`\r\n    mutation requestWithdraw($students: [String]!) {\r\n        requestWithdraw(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CONFIRM_WITHDRAW = gql`\r\n    mutation confirmWithdraw($students: [String]!, $amount: Float) {\r\n        confirmWithdraw(students: $students, amount: $amount) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CANCEL_WITHDRAW_REQUEST = gql`\r\n    mutation cancelWithDraw($students: [String]!) {\r\n        cancelWithDraw(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const DELETE_STUDENT = gql`\r\n    mutation deleteStudent($student: String!) {\r\n        deleteStudent(student: $student)\r\n    }\r\n`\r\nexport const MOVE_TO_R1 = gql`\r\n    mutation moveToR1($students: [String], $report: String!) {\r\n        moveToR1(students: $students, report: $report)\r\n    }\r\n`\r\nexport const REQUEST_RESERVE = gql`\r\n    mutation requestResrv($students: [String]!) {\r\n        requestResrv (students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CANCEL_REQUEST_RESERV = gql`\r\n    mutation cancelRequestResrv($students: [String]!) {\r\n        cancelRequestResrv(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const CONFIRM_RESERVE_BC1 = gql`\r\n    mutation confirmReserveBC1($students: [String]!) {\r\n        confirmReserveBC1(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const REQUEST_TO_RETURN = gql`\r\n    mutation requestToReturn($students: [String]!) {\r\n        requestToReturn(students: $students) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const LOAD_A_REPORT = gql`\r\n    query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n        loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n            reports {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                },\r\n                stdCount\r\n                created\r\n            }\r\n            total\r\n        }\r\n    }\r\n`\r\nexport const APPROVE_RESERV = gql`\r\n    mutation confirmWithdraw($students: [String]!, $amount: Float) {\r\n        confirmWithdraw(students: $students, amount: $amount) {\r\n            _id\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n                _id\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nexport const APPROVE_R1 = gql`\r\n    mutation approveReport($report: String!) {\r\n        approveReport(report: $report)\r\n    }\r\n`\r\nexport const REMOVE_FROM_REPORT = gql`\r\n    mutation removeFromAttReport($students: [String], $report: String!) {\r\n        removeFromAttReport(students: $students, report: $report)\r\n    }\r\n`\r\n\r\nexport const LOAD_SINGLE_REPORT = gql`\r\n    query loadSingleAttReport($report: String!, $filter: FilterInput) {\r\n        loadSingleAttReport(report: $report, filter: $filter) {\r\n            report {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n            }\r\n            students {\r\n                _id\r\n                randomId\r\n                ten\r\n                ngaysinh\r\n                hangbang\r\n                mobile\r\n                trangthai\r\n                # baoluu\r\n                baocao1 {\r\n                    name\r\n                    _id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const MARK_COMPLETED = gql `\r\n    mutation markCompleted($students: [String]!) {\r\n        markCompleted(students: $students)\r\n    }\r\n`\r\n\r\nexport const REQUEST_CONFIRM_P_2 = gql `\r\n    mutation requestConfirmPaymentTwo($students: [String]!) {\r\n        requestConfirmPaymentTwo(students: $students)\r\n    }\r\n`\r\n\r\nexport const CONFIRM_PAYMENT_TWO = gql `\r\n    mutation confirmPaymentTwo($students: [String]!, $amount: Float) {\r\n        confirmPaymentTwo(students: $students, amount: $amount)\r\n    }\r\n`\r\n\r\nexport const REQUEST_RESERVE_RESULT = gql `\r\n    mutation requestReserveResult($students: [String]!) {\r\n        requestReserveResult(students: $students)\r\n    }\r\n`\r\nexport const CANCEL_RESERVE_RESULT = gql `\r\n    mutation cancelReserveResult($students: [String]!) {\r\n        cancelReserveResult(students: $students)\r\n    }\r\n`\r\nexport const CREATE_A_REPORT = gql`\r\n    mutation createAReport($report: ReportOneInput) {\r\n        createAReport(report: $report) {\r\n            _id\r\n            hangbang\r\n            name\r\n            desc\r\n            status\r\n            created\r\n            createdBy {\r\n                name\r\n            },\r\n            stdCount\r\n        }\r\n    }\r\n`\r\n// const LOAD_A_REPORT = gql`\r\n//     query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n//         loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n//             reports {\r\n//                 _id\r\n//                 hangbang\r\n//                 name\r\n//                 desc\r\n//                 status\r\n//                 createdBy {\r\n//                     name\r\n//                 },\r\n//                 stdCount\r\n//                 created\r\n//             }\r\n//             total\r\n//         }\r\n//     }\r\n// `\r\n\r\nexport const CONFIRM_RESERVE_RESULT = gql `\r\n    mutation confirmReserveResult($students: [String]!) {\r\n        confirmReserveResult(students: $students )\r\n    }\r\n`\r\n\r\nexport const REQUEST_RETURN_RESULT = gql `\r\n    mutation requestReturnResult($students: [String]!) {\r\n        requestReturnResult(students: $students )\r\n    }\r\n`\r\nexport const CREATE_BREPORT = gql `\r\n    mutation createBreport($report: ReportOneInput!) {\r\n        createBreport(report: $report) {\r\n            _id\r\n            hangbang\r\n            name\r\n            desc\r\n            status\r\n            createdBy {\r\n                name\r\n            }\r\n            created\r\n            stdCount\r\n            approveDate\r\n        }\r\n    }\r\n`\r\nexport const LOAD_B_REPORTS = gql `\r\n    query loadBreports($filter: ReportFilter, $page: Int, $limit: Int) {\r\n        loadBreports(filter: $filter, page: $page, limit: $limit) {\r\n            reports {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n                stdCount\r\n                approveDate\r\n            }\r\n            total\r\n        }\r\n    }\r\n`\r\nexport const LOAD_SINGLE_B_REPORT = gql `\r\n    query loadSingleBReport($report: String! $filter: FilterInput) {\r\n        loadSingleBReport(report: $report, filter: $filter) {\r\n             report {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n            }\r\n            students {\r\n                _id\r\n                randomId\r\n                ten\r\n                ngaysinh\r\n                hangbang\r\n                mobile\r\n                trangthai\r\n                # baoluu\r\n                baocao1 {\r\n                    name\r\n                    _id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const MOVE_TO_R2 = gql`\r\n    mutation moveToR2($students: [String], $report: String!) {\r\n        moveToR2(students: $students, report: $report)\r\n    }\r\n`\r\nexport const APPROVE_B_REPORT = gql `\r\n    mutation approveBReport($report: String!) {\r\n        approveBReport(report: $report) {\r\n                _id\r\n                hangbang\r\n                name\r\n                desc\r\n                status\r\n                createdBy {\r\n                    name\r\n                }\r\n                created\r\n                stdCount\r\n                approveDate\r\n            }\r\n        }\r\n`\r\nexport const REJECT_WD_FN = gql `\r\n    mutation rejectWithdrawFN($students: [String]!) {\r\n        rejectWithdrawFN(students: $students)\r\n    }\r\n`\r\nexport const CONFIRM_WD_GD = gql `\r\n    mutation confirmWithdrawGD($students: [String]!) {\r\n        confirmWithdrawGD(students: $students)\r\n    }\r\n`\r\nexport const REJECT_WD_GD = gql `\r\n    mutation rejectWithdrawGD($students: [String]!) {\r\n        rejectWithdrawGD(students: $students)\r\n    }\r\n`\r\nexport const MARK_GRAD = gql `\r\n    mutation markGrad($students: [String]!) {\r\n        markGrad(students: $students)\r\n    }\r\n`\r\nexport const MARK_FAIL = gql `\r\n    mutation markFail($students: [String]!) {\r\n        markFail(students: $students)\r\n    }\r\n`\r\nexport const MARK_FOR_RETEST = gql `\r\n    mutation markForReTest($students: [String]!) {\r\n        markForReTest(students: $students)\r\n    }\r\n`\r\nexport const RESERVE_RESULT = gql `\r\n    mutation adminReserveResult($students: [String]!) {\r\n        adminReserveResult(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_CONFIRM_RETURN = gql `\r\n    mutation adminConfirmReturn($students: [String]!) {\r\n        adminConfirmReturn(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_MARK_FINISH = gql `\r\n    mutation adminMarkFinish($students: [String]!) {\r\n        adminMarkFinish(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_MARK_REMOVE = gql `\r\n    mutation adminMarkRemove($students: [String]!) {\r\n        adminMarkRemove(students: $students)\r\n    }\r\n`\r\nexport const ADMIN_MARK_FINAL_FAIL = gql `\r\n    mutation adminMarkFinalFail($students: [String]!, $reason: String!) {\r\n        adminMarkFinalFail(students: $students, reason: $reason)\r\n    }\r\n`\r\nexport const TEACHER_REQUEST_CONFIRM_RETEST_FEE = gql`\r\n    mutation requestConfirmRetestPayment($students: [String]!) {\r\n        requestConfirmRetestPayment(students: $students)\r\n    }\r\n`\r\n\r\nexport const ADM_CONFIRM_RETEST_FEE = gql `\r\n    mutation adminConfirmRetestFee($students: [String]!, $amount: Float) {\r\n        adminConfirmRetestFee(students: $students, amount: $amount)\r\n    }\r\n`\r\nexport const T_REQUEST_SWAP = gql `\r\n    mutation requestSwap($student: String!, $replacement: String!) {\r\n        requestSwap(student: $student, replacement: $replacement) {\r\n            _id\r\n            randomId\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            hangbang\r\n            mobile\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            ycdc {\r\n                ten\r\n                randomId\r\n            }\r\n            baoluu {\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n            }\r\n            baocao2 {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ADM_CONFIRM_SWAP = gql `\r\n    mutation adminConfirmSwap($students: [String]!) {\r\n        adminConfirmSwap(students: $students) {\r\n            _id\r\n            randomId\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            hangbang\r\n            mobile\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            ycdc {\r\n                ten\r\n                randomId\r\n            }\r\n            baoluu {\r\n                trangthai\r\n            }\r\n            baocao1 {\r\n                name\r\n            }\r\n            baocao2 {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const FORCE_STATUS = gql `\r\n    mutation setStatus($students: [String]!, $trangthai: String!) {\r\n        setStatus(students: $students, trangthai: $trangthai)\r\n    }\r\n`\r\nexport const LOAD_RECORDS = gql `\r\n    query loadRecords($filter: RecordFilter) {\r\n        loadRecords(filter: $filter) {\r\n            records {\r\n                createdBy\r\n                student {\r\n                    ten\r\n                    mobile\r\n                    randomId\r\n                }\r\n                createdAt\r\n                amount\r\n                reason\r\n            }\r\n            totalRecords\r\n            totalAmount\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    message\r\n} from 'antd'\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (amount: number) => void,\r\n    title: string\r\n    confirm: Record<string,any>\r\n    command: string|null\r\n    selected: string[]\r\n}\r\n\r\nconst CPModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    title,\r\n    confirm,\r\n    command,\r\n    selected\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [working, toggleWorking] = React.useState(false)\r\n    const onConfirm = async () => {\r\n        try {\r\n            toggleWorking(true)\r\n            const { amount } = form.getFieldsValue()\r\n            if (!amount) {\r\n                console.log('no amount confirmed')\r\n                throw new Error('không thể xác nhận thanh toán')\r\n            }\r\n            // await onOk(parseFloat(amount))\r\n            if (!command || !selected || (selected.length === 0)) {\r\n                console.log('command not found')\r\n                throw new Error('Không rõ lệnh')\r\n            } else {\r\n                confirm[command]({\r\n                    variables: {\r\n                        students: selected,\r\n                        amount: parseFloat(amount)\r\n                    }\r\n                })\r\n            }\r\n\r\n        } catch (error) {\r\n            message.error('không thể xác nhận thanh toán')\r\n        }\r\n        toggleWorking(false)\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onConfirm}\r\n            title={title}\r\n            okButtonProps={{ loading: working }}\r\n        >\r\n            <Form form={form} labelCol={{ span: 8 }} wrapperCol={{ span: 16}}>\r\n                <Form.Item label=\"Số tiền xác nhận\" name=\"amount\" rules={[{ required: true, message: \"Vui lòng nhập số tiền xác nhận\"}]}>\r\n                    <Input type=\"number\" addonBefore={<span>VNĐ</span>} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CPModal","export const numberWithCommas = (x:any)=> {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List\r\n} from 'antd'\r\nimport {\r\n    numberWithCommas\r\n} from '../../../../Utils/math'\r\n\r\ntype MType = {\r\n    students: Record<string,any>[]\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk:()=>any\r\n}\r\n\r\nconst RefundModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    students,\r\n    onOk\r\n}) => {\r\n    // console.log(students)\r\n    let total = 0\r\n    return (\r\n        <Modal\r\n            title=\"Danh sách hoàn tiền - rút HS\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => {\r\n                onOk()\r\n                onCancel()\r\n            }}\r\n        >\r\n            <List>\r\n                {students.map(student => {\r\n                    total += parseFloat(student.refund)\r\n                    return (\r\n                        <List.Item key=\"student._id\" actions={[<span>{`-${numberWithCommas(student.refund)} VNĐ`}</span>]}>\r\n                            <List.Item.Meta title={student.ten} />\r\n                        </List.Item>\r\n                    )\r\n                })}\r\n                <List.Item actions={[<strong>{`${numberWithCommas(total)} VNĐ`}</strong>]}>\r\n                    <List.Item.Meta title={<strong>Tổng tiền hoàn</strong>} />\r\n                </List.Item>\r\n            </List>\r\n        </Modal>\r\n    )\r\n}\r\nexport default RefundModal","import React from 'react'\r\nimport {\r\n    Button,\r\n    PageHeader,\r\n    Tooltip,\r\n    Menu,\r\n    Dropdown,\r\n    message,\r\n    Modal\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useLazyQuery,\r\n} from '@apollo/client'\r\nimport {\r\n    CaretLeftFilled,\r\n    CheckCircleOutlined,\r\n    CheckOutlined,\r\n    CheckSquareOutlined,\r\n    DeleteOutlined,\r\n    DollarOutlined,\r\n    DownloadOutlined,\r\n    EllipsisOutlined,\r\n    ExclamationOutlined,\r\n    FilterOutlined,\r\n    OrderedListOutlined,\r\n    PlusOutlined,\r\n    PoundOutlined,\r\n    ReloadOutlined,\r\n    RetweetOutlined,\r\n    RollbackOutlined,\r\n    TransactionOutlined,\r\n    UnorderedListOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\nimport StudentDrawer from './LandingPage/CreateStudentDrawer'\r\nimport StudentList from './LandingPage/StudentList'\r\nimport FilterModal from './LandingPage/CreateStudentDrawer/FilterModal'\r\nimport ReportModal from './Modals/ReportOneModal'\r\nimport XLSX from 'xlsx'\r\nimport {\r\n    REQUEST_CONFIRM_PAYMENT,\r\n    CONFIRM_PAYMENT,\r\n    REQUEST_WITHDRAW,\r\n    CONFIRM_WITHDRAW,\r\n    LOAD_A_REPORT,\r\n    MOVE_TO_R1,\r\n    REQUEST_CONFIRM_P_2,\r\n    CONFIRM_PAYMENT_TWO,\r\n    MARK_COMPLETED,\r\n    REQUEST_RETURN_RESULT,\r\n    REJECT_WD_FN,\r\n    CONFIRM_WD_GD,\r\n    REJECT_WD_GD,\r\n    MARK_GRAD,\r\n    MARK_FAIL,\r\n    MARK_FOR_RETEST,\r\n    LOAD_B_REPORTS,\r\n    MOVE_TO_R2,\r\n    RESERVE_RESULT,\r\n    ADMIN_CONFIRM_RETURN,\r\n    ADMIN_MARK_FINISH,\r\n    ADMIN_MARK_REMOVE,\r\n    ADMIN_MARK_FINAL_FAIL,\r\n    TEACHER_REQUEST_CONFIRM_RETEST_FEE,\r\n    ADM_CONFIRM_RETEST_FEE\r\n} from '../../common/ClientQueries'\r\nimport moment from 'moment'\r\nimport StudentStatus from '../../common/StudentStatus'\r\nimport CPModal from './Modals/ConfirmPaymentModal'\r\nimport RefundModal from './Modals/RefundList'\r\n\r\nconst CREATE_STUDENT = gql`\r\n    mutation CreateStudentMutation($student: StudentInput!) {\r\n        createStudent(student: $student) {\r\n            randomId\r\n            created\r\n            ten\r\n            ngaysinh\r\n            anh34\r\n            hangbang\r\n            quequan\r\n            cmt1\r\n            cmt2\r\n            bangcap\r\n            dondk\r\n            giaykhamSK\r\n            hopdongdaotao\r\n            trangthai\r\n            mobile\r\n            baoluu {\r\n                thoihan\r\n                trangthai\r\n            }\r\n            kq1 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            kq2 {\r\n                ngay\r\n                lythuyet\r\n                thuchanh\r\n                duongtruong\r\n            }\r\n            createdBy\r\n        }\r\n    }\r\n`\r\nconst LOAD_STUDENTS = gql`\r\n    query LoadStudents($filter: FilterInput, $page: Int, $limit: Int, $sort: StdSortInput) {\r\n        loadStudents(filter: $filter, page: $page, limit: $limit, sort: $sort) {\r\n            total\r\n            students {\r\n                _id\r\n                randomId\r\n                created\r\n                ten\r\n                ngaysinh\r\n                anh34\r\n                hangbang\r\n                quequan\r\n                cmt1\r\n                cmt2\r\n                bangcap\r\n                dondk\r\n                giaykhamSK\r\n                hopdongdaotao\r\n                trangthai\r\n                mobile\r\n                # ycdc\r\n                refund\r\n                baocao1 {\r\n                    name\r\n                    _id\r\n                }\r\n                baocao2 {\r\n                    name\r\n                    _id\r\n                }\r\n                baoluu {\r\n                    thoihan\r\n                    trangthai\r\n                }\r\n                kq1 {\r\n                    ngay\r\n                    lythuyet\r\n                    thuchanh\r\n                    duongtruong\r\n                }\r\n                kq2 {\r\n                    ngay\r\n                    lythuyet\r\n                    thuchanh\r\n                    duongtruong\r\n                }\r\n                createdBy\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst TLandingPage = () => {\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    // console.log(user)\r\n    const pageSize=100\r\n    const [createDrw, toggleCreateDrw] = React.useState(false)\r\n    const [createStudent] = useMutation(CREATE_STUDENT, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [loadStudents, { loading: loadingStudents, data: students = { loadStudents: { students: [], total: 0} } }] = useLazyQuery(LOAD_STUDENTS, { fetchPolicy: 'network-only' })\r\n    const [exportXLSX, { loading: exporting }] = useLazyQuery(LOAD_STUDENTS, { fetchPolicy: 'network-only', onCompleted: (data: any) => {\r\n        const {loadStudents: { students}} = data\r\n        exportFile(students)\r\n    } })\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const [reportModal, toggleReportModal] = React.useState(false)\r\n    const [bc2Modal, toggleBC2Modal] = React.useState(false)\r\n    const [moveR1] = useMutation(MOVE_TO_R1, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [moveR2] = useMutation(MOVE_TO_R2, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [requestConfirmP] = useMutation(REQUEST_CONFIRM_PAYMENT, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [confirmP] = useMutation(CONFIRM_PAYMENT, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [requestWD] = useMutation(REQUEST_WITHDRAW, { refetchQueries: [LOAD_STUDENTS]})\r\n    // const [requestRSV] = useMutation(REQUEST_RESERVE, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [cfWithdraw] = useMutation(CONFIRM_WITHDRAW, { refetchQueries: [LOAD_STUDENTS]})\r\n    // const [cfReserv] = useMutation(CONFIRM_RESERVE_BC1, { refetchQueries: [LOAD_STUDENTS]})\r\n    // const [requestReturn] = useMutation(REQUEST_TO_RETURN, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [requestConfirmP2] = useMutation(REQUEST_CONFIRM_P_2, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [confirmP2] = useMutation(CONFIRM_PAYMENT_TWO, { refetchQueries: [LOAD_STUDENTS]})\r\n    const [markComplete] = useMutation(MARK_COMPLETED, { refetchQueries: [LOAD_STUDENTS] })\r\n    // const [requestReserveResult] = useMutation(REQUEST_RESERVE_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    // const [confirmReserveResult] = useMutation(CONFIRM_RESERVE_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [requestReturnResult] = useMutation(REQUEST_RETURN_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [rejectWDFN] = useMutation(REJECT_WD_FN, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [acceptWDGD] = useMutation(CONFIRM_WD_GD, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [rejectWDGD] = useMutation(REJECT_WD_GD, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [markGrad] = useMutation(MARK_GRAD, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [markFail] = useMutation(MARK_FAIL, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [markforretest] = useMutation(MARK_FOR_RETEST, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [reserveResult] = useMutation(RESERVE_RESULT, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admConfirmReturn] = useMutation(ADMIN_CONFIRM_RETURN, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admMarkFinish] = useMutation(ADMIN_MARK_FINISH, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admMarkRemove] = useMutation(ADMIN_MARK_REMOVE, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admMarkFinalFail] = useMutation(ADMIN_MARK_FINAL_FAIL, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [tRequestCRF] = useMutation(TEACHER_REQUEST_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [admCFRF] = useMutation(ADM_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_STUDENTS] })\r\n    const [refundModal, toggleRefundModal] = React.useState(false)\r\n\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        ten: null,\r\n        mobile: null,\r\n        hangbang: null,\r\n        randomId: null,\r\n        trangthai: null\r\n    })\r\n    const [sort, setSort] = React.useState<Record<string,any>>({\r\n        created: -1\r\n    })\r\n    const [currentPage, setCurrentPage] = React.useState(1)\r\n    const [selected, setSelected] = React.useState<string[]>([])\r\n    const [working, toggleWorking] = React.useState(false)\r\n    const [withdrawModal, toggleWDRModal] = React.useState(false)\r\n    const [cpModal, toggleCPModal] = React.useState(false)\r\n    const [cpModalTitle, setCPModalTitle] = React.useState('Xác nhận thanh toán')\r\n    const [confirmCmd, setConfirmCmd] = React.useState<string|null>(null)\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadStudents({\r\n                variables: {\r\n                    filter,\r\n                    page: currentPage,\r\n                    limit: pageSize,\r\n                    sort\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadStudents, filter, currentPage, sort])\r\n    \r\n    const createStd = async (student: any) => {\r\n        await createStudent({\r\n            variables: {\r\n                student\r\n            }\r\n        })\r\n            // .then(() => loadStudents())\r\n    }\r\n    \r\n    const notFilterEmpty = () => {\r\n        const matchingKey = Object.keys(filter).find(k => filter[k] !== null)\r\n        return Boolean(matchingKey)\r\n    }\r\n    // console.log(notFilterEmpty())\r\n    const onFilterClick = () => {\r\n        if (notFilterEmpty()) {\r\n            // console.log('filter is not empty')\r\n            setFilter({\r\n                ten: null,\r\n                mobile: null,\r\n                hangbang: null,\r\n                randomId: null,\r\n                trangthai: null\r\n            })\r\n            console.log(filter)\r\n        } else {\r\n            toggleFilterModal(!filterModal)\r\n        }\r\n    }\r\n\r\n    const rowSelection = {\r\n        onChange: (keys: any) => setSelected(keys),\r\n        selectedRowKeys: selected\r\n    }\r\n\r\n    const onMove = async (report: string, type: string) => {\r\n        if (type === 'BC1') {\r\n            await moveR1({\r\n                variables: {\r\n                    report,\r\n                    students: selected\r\n                }\r\n            })\r\n        } else {\r\n            await moveR2({\r\n                variables: {\r\n                    report,\r\n                    students: selected\r\n                }\r\n            })\r\n        }\r\n        setSelected([])\r\n    }\r\n\r\n    const doActionWithConfirm = async (command: any, modalTitle: string, msg:string) => {\r\n        if (!selected || selected.length === 0) {\r\n            message.error('Chọn hồ sơ muốn bảo lưu trước khi thực hiện thao tác')\r\n            return\r\n        }\r\n        try {\r\n            Modal.confirm({\r\n                visible: withdrawModal,\r\n                title: modalTitle,\r\n                content: msg,\r\n                onCancel: () => toggleWDRModal(false),\r\n                onOk: async () => {\r\n                    toggleWorking(true)\r\n                    await command({\r\n                        variables: {\r\n                            students: selected\r\n                        }\r\n                    })\r\n                    setSelected([])\r\n                    toggleWorking(false)\r\n                },\r\n                okButtonProps: {\r\n                    loading: working\r\n                }\r\n            })\r\n        } catch (e) {\r\n            message.error('Đã có lỗi xẩy ra trong quá trình thực hiện - vui lòng kiểm tra lại')\r\n        }\r\n    }\r\n\r\n    const doAction = async (command: any ) => {\r\n        if (!selected || selected.length === 0) {\r\n            message.error('Chọn hồ sơ trước khi thực hiện thao tác', 100)\r\n            return\r\n        }\r\n        try {\r\n            toggleWorking(true)\r\n            await command({\r\n                variables: {\r\n                    students: selected\r\n                }\r\n            })\r\n            setSelected([])\r\n            toggleWorking(false)\r\n        } catch (e) {\r\n            message.error('Đã có lỗi xẩy ra trong quá trình thực thi')\r\n        }\r\n    }\r\n\r\n    const confirmFinalFail = async (reason: string) => {\r\n        let content = 'Đánh dấu các hồ sơ đã chọn thi trượt'\r\n        switch (reason) {\r\n            case 'THI_TRUOT_LT':\r\n                content += ` lý thuyết?`\r\n                break;\r\n            case 'THI_TRUOT_SH':\r\n                content +=` Sa hình`\r\n                break;\r\n            case 'THI_TRUOT_DT':\r\n                content += ` Đường trường`\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        try {\r\n            Modal.confirm({\r\n                visible: withdrawModal,\r\n                onCancel: () => toggleWDRModal(false),\r\n                onOk: async () => {\r\n                    await admMarkFinalFail({\r\n                        variables: {\r\n                            students: selected,\r\n                            reason\r\n                        }\r\n                    })\r\n                    setSelected([])\r\n                },\r\n                title: 'Đánh dấu hồ sơ thi trượt',\r\n                content\r\n            })\r\n        } catch (e) {\r\n            message.error('Không thể thay đổi thông tin hồ sơ')\r\n        }\r\n    }\r\n\r\n    const exportFile = (data: any) => {\r\n        // console.log('exporting....')\r\n        const ws = XLSX.utils.json_to_sheet(data.map((std:Record<string,any>) => ({\r\n            'Mã Hồ sơ': std.randomId,\r\n            'Tên': std.ten,\r\n            'Ngày Sinh': moment(parseFloat(std.ngaysinh)).format('DD/MM/YYYY'),\r\n            'Hạng bằng lái': std.hangbang,\r\n            'Số điện thoại': std.mobile,\r\n            'Trạng thái hồ sơ': StudentStatus[std.trangthai],\r\n            'Ngày tạo hồ sơ': moment(parseFloat(std.created)).format('DD/MM/YYYY'),\r\n        })))\r\n        const wb = XLSX.utils.book_new()\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Danh sach')\r\n        XLSX.writeFile(wb, 'danhsach.xlsx')\r\n    }\r\n\r\n    const onExportClick = async () => {\r\n        await exportXLSX({\r\n            variables: {\r\n                filter,\r\n                page: 1,\r\n                limit: 10000\r\n            }\r\n        })\r\n    }\r\n    let MenuOption = (<Menu />)\r\n    if (user.role === 'TEACHER') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<PlusOutlined />} key=\"t1\" onClick={() => toggleCreateDrw(!createDrw)}>\r\n                    Thêm hồ sơ\r\n                </Menu.Item>\r\n                <Menu.SubMenu key=\"_bc\" icon={<CaretLeftFilled />} title=\"Yêu cầu xác nhận thanh toán\">\r\n                    <Menu.Item icon={<DollarOutlined />} key=\"t2\" onClick={() => doAction(requestConfirmP)}>\r\n                        Yêu cầu XNTT đợt 1\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<PoundOutlined />} key=\"t3\" onClick={() => doAction(requestConfirmP2)}>\r\n                        Yêu cầu XNTT đợt 2\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<TransactionOutlined />} key=\"t4\" onClick={() => doAction(tRequestCRF)}>\r\n                        Yêu cầu XNTT thi lại\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<RollbackOutlined />} key=\"t5\" onClick={() => doAction(requestWD)}>\r\n                    Yêu cầu rút hồ sơ\r\n                </Menu.Item>\r\n                <Menu.Item icon={<ReloadOutlined />} key=\"t6\" onClick={() => doAction(requestReturnResult)}>\r\n                    Yêu cầu quay lại thi\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n    if (user.role === 'TEACHER') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<PlusOutlined />} key=\"t1\" onClick={() => toggleCreateDrw(!createDrw)}>\r\n                    Thêm hồ sơ\r\n                </Menu.Item>\r\n                <Menu.SubMenu key=\"_bc\" icon={<CaretLeftFilled />} title=\"Yêu cầu xác nhận thanh toán\">\r\n                    <Menu.Item icon={<DollarOutlined />} key=\"t2\" onClick={() => doAction(requestConfirmP)}>\r\n                        Yêu cầu XNTT đợt 1\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<PoundOutlined />} key=\"t3\" onClick={() => doAction(requestConfirmP2)}>\r\n                        Yêu cầu XNTT đợt 2\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<TransactionOutlined />} key=\"t4\" onClick={() => doAction(tRequestCRF)}>\r\n                        Yêu cầu XNTT thi lại\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<RollbackOutlined />} key=\"t5\" onClick={() => doAction(requestWD)}>\r\n                    Yêu cầu rút hồ sơ\r\n                </Menu.Item>\r\n                <Menu.Item icon={<ReloadOutlined />} key=\"t6\" onClick={() => doAction(requestReturnResult)}>\r\n                    Yêu cầu quay lại thi\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n    if (user.role === 'ADMIN') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.SubMenu key=\"A1\" icon={<CaretLeftFilled />} title=\"Báo cáo \">\r\n                    <Menu.Item icon={<OrderedListOutlined />} key=\"_a2\" onClick={() => toggleReportModal(true)}>\r\n                        Chuyển báo cáo 1\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<UnorderedListOutlined />} key=\"_a3\" onClick={() => toggleBC2Modal(true)}>\r\n                        Chuyển báo cáo 2\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.SubMenu key=\"_course\" icon={<CaretLeftFilled />} title=\"Khóa học\">\r\n                    <Menu.Item icon={<CheckOutlined />} key=\"_a4\" onClick={() => doAction(markComplete)}>\r\n                        Đánh dấu hoàn thành khóa học\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<DeleteOutlined />} key=\"_a5\" onClick={() => doActionWithConfirm(admMarkRemove, 'Hủy Hồ sơ | bỏ học', 'Bạn có chắc muốn hủy các hồ sơ đã chọn?')}>\r\n                        Hủy hồ sơ / bỏ học\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<CheckSquareOutlined />} key=\"_a6\" onClick={() => doAction(markGrad)}>\r\n                        Đánh dấu Đã tốt nghiệp\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<ExclamationOutlined />} key=\"_a7\" onClick={() => doAction(markFail)}>\r\n                        Đánh dấu trượt TN\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<RetweetOutlined />} key=\"_a8\" onClick={() => doAction(markforretest)}>\r\n                        Vào danh sách thi lại TN\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item icon={<UnorderedListOutlined />} key=\"_a9\" onClick={() => doActionWithConfirm(reserveResult, 'Bảo lưu kết quả', 'Bạn có chắc muốn bảo lưu kết quả cho các hồ sơ đã chọn?')}>\r\n                        Bảo lưu kết quả\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<ReloadOutlined />} key=\"_a10\" onClick={() => doActionWithConfirm(admConfirmReturn, 'Xác nhận quay lại', 'Xác nhận cho các hồ sơ đang bảo lưu quay lại thi')}>\r\n                        Xác nhận quay lại thi\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.SubMenu key=\"_failed\" icon={<CaretLeftFilled />} title=\"Thi trượt\">\r\n                    <Menu.Item key=\"a11\" onClick={() => confirmFinalFail('THI_TRUOT_LT')}>Thi trượt lý thuyết</Menu.Item>\r\n                    <Menu.Item key=\"a12\" onClick={() => confirmFinalFail('THI_TRUOT_SH')}>Thi trượt Sa hình</Menu.Item>\r\n                    <Menu.Item key=\"a13\" onClick={() => confirmFinalFail('THI_TRUOT_DT')}>Thi trượt đường trường</Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<CheckCircleOutlined color=\"green\" />} key=\"_a14\" onClick={() => doActionWithConfirm(admMarkFinish, 'Xác nhận Hoàn thành', 'Xác nhận cho các hồ sơ đã chọn hoàn thành khóa học')}>\r\n                    Xác nhận Hoàn thành\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n    if (user.role === 'FINANCE') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.SubMenu key=\"f1\" icon={<CaretLeftFilled />} title=\"Xác nhận thanh toán\">\r\n                    <Menu.Item icon={<DollarOutlined />} key=\"_f2\" onClick={() => {\r\n                        setCPModalTitle('Xác nhận thanh toán đợt một')\r\n                        setConfirmCmd('paymentOne')\r\n                        toggleCPModal(true)\r\n                    }}>\r\n                        Xác nhận thanh toán đợt 1\r\n                    </Menu.Item>\r\n                    {/* <Menu.Item icon={<DollarOutlined />} key=\"_f2\" onClick={() => doAction(confirmP)}>\r\n                        Xác nhận thanh toán đợt 1\r\n                    </Menu.Item> */}\r\n                    <Menu.Item icon={<PoundOutlined />} key=\"_f3\" onClick={() => {\r\n                        setCPModalTitle('Xác nhận thanh toán đợt hai')\r\n                        setConfirmCmd('paymentTwo')\r\n                        toggleCPModal(true)\r\n                    }}>\r\n                        Xác nhận thanh toán đợt 2\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<CheckCircleOutlined />} key=\"_f4\" onClick={() => {\r\n                        setCPModalTitle('Xác nhận thanh toán thi lại')\r\n                        setConfirmCmd('admCFRF')\r\n                        toggleCPModal(true)\r\n                    }}>\r\n                        Xác nhận thanh toán thi lại\r\n                    </Menu.Item>\r\n                </Menu.SubMenu>\r\n                <Menu.Item icon={<CheckCircleOutlined />} key=\"_f5\" onClick={() =>{\r\n                    setCPModalTitle('Xác nhận hoàn tiền rút hồ sơ')\r\n                    setConfirmCmd('cfWithdraw')\r\n                    toggleCPModal(true)\r\n                }}>\r\n                    Chấp thuận rút HS\r\n                </Menu.Item>\r\n                {/* <Menu.Item icon={<CheckCircleOutlined />} key=\"_f5\" onClick={() => doAction(cfWithdraw)}>\r\n                    Chấp thuận rút HS\r\n                </Menu.Item> */}\r\n                <Menu.Item icon={<DeleteOutlined />} key=\"_f6\" onClick={() => doAction(rejectWDFN)}>\r\n                    Không chấp thuận rút HS\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n    if (user.role === 'MANAGER') {\r\n        MenuOption = (\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<CheckCircleOutlined />} key=\"_m1\" onClick={() =>toggleRefundModal(true)}>\r\n                    Chấp thuận rút HS\r\n                </Menu.Item>\r\n                {/* <Menu.Item icon={<CheckCircleOutlined />} key=\"_m1\" onClick={() => doAction(acceptWDGD)}>\r\n                    Chấp thuận rút HS\r\n                </Menu.Item> */}\r\n                <Menu.Item icon={<DeleteOutlined />} key=\"_m2\" onClick={() => doAction(rejectWDGD)}>\r\n                    Không chấp thuận rút HS\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n\r\n    const extras = [\r\n        <Tooltip key=\"_exprt\" title=\"Tải xuống file Excel\">\r\n            <Button loading={exporting} shape=\"round\" type=\"text\" icon={<DownloadOutlined />} onClick={() => onExportClick()} />\r\n        </Tooltip>,\r\n        <Tooltip key=\"_filt\" title={notFilterEmpty() ? 'Bỏ bộ lọc' : 'Lọc hồ sơ'}>\r\n            <Button\r\n                danger={notFilterEmpty() || false}\r\n                onClick={() => onFilterClick()}\r\n                key=\"_Filter\"\r\n                shape=\"round\"\r\n                type=\"text\"\r\n                >\r\n                <FilterOutlined />\r\n                {/* {notFilterEmpty() ? 'Bỏ bộ lọc' : 'Lọc hồ sơ'} */}\r\n            </Button>\r\n        </Tooltip>,\r\n        <Tooltip title=\"Tải lại\" key=\"_reload\">\r\n            <Button type=\"text\" key=\"_reload\" onClick={() => loadStudents({ variables: { filter, page: currentPage, limit: pageSize } })} shape=\"round\">\r\n                <ReloadOutlined />\r\n            </Button>\r\n        </Tooltip>,\r\n        <Dropdown trigger={['click']} key=\"_options\" overlay={MenuOption}>\r\n            <Tooltip title=\"Chức năng\">\r\n                <Button type=\"primary\" icon={<EllipsisOutlined />} loading={working} />\r\n            </Tooltip>\r\n        </Dropdown>\r\n    ]\r\n    \r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title={`Danh sách hồ sơ`}\r\n                extra={extras}\r\n            />\r\n            <StudentList\r\n                rowSelection={rowSelection}\r\n                students={students.loadStudents}\r\n                loading={loadingStudents}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                pageSize={pageSize}\r\n                sort={sort}\r\n                setSort={setSort}\r\n            />\r\n            <div>\r\n                <StudentDrawer\r\n                    visible={createDrw}\r\n                    onClose={() => toggleCreateDrw(false)}\r\n                    createStudent={createStd}\r\n                />\r\n            </div>\r\n            <FilterModal\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                onOk={() => toggleFilterModal(false)}\r\n            />\r\n            <ReportModal\r\n                dataKey=\"loadAReport\"\r\n                query={LOAD_A_REPORT}\r\n                onMove={(report: string) => onMove(report, 'BC1')}\r\n                visible={reportModal}\r\n                onCancel={() => toggleReportModal(false)}\r\n                onOk={() => toggleReportModal(false)}\r\n                />\r\n            <ReportModal\r\n                dataKey=\"loadBreports\"\r\n                query={LOAD_B_REPORTS}\r\n                onMove={(report: string) => onMove(report, 'BC2')}\r\n                visible={bc2Modal}\r\n                onCancel={() => toggleBC2Modal(false)}\r\n                onOk={() => toggleBC2Modal(false)}\r\n            />\r\n            <CPModal\r\n                title={cpModalTitle}\r\n                visible={cpModal}\r\n                onCancel={() => toggleCPModal(false)}\r\n                onOk={()=>null}\r\n                confirm={{\r\n                    'paymentOne': confirmP,\r\n                    'paymentTwo': confirmP2,\r\n                    'admCFRF': admCFRF,\r\n                    'cfWithdraw': cfWithdraw\r\n                }}\r\n                command={confirmCmd}\r\n                selected={selected}\r\n            />\r\n            <RefundModal\r\n                students={students.loadStudents.students.filter((s:any) => {\r\n                    return selected.indexOf(s._id) >= 0\r\n                })}\r\n                // students={[]}\r\n                onOk={() => doAction(acceptWDGD)}\r\n                visible={refundModal}\r\n                onCancel={()=>toggleRefundModal(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TLandingPage","import React from 'react'\r\nimport {\r\n    Modal,\r\n} from 'antd'\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void\r\n}\r\n\r\nconst ReserveModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk\r\n}) => {\r\n    \r\n    return (\r\n        <Modal\r\n            title=\"Gửi yêu cầu rút hồ sơ?!\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onOk}\r\n        >\r\n            <p>\r\n                Gửi yêu cầu rút hồ sơ tới bộ phận đào tạo. Phòng đào tạo sẽ phê duyệt việc rút hồ sơ và hoàn tiền.\r\n                Bạn có thật sự muốn rút hồ sơ này?\r\n            </p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ReserveModal\r\n","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List\r\n} from 'antd'\r\nimport LoadinCenter from '../../../common/LoadingCenter'\r\n// import { report } from 'process'\r\nconst rStatus = {\r\n    'PENDING': 'Đang mở',\r\n    'APPROVED': \"Đã duyệt\"\r\n}\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (report: string) => void\r\n    reports?: Record<string,any>[] | []\r\n    loading: boolean\r\n}\r\n\r\nconst AvailableReportModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    reports = [],\r\n    loading\r\n}) => {\r\n    return (\r\n        <Modal\r\n            title=\"Chuyển hồ sơ vào báo cáo 1?\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => null}\r\n        >\r\n            {loading && (\r\n                <LoadinCenter />\r\n            )}\r\n            {reports?.length > 0 ? (\r\n                <List\r\n                    dataSource={reports}\r\n                    renderItem={(item) => (\r\n                        <List.Item key={item._id} style={{ cursor: 'pointer'}} onClick={() => onOk(item._id)}>\r\n                            <List.Item.Meta\r\n                                title={`${item.name} - (${item.hangbang})`}\r\n                                description={item.desc}\r\n                            />\r\n                            <div style={{textAlign: 'center'}}>\r\n                                <p>\r\n                                    <strong>\r\n                                        {item.stdCount || 0}\r\n                                    </strong>\r\n                                </p>\r\n                                <p>\r\n                                    {rStatus[item.status as keyof Object]}\r\n                                </p>\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            ) : <span>Không tìm thấy báo cáo phù hợp</span>}\r\n        </Modal>\r\n    )\r\n}\r\nexport default AvailableReportModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    List,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    useMutation,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport {\r\n    T_REQUEST_SWAP\r\n} from '../../../common/ClientQueries'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\n\r\nconst LOAD_SWAP_STDS = gql `\r\n    query loadStudents($filter: FilterInput) {\r\n        loadStudents(filter: $filter) {\r\n            students {\r\n                _id\r\n                ten\r\n                randomId\r\n                mobile\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void,\r\n    student: string\r\n}\r\n\r\nconst SwapModal: React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    student\r\n}) => {\r\n    const [requestSwp, { loading }] = useMutation(T_REQUEST_SWAP)\r\n    const [loadStudents, { loading: loadingStd, data }] = useLazyQuery(LOAD_SWAP_STDS, { fetchPolicy: 'network-only'})\r\n    const [selected, setSelected] = React.useState('')\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadStudents({\r\n                variables: {\r\n                    filter: {\r\n                        trangthai: 'CHO_VAO_BC_1'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        if (visible) {\r\n            load()\r\n        }\r\n    }, [loadStudents, visible])\r\n\r\n    const onSwap = async (replacement: string) => {\r\n        try {\r\n            await requestSwp({\r\n                variables: {\r\n                    student,\r\n                    replacement\r\n                }\r\n            })\r\n            message.success('Yêu cầu đổi chỗ thành công')\r\n            onCancel()\r\n        } catch (error) {\r\n            message.error('Không thể yêu cầu đổi chỗ, vui lòng kiểm tra lại thông tin')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Yêu cầu đổi chỗ\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => onSwap(selected)}\r\n            okButtonProps={{ loading }}\r\n        >\r\n            {loadingStd && <span>Loading....</span>}\r\n            {data && (\r\n                <List\r\n                    dataSource={data.loadStudents.students}\r\n                    renderItem={(item:any) => (\r\n                        <List.Item\r\n                            actions={selected === item._id ? [<CheckOutlined twoToneColor=\"blue\" />] : []}\r\n                            key={item._id}\r\n                            style={{ cursor: 'pointer'}}\r\n                            onClick={() => setSelected(item._id)}\r\n                        >\r\n                            <List.Item.Meta title={`${item.ten} - ${item.mobile}`} description={item.randomId} />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SwapModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Select\r\n} from 'antd'\r\nimport StudentStatus from '../../../common/StudentStatus'\r\n\r\nconst { Option } = Select\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (trangthai: string) => void\r\n}\r\n\r\nconst ForceStatusModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [working, toggleWorking] = React.useState(false)\r\n    const onConfirm = async () => {\r\n        const { trangthai } = form.getFieldsValue()\r\n        toggleWorking(true)\r\n        onOk(trangthai)\r\n        toggleWorking(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            title=\"Đặt lại trạng thái hồ sơ\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onConfirm}\r\n            okButtonProps={{\r\n                loading: working\r\n            }}\r\n        >\r\n            <Form form={form} labelCol={{ span: 8 }} wrapperCol={{ span: 16}}>\r\n                <Form.Item label=\"Chuyển đến trạng thái\" name=\"trangthai\">\r\n                    <Select>\r\n                        {Object.keys(StudentStatus).map(k => (\r\n                            <Option value={k}>{StudentStatus[k]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ForceStatusModal","import React from 'react'\r\nimport {\r\n    PageHeader,\r\n    Button,\r\n    // Dropdown,\r\n    Menu,\r\n    Modal,\r\n    Dropdown\r\n} from 'antd'\r\nimport {\r\n    // EllipsisOutlined,\r\n    DollarCircleOutlined,\r\n    UsergroupAddOutlined,\r\n    CalendarOutlined,\r\n    DeleteOutlined,\r\n    CloseOutlined,\r\n    ExclamationCircleOutlined ,\r\n    // DollarOutlined,\r\n    EllipsisOutlined,\r\n    CheckOutlined,\r\n    CheckCircleFilled,\r\n    DeleteTwoTone,\r\n    // CalendarTwoTone,\r\n    ReloadOutlined,\r\n    OrderedListOutlined,\r\n    RetweetOutlined,\r\n    InfoCircleOutlined,\r\n    // CaretRightFilled,\r\n    CaretLeftFilled,\r\n    PoundOutlined,\r\n    SwapOutlined,\r\n    FieldTimeOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport ReserveModal from './Modals/ReserveModal'\r\nimport AvailableReportModal from './Modals/ReportListModal'\r\nimport Report2Modal from '../Main/Modals/ReportOneModal'\r\nimport SwapModal from './Modals/SwapModal'\r\nimport {\r\n    LOAD_B_REPORTS,\r\n    // ADM_CONFIRM_SWAP\r\n} from '../../common/ClientQueries'\r\nimport ForceStatusModal from './Modals/ForceStatusModal'\r\nimport {\r\n    useMutation\r\n} from '@apollo/client'\r\nimport {\r\n    LOAD_SINGLE_STD,\r\n    CONFIRM_PAYMENT,\r\n    CONFIRM_PAYMENT_TWO,\r\n    ADM_CONFIRM_RETEST_FEE,\r\n    CONFIRM_WITHDRAW\r\n} from '../../common/ClientQueries'\r\nimport CPModal from '../Main/Modals/ConfirmPaymentModal'\r\nimport RefundModal from '../Main/Modals/RefundList'\r\n// import { Moment } from 'moment'\r\n\r\ntype CType = {\r\n    student: any\r\n    role: string\r\n    deleteStudent: (student: string) => void\r\n    moveToR1: (students: string[], report: string) => void\r\n    reports: Record<string,any>[] | []\r\n    loadingReport: boolean\r\n    doAction: (action: string, students: string[]) => void\r\n    movetoR2: (students: string[], report: string) => void\r\n    confirmAction: (action: string, students: string[], modalTitle: string, modalContent: string) => void\r\n    markFailed: (students: string[], reason: string) => void\r\n    changeStatus: (students: string[], reason: string) => void\r\n}\r\n\r\n\r\nconst Header:React.FC<CType> = ({\r\n    student,\r\n    role,\r\n    moveToR1,\r\n    deleteStudent,\r\n    reports,\r\n    loadingReport,\r\n    doAction,\r\n    movetoR2,\r\n    confirmAction,\r\n    markFailed,\r\n    changeStatus\r\n}) => {\r\n    const [reportModal, toggleReportModal] = React.useState(false)\r\n    const [reservModal, toggleReservModal] = React.useState(false)\r\n    const [deleteModal, toggleDeleteModdal] = React.useState(false)\r\n    // const [rModal, toggleRModal] = React.useState(false)\r\n    // const [acceptRsvModal, toggleAcceptRsvModal] = React.useState(false)\r\n    const [r2Modal, toggleR2Modal] = React.useState(false)\r\n    const [swapModal, toggleSwapModal] = React.useState(false)\r\n    const [statusModal, toggleStatusModal] = React.useState(false)\r\n    const [cpModal, toggleCPModal] = React.useState(false)\r\n    const [refundModal, toggleRefundModal] = React.useState(false)\r\n    const [confirmCMD, setConfirmCMD] = React.useState('')\r\n    const [cpTitle, setCPTitle] = React.useState('')\r\n    const [confirmP1] = useMutation(CONFIRM_PAYMENT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmP2] = useMutation(CONFIRM_PAYMENT_TWO, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [admCFRF] = useMutation(ADM_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmWithdraw] = useMutation(CONFIRM_WITHDRAW, { refetchQueries: [LOAD_SINGLE_STD]})\r\n    const selected = [student._id]\r\n\r\n    const history = useHistory()\r\n    const createMenu = () => {\r\n        const { trangthai, _id } = student\r\n        const items = []\r\n        // teacher actions\r\n        if (role === 'TEACHER') {\r\n            if (trangthai === 'MOI_TAO') {\r\n                items.push(<Menu.Item disabled={trangthai !== 'MOI_TAO'} key=\"T_1\" icon={<DollarCircleOutlined />} onClick={() => doAction('requestConfirmPayment',[_id])}>Yêu cầu XN thanh toán đợt 1</Menu.Item>)\r\n                // items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleReservModal(true)} icon={<UsergroupAddOutlined />}>Yêu cầu rút hồ sơ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_VAO_BC_1') {\r\n                items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleReservModal(true)} icon={<UsergroupAddOutlined />}>Yêu cầu rút hồ sơ</Menu.Item>)\r\n                // items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleReservModal(true)} icon={<UsergroupAddOutlined />}>Yêu cầu rút hồ sơ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_TRONG_BC_1') {\r\n                // items.push(<Menu.Item key=\"T_4\" onClick={() => confirmReservBC1([_id])} icon={<CalendarOutlined />}>Yêu cầu bảo lưu</Menu.Item>)\r\n                items.push(<Menu.Item key=\"T_j2\" onClick={() => toggleSwapModal(true)} icon={<SwapOutlined />}>Yêu cầu đổi chỗ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XN_HOAN_HUY_FN') {\r\n                items.push(<Menu.Item key=\"T_3\" onClick={() => doAction('cancelWithdraw',[_id])} icon={<CalendarOutlined />}>Hủy yêu cầu rút hồ sơ</Menu.Item>)\r\n            }\r\n            // if (trangthai === 'XAC_NHAN_BC_1') {\r\n            //     items.push(<Menu.Item key=\"T_5\" onClick={() => doAction('requestConfirmP2',[_id])} icon={<DollarOutlined />}>Yêu cầu XN thanh toán đợt 2</Menu.Item>)\r\n            // }\r\n            \r\n            // if (trangthai === 'DANG_BAO_LUU_HOC') {\r\n            //     // items.push(<Menu.Item key=\"T_6\" onClick={() => doAction('requestReturn',[_id])} icon={<RollbackOutlined />}>Yêu cầu quay lại học</Menu.Item>)\r\n            // }\r\n            \r\n            if (trangthai === 'DA_HOC_XONG') {\r\n                items.push(<Menu.Item key=\"T_8\" onClick={() => doAction('requestConfirmP2',[_id])} icon={<CloseOutlined />}>Yêu cầu XNTT đợt 2</Menu.Item>)\r\n            }\r\n            // if (trangthai === 'DA_HOC_XONG' || trangthai === 'CHO_XAC_NHAN_TT2' || trangthai === 'CHO_VAO_BC_2') {\r\n            //     items.push(<Menu.Item key=\"T_9\" onClick={() => doAction('requestReserveResult', [_id])} icon={<CalendarOutlined />}>Yêu cầu bảo lưu thi</Menu.Item>)\r\n            // }\r\n            if (trangthai === 'YEU_CAU_BAO_LUU_THI') {\r\n                items.push(<Menu.Item key=\"T_9\" onClick={() => doAction('cancelReserveResult', [_id])} icon={<DeleteTwoTone />}>Hủy Yêu cầu bảo lưu thi</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_BAO_LUU_THI') {\r\n                items.push(<Menu.Item key=\"T_10\" onClick={() => doAction('requestReturnResult', [_id])} icon={<ReloadOutlined />}>Yêu cầu quay lại thi</Menu.Item>)\r\n            }\r\n            if (trangthai === 'THI_TRUOT_LT' || trangthai === 'THI_TRUOT_SH' || trangthai === 'THI_TRUOT_DT') {\r\n                items.push(<Menu.Item key=\"T_11\" onClick={() => doAction('tRequestCRF',[_id])} icon={<PoundOutlined />}>Yêu cầu XNTT thi lại</Menu.Item>)\r\n            }\r\n        }\r\n        // finance actions - \r\n        if (role === 'FINANCE') {\r\n            if (trangthai === 'CHO_XAC_NHAN_TT1') {\r\n                // items.push(<Menu.Item key=\"F_confirmP1\" icon={<CheckOutlined />} onClick={() => doAction('confirmPayment',[_id])}>Xác nhận thanh toán đợt 1</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_confirmP1\" icon={<CheckOutlined />} onClick={() => {\r\n                    setCPTitle(\"Xác nhận thanh toán đợt một\")\r\n                    setConfirmCMD('paymentOne')\r\n                    toggleCPModal(true)\r\n                }}>Xác nhận thanh toán đợt 1</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XAC_NHAN_TT2') {\r\n                // items.push(<Menu.Item key=\"F_confirmP2\" icon={<CheckCircleFilled />} onClick={() => doAction('confirmPaymentTwo',[_id])}>Xác nhận thanh toán đợt 2</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_confirmP2\" icon={<CheckCircleFilled />} onClick={() => {\r\n                    setCPTitle(\"Xác nhận thanh toán đợt hai\")\r\n                    setConfirmCMD('paymentTwo')\r\n                    toggleCPModal(true)\r\n                }}>Xác nhận thanh toán đợt 2</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XN_HOAN_HUY_FN') {\r\n                // items.push(<Menu.Item key=\"F_acceptwd\" icon={<CheckCircleFilled />} onClick={() => doAction('confirmWithdraw',[_id])}>Chấp thuận rút HS</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_acceptwd\" icon={<CheckCircleFilled />} onClick={() => {\r\n                    setCPTitle(\"Hoàn tiền rút hồ sơ\")\r\n                    setConfirmCMD('confirmWithdraw')\r\n                    toggleCPModal(true)\r\n                }}>Chấp thuận rút HS</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_rjctwd\" onClick={() => doAction('rejectWDFN',[_id])}>Không Chấp thuận rút HS</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XNTT_TL_LT') {\r\n                // items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => doAction('fnConfirmRF',[_id])}>Xác nhận phí thi lại lý thuyết</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => {\r\n                    setCPTitle(\"Xác nhận thanh toán thi lại lý thuyết\")\r\n                    setConfirmCMD('admCFRF')\r\n                    toggleCPModal(true)\r\n                }}>Xác nhận phí thi lại lý thuyết</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XNTT_TL_SH') {\r\n                // items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => doAction('fnConfirmRF',[_id])}>Xác nhận phí thi lại sa hình</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => {\r\n                    setCPTitle(\"Xác nhận thanh toán thi lại Sa hình\")\r\n                    setConfirmCMD('admCFRF')\r\n                    toggleCPModal(true)\r\n                }}>Xác nhận phí thi lại sa hình</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_XNTT_TL_DT') {\r\n                // items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => doAction('fnConfirmRF',[_id])}>Xác nhận phí thi lại đường trường</Menu.Item>)\r\n                items.push(<Menu.Item key=\"F_cfrf\" icon={<CheckOutlined />} onClick={() => {\r\n                    setCPTitle(\"Xác nhận thanh toán thi lại Đường trường\")\r\n                    setConfirmCMD('admCFRF')\r\n                    toggleCPModal(true)\r\n                }}>Xác nhận phí thi lại đường trường</Menu.Item>)\r\n            }\r\n        }\r\n        // admin actions--\r\n        if (role === 'ADMIN') {\r\n            if (trangthai ==='CHO_VAO_BC_1') {\r\n                items.push(<Menu.Item key=\"A_priorJoin\" onClick={() => toggleReportModal(true)} icon={<UsergroupAddOutlined />}>Chuyển vào báo cáo 1</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DA_RUT_HS') {\r\n                items.push(<Menu.Item icon={<DeleteOutlined />} key=\"A_Daruths\" onClick={() => confirmDelete(_id)}>Xóa hồ sơ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_YC_DOI_CHO') {\r\n\r\n                items.push(<Menu.Item icon={<SwapOutlined />} key=\"A_SWP\" onClick={() => doAction('admConfirmSwp',[_id])}>Xác nhận đổi chỗ</Menu.Item>)\r\n            }\r\n            if (trangthai === 'XAC_NHAN_BC_1') {\r\n                items.push(<Menu.Item icon={<CheckOutlined />} key=\"A_XNHX\" onClick={() => doAction('markCompleted',[_id])}>Đánh dấu hoàn thành học</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DA_HOC_XONG') {\r\n                items.push(<Menu.Item icon={<DeleteOutlined />} key=\"A_XNBL2\" onClick={() => confirmAction('markRemove', [_id], 'Huỷ hồ sơ / bỏ học', 'Bạn có chắc muốn hủy các hồ sơ đã chọn?')}>Hủy hồ sơ / bỏ học</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_THI_TN') {\r\n                items.push(<Menu.Item icon={<CheckOutlined />} key=\"A_5\" onClick={() => doAction('markGrad',[_id])}>Đánh dấu đã TN</Menu.Item>)\r\n                items.push(<Menu.Item icon={<ExclamationCircleOutlined />} key=\"A_6\" onClick={() => doAction('markFail',[_id])}>Đánh dấu TRƯỢT TN</Menu.Item>)\r\n            }\r\n            if (trangthai === 'TRUOT_TN') {\r\n                items.push(<Menu.Item icon={<RetweetOutlined />} key=\"A_9\" onClick={() => doAction('markForRetest',[_id])}>Vào danh sách thi lại TN</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_VAO_BC_2') {\r\n                items.push(<Menu.Item icon={<OrderedListOutlined />} key=\"A_7\" onClick={() => toggleR2Modal(true)}>Chuyển vào báo cáo 2</Menu.Item>)\r\n            }\r\n            if (trangthai === 'CHO_VAO_BC_2' || trangthai === 'DANG_TRONG_BC_2') {\r\n                items.push(<Menu.Item icon={<CalendarOutlined />} key=\"A_81\" onClick={() => confirmAction('reservResult',[_id], \"Bảo lưu kết quả?\", \"Bạn có muốn bảo lưu kết quả của hồ sơ này không?\")}>Bảo lưu kết quả</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_YC_QUAY_LAI_THI') {\r\n                items.push(<Menu.Item icon={<ReloadOutlined />} key=\"A_82\" onClick={() => confirmAction('confirmReturn',[_id], \"Quay lại thi\", \"Bạn có muốn cho hồ sơ này quay lại thi?\")}>Xác nhận quay lại thi</Menu.Item>)\r\n            }\r\n            if (trangthai === 'DANG_TRONG_BC_2') {\r\n                items.push(<Menu.Item icon={<InfoCircleOutlined />} key=\"A_8\" onClick={() => confirmAction('markFinish',[_id], \"Hoàn thành khóa học\", \"Bạn có muốn đánh dấu hồ sơ này đã hoàn thành khóa học?\")}>Hoàn thành khóa học</Menu.Item>)\r\n                items.push(\r\n                    <Menu.SubMenu key=\"_a10\" title=\"Thi trượt\" icon={<CaretLeftFilled />}>\r\n                        <Menu.Item key=\"_a101\" onClick={() => markFailed([_id], 'THI_TRUOT_LT')}>Thi trượt lý thuyết</Menu.Item>\r\n                        <Menu.Item key=\"_a102\" onClick={() => markFailed([_id], 'THI_TRUOT_SH')}>Thi trượt sa hình</Menu.Item>\r\n                        <Menu.Item key=\"_a103\" onClick={() => markFailed([_id], 'THI_TRUOT_DT')}>Thi trượt đường trường</Menu.Item>\r\n                    </Menu.SubMenu>\r\n                )\r\n            }\r\n        }\r\n        if (role === 'MANAGER') {\r\n            // items.push(<Menu.Item icon={<CheckOutlined />} key=\"_gd1\" onClick={() => doAction('confirmWDGD',[_id])}>Chấp thuận rút HS</Menu.Item>)\r\n            items.push(<Menu.Item icon={<CheckOutlined />} key=\"_gd1\" onClick={() => {\r\n                toggleRefundModal(true)\r\n            }}>\r\n                Chấp thuận rút HS\r\n            </Menu.Item>)\r\n            items.push(<Menu.Item icon={<DeleteOutlined />} key=\"_gd2\" onClick={() => doAction('rejectWDGD',[_id])}>Không chấp thuận rút HS</Menu.Item>)\r\n        }\r\n        if (role === 'SUPER_ADMIN') {\r\n            items.push(<Menu.Item icon={<FieldTimeOutlined />} key=\"_spa1\" onClick={() => toggleStatusModal(true)}>Đặt lại trạng thái hồ sơ</Menu.Item>)\r\n        }\r\n        const menu = (\r\n            <Dropdown\r\n                trigger={['click']}\r\n                overlay={(\r\n                    <Menu theme=\"dark\">\r\n                        {items}\r\n                    </Menu>\r\n            )}>\r\n                <Button type=\"primary\" shape=\"round\">\r\n                    <EllipsisOutlined />\r\n                </Button>\r\n            </Dropdown>\r\n            \r\n        ) \r\n        return menu\r\n    }\r\n    const confirmReserv = async () => {\r\n        await doAction('requestWithdraw',[student._id])\r\n        // console.log(enddate.toDate())\r\n        toggleReservModal(false)\r\n    }\r\n\r\n    const confirmDelete = async (student: string) => {\r\n        Modal.confirm({\r\n            onCancel: () => toggleDeleteModdal(false),\r\n            visible: deleteModal,\r\n            onOk: async () => deleteStudent(student),\r\n            title: 'Bạn có thật sự muốn xóa hồ sơ này?',\r\n        })\r\n    }\r\n\r\n    const confirmMoveToR1 = async (report: string) => {\r\n        await moveToR1([student._id], report)\r\n        toggleReportModal(false)\r\n    }\r\n\r\n    const confirmMoveR2 = async (report: string) => {\r\n        await movetoR2([student._id], report)\r\n    }\r\n\r\n    const switchStatus = async (trangthai: string) => {\r\n        // const { _id } = student\r\n        await changeStatus([student._id], trangthai)\r\n        toggleStatusModal(false)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Thông tin hồ sơ\"\r\n                subTitle={student.randomId}\r\n                extra={createMenu()}\r\n                onBack={() => history.goBack()}\r\n            />\r\n            <AvailableReportModal\r\n                loading={loadingReport}\r\n                reports={reports}\r\n                visible={reportModal}\r\n                onCancel={() => toggleReportModal(false)}\r\n                onOk={(report: string) => confirmMoveToR1(report)}\r\n            />\r\n            <ReserveModal\r\n                visible={reservModal}\r\n                onCancel={() => toggleReservModal(false)}\r\n                onOk={confirmReserv}\r\n            />\r\n            <Report2Modal\r\n                dataKey=\"loadBreports\"\r\n                query={LOAD_B_REPORTS}\r\n                onMove={(report: string) => confirmMoveR2(report)}\r\n                visible={r2Modal}\r\n                onCancel={() => toggleR2Modal(false)}\r\n                onOk={() => toggleR2Modal(false)}\r\n            />\r\n            <SwapModal\r\n                student={student._id}\r\n                visible={swapModal}\r\n                onCancel={() => toggleSwapModal(false)}\r\n                onOk={() => toggleSwapModal(false)}\r\n            />\r\n            <ForceStatusModal\r\n                visible={statusModal}\r\n                onCancel={()=>toggleStatusModal(false)}\r\n                onOk={(trangthai: string) => switchStatus(trangthai)}\r\n            />\r\n            <CPModal\r\n                visible={cpModal}\r\n                onCancel={() => toggleCPModal(false)}\r\n                onOk={() => toggleCPModal(false)}\r\n                title={cpTitle}\r\n                confirm={{\r\n                    'paymentOne': confirmP1,\r\n                    'paymentTwo': confirmP2,\r\n                    'admCFRF': admCFRF,\r\n                    'confirmWithdraw': confirmWithdraw\r\n                }}\r\n                command={confirmCMD}\r\n                selected={selected}\r\n            />\r\n            <RefundModal\r\n                visible={refundModal}\r\n                onCancel={() => toggleRefundModal(false)}\r\n                students={[student]}\r\n                onOk={() => doAction('confirmWDGD', [student._id])}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {\r\n    Typography,\r\n    Divider,\r\n    Descriptions,\r\n    // Button,\r\n    Image\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport status from '../../../common/StudentStatus'\r\n\r\nconst { Title } = Typography\r\n\r\ntype BasicInfoType = {\r\n    student: any,\r\n    role: string\r\n}\r\n\r\n\r\nconst BasicInfo:React.FC<BasicInfoType> = ({\r\n    student,\r\n    role,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Divider />\r\n            <Descriptions\r\n                layout=\"vertical\"\r\n                title={<Title level={4}>Thông tin cơ bản</Title>}\r\n            >\r\n                <Descriptions.Item label=\"Họ và tên\">\r\n                    <strong>\r\n                        {student.ten}\r\n                    </strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Ngày tháng năm sinh\">{moment(parseFloat(student.ngaysinh)).format('DD/MM/YYYY')}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Quê quán\">{student.quequan}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Số điện thoại\">{student.mobile}</Descriptions.Item>\r\n                <Descriptions.Item label=\"CMND\">\r\n                    <Image src={`http://localhost:5001/${student.anh34}`} />\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n            <Divider />\r\n            <Descriptions\r\n                layout=\"vertical\"\r\n                title={<Title level={4}>Thông tin đào tạo</Title>}\r\n            >\r\n                <Descriptions.Item label=\"Hạng bằng lái\">\r\n                    <strong>{student.hangbang}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Số điện thoại\">\r\n                    <strong>{student.mobile}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Trạng thái\">\r\n                {/* @ts-ignore */}\r\n                    <strong>{status[student.trangthai]}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Báo cáo 1\">\r\n                    <strong>{student.baocao1?.name || 'Không có thông tin'}</strong>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Báo cáo 2\">\r\n                    <strong>{student.baocao2?.name || 'Không có thông tin'}</strong>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\nexport default BasicInfo","import React from 'react'\r\nimport {\r\n    Space,\r\n    Timeline,\r\n    Typography\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport {\r\n    // ArrowRightOutlined,\r\n    CheckCircleOutlined,\r\n    // CheckCircleTwoTone,\r\n    ClockCircleOutlined,\r\n    // ClockCircleTwoTone,\r\n    ExclamationCircleOutlined,\r\n    // ExclamationCircleTwoTone,\r\n    RightCircleOutlined\r\n} from '@ant-design/icons'\r\nimport StudentStatus from '../../../common/StudentStatus'\r\n\r\nconst status = [\r\n    'MOI_TAO',\r\n    'DANG_TRONG_BC_1',\r\n    'DANG_YC_DOI_CHO',\r\n    'XAC_NHAN_BC_1',\r\n    'DANG_TRONG_BC_2',\r\n]\r\n\r\nconst redStatus = [\r\n    'TRUOT_TN',\r\n    'DA_RUT_HS',\r\n    'DA_BO_HOC',\r\n    'THI_TRUOT_LT',\r\n    'THI_TRUOT_SH',\r\n    'THI_TRUOT_DT',\r\n]\r\n\r\nconst successStatus = [\r\n    'DA_HOC_XONG',\r\n    'HOAN_THANH',\r\n    'CHO_VAO_BC_2',\r\n]\r\n\r\nconst pendingSts = [\r\n    'DANG_BAO_LUU_THI',\r\n    'DANG_YC_QUAY_LAI_THI',\r\n    'CHO_VAO_BC_1',\r\n    'CHO_XAC_NHAN_TT1',\r\n    'CHO_XN_HOAN_HUY_FN',\r\n    'CHO_XN_HOAN_HUY_GD',\r\n    'CHO_THI_TN',\r\n    'CHO_XAC_NHAN_TT2',\r\n    'CHO_XNTT_TL_LT',\r\n    'CHO_XNTT_TL_SH',\r\n    'CHO_XNTT_TL_DT',\r\n]\r\n\r\nconst { Title } = Typography\r\n\r\ntype Ctype = {\r\n    history: Record<string,any>[]\r\n}\r\n\r\nconst StudentTimeline:React.FC<Ctype> = ({\r\n    history\r\n}) => {\r\n    return (\r\n        <Space direction=\"vertical\" size=\"large\" style={{width: '100%', marginTop: '3em'}}>\r\n            <Title level={3} style={{ textAlign: 'center'}}>Lịch sử hồ sơ</Title>\r\n            <Timeline mode=\"left\">\r\n                {history.map(h => {\r\n                    let Icon\r\n                    if (successStatus.indexOf(h.state) >= 0) {\r\n                        Icon = <CheckCircleOutlined style={{color: 'green'}} />\r\n                    }\r\n                    if (status.indexOf(h.state) >= 0) {\r\n                        Icon = <RightCircleOutlined style={{color: 'green'}} />\r\n                    }\r\n                    if (redStatus.indexOf(h.state) >= 0) {\r\n                        Icon = <ExclamationCircleOutlined style={{color: 'red' }} />\r\n                    }\r\n                    if (pendingSts.indexOf(h.state) >= 0) {\r\n                        Icon = <ClockCircleOutlined style={{ color: 'darkmagenta'}} />\r\n                    }\r\n                    return (\r\n                        <Timeline.Item\r\n                            dot={Icon}\r\n                            key={h.date}\r\n                            label={moment(parseFloat(h.date)).format('DD/MM/YYYY')}\r\n                        >\r\n                            <strong>{StudentStatus[h.state]}</strong><br />\r\n                            {h.reason}\r\n                        </Timeline.Item>\r\n                    )\r\n                })}\r\n            </Timeline>\r\n        </Space>\r\n    )\r\n}\r\nexport default StudentTimeline","import React from 'react'\r\nimport {\r\n    message,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    Alert\r\n} from 'antd'\r\nimport {\r\n    // gql,\r\n    useMutation,\r\n    useLazyQuery,\r\n    // ApolloError\r\n} from '@apollo/client'\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\nimport Header from './Header'\r\nimport BasicInfo from './StudentInfo/Basic'\r\nimport {\r\n    LOAD_A_REPORT,\r\n    LOAD_SINGLE_STD,\r\n    REQUEST_CONFIRM_PAYMENT,\r\n    CONFIRM_PAYMENT,\r\n    REQUEST_WITHDRAW,\r\n    APPROVE_RESERV,\r\n    REJECT_WD_FN,\r\n    CANCEL_WITHDRAW_REQUEST,\r\n    DELETE_STUDENT,\r\n    MOVE_TO_R1,\r\n    // REQUEST_RESERVE,\r\n    CANCEL_REQUEST_RESERV,\r\n    CONFIRM_RESERVE_BC1,\r\n    // REQUEST_TO_RETURN,\r\n    MARK_COMPLETED,\r\n    REQUEST_CONFIRM_P_2,\r\n    CONFIRM_PAYMENT_TWO,\r\n    REQUEST_RESERVE_RESULT,\r\n    CANCEL_RESERVE_RESULT,\r\n    CONFIRM_RESERVE_RESULT,\r\n    REQUEST_RETURN_RESULT,\r\n    CONFIRM_WD_GD,\r\n    REJECT_WD_GD,\r\n    MARK_GRAD,\r\n    MARK_FAIL,\r\n    MARK_FOR_RETEST,\r\n    MOVE_TO_R2,\r\n    RESERVE_RESULT,\r\n    ADMIN_CONFIRM_RETURN,\r\n    ADMIN_MARK_FINISH,\r\n    ADMIN_MARK_REMOVE,\r\n    ADMIN_MARK_FINAL_FAIL,\r\n    TEACHER_REQUEST_CONFIRM_RETEST_FEE,\r\n    ADM_CONFIRM_RETEST_FEE,\r\n    ADM_CONFIRM_SWAP,\r\n    FORCE_STATUS\r\n} from '../../common/ClientQueries'\r\nimport StudentTimeline from './StudentInfo/Timeline'\r\n\r\n\r\ntype RouteParams = {\r\n    id: string\r\n}\r\n\r\nconst SingleStudent = () => {\r\n    const { id } = useParams<RouteParams>()\r\n    const history = useHistory()\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const [confirmModal, toggleConfirmModal] = React.useState(false)\r\n    const [loadStd, { loading, data, error}] = useLazyQuery(LOAD_SINGLE_STD)\r\n    const [requestConfirmPayment] = useMutation(REQUEST_CONFIRM_PAYMENT, { refetchQueries: [LOAD_SINGLE_STD]})\r\n    const [loadAReports, { data: reports = { loadAReport:[]}, loading: loadingReports }] = useLazyQuery(LOAD_A_REPORT)\r\n    // const [prioJoin] = useMutation(PRIORITY_JOIN)\r\n    // const [loadAroom, { data: availableRooms }] = useLazyQuery(LOAD_AVAILABLE_ROOM)\r\n    const [confirmP] = useMutation(CONFIRM_PAYMENT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestWD] = useMutation(REQUEST_WITHDRAW, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmReserv] = useMutation(APPROVE_RESERV, { refetchQueries: [LOAD_SINGLE_STD] }) // finance action - do not remove\r\n    const [cancelWithdraw] = useMutation(CANCEL_WITHDRAW_REQUEST, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [delStudent] = useMutation(DELETE_STUDENT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [mover1] = useMutation(MOVE_TO_R1, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    // const [requestResrv] = useMutation(REQUEST_RESERVE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [cancelRequestResrv] = useMutation(CANCEL_REQUEST_RESERV, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmRequestResrv] = useMutation(CONFIRM_RESERVE_BC1, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    // const [reqReturn] = useMutation(REQUEST_TO_RETURN, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markComplete] = useMutation(MARK_COMPLETED, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestConfirmP2] = useMutation(REQUEST_CONFIRM_P_2, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmPaymentTwo] = useMutation(CONFIRM_PAYMENT_TWO, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestReserveResult] = useMutation(REQUEST_RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [cancelReserveResult] = useMutation(CANCEL_RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmReserveResult] = useMutation(CONFIRM_RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [requestReturnResult] = useMutation(REQUEST_RETURN_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [rejectWDFN] = useMutation(REJECT_WD_FN, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmWDGD] = useMutation(CONFIRM_WD_GD, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [rejectWDGD] = useMutation(REJECT_WD_GD, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markGrad] = useMutation(MARK_GRAD, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markFail] = useMutation(MARK_FAIL, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markForRetest] = useMutation(MARK_FOR_RETEST, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [movetoR2] = useMutation(MOVE_TO_R2, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [reservResult] = useMutation(RESERVE_RESULT, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [confirmReturn] = useMutation(ADMIN_CONFIRM_RETURN, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markFinish] = useMutation(ADMIN_MARK_FINISH, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [markRemove] = useMutation(ADMIN_MARK_REMOVE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [admMarkFFail] = useMutation(ADMIN_MARK_FINAL_FAIL, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [tRequestCRF] = useMutation(TEACHER_REQUEST_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [fnConfirmRF] = useMutation(ADM_CONFIRM_RETEST_FEE, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [admConfirmSwp] = useMutation(ADM_CONFIRM_SWAP, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    const [forceStatus] = useMutation(FORCE_STATUS, { refetchQueries: [LOAD_SINGLE_STD] })\r\n    \r\n    const commands:Record<string,any> = {\r\n        'requestConfirmPayment': requestConfirmPayment,\r\n        'confirmPayment': confirmP,\r\n        'requestWithdraw': requestWD,\r\n        'cancelWithdraw': cancelWithdraw,\r\n        'confirmWithdraw': confirmReserv,\r\n        // 'requestReserve': requestResrv,\r\n        'cancelReserve': cancelRequestResrv,\r\n        'confirmReserve': confirmRequestResrv,\r\n        // 'requestReturn': reqReturn,\r\n        'markCompleted': markComplete,\r\n        'requestConfirmP2': requestConfirmP2,\r\n        'confirmPaymentTwo': confirmPaymentTwo,\r\n        'requestReserveResult': requestReserveResult,\r\n        'cancelReserveResult': cancelReserveResult,\r\n        'confirmReserveResult': confirmReserveResult,\r\n        'requestReturnResult': requestReturnResult,\r\n        'rejectWDFN': rejectWDFN,\r\n        'confirmWDGD':confirmWDGD,\r\n        'rejectWDGD':rejectWDGD,\r\n        'markGrad':markGrad,\r\n        'markFail':markFail,\r\n        'markForRetest':markForRetest,\r\n        'movetoR2': movetoR2,\r\n        'reservResult': reservResult,\r\n        'confirmReturn': confirmReturn,\r\n        'markFinish': markFinish,\r\n        'markRemove': markRemove,\r\n        'admMarkFFail': admMarkFFail,\r\n        'tRequestCRF': tRequestCRF,\r\n        'fnConfirmRF': fnConfirmRF,\r\n        'admConfirmSwp': admConfirmSwp,\r\n        // 'forceStatus': forceStatus\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadStd({\r\n                variables: {\r\n                    id\r\n                }\r\n            })\r\n            if (user.role === 'ADMIN' || user.role === 'MANAGER') {\r\n                await loadAReports({\r\n                    variables: {\r\n                        filter: {\r\n                            status: 'PENDING',\r\n                        },\r\n                        page: 1,\r\n                        limit: 10\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        load()\r\n    }, [id, loadStd, loadAReports, user])\r\n\r\n\r\n    const deleteStudent = async (student: string) => {\r\n        await delStudent({\r\n            variables: {\r\n                student\r\n            }\r\n        })\r\n        history.goBack()\r\n    }\r\n\r\n    const moveToR1 = async (students: string[], report: string) => {\r\n        try {\r\n            await mover1({\r\n                variables: {\r\n                    students,\r\n                    report\r\n                }\r\n            })\r\n            message.success('Chuyển vào BC 1 thành công')\r\n        } catch (e) {\r\n            message.error('Đã có lỗi xẩy ra trong quá trình chuyển BC1')\r\n        }\r\n    }\r\n\r\n    const changeStatus = async (students: string[], trangthai: string) => {\r\n        try {\r\n            await forceStatus({\r\n                variables: {\r\n                    students,\r\n                    trangthai\r\n                }\r\n            })\r\n            message.success('Thay đổi trạng thái thành công')\r\n        } catch (error) {\r\n            message.error('Đã có lỗi xẩy ra - không thể thay đổi trạng thái hồ sơ')\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <span>....loading</span>\r\n    }\r\n\r\n    const doAction = async (action: string, students: string[]) => {\r\n        if (!students || students.length === 0) {\r\n            message.error('Không thể thực hiện thao tác - thiếu thông tin hồ sơ')\r\n        }\r\n        try {\r\n            commands[action as keyof Object]({\r\n                variables: {\r\n                    students\r\n                }\r\n            })\r\n            // await action({\r\n                // })\r\n            message.success('Thành công')\r\n        } catch (e) {\r\n            message.error('Thao tác không thành công - vui lòng kiểm tra lại thông tin')\r\n        }\r\n\r\n    }\r\n\r\n    const confirmAction = async(action: string, students: string[], modalTitle: string, modalContent: string) => {\r\n        if (!students || students.length === 0) {\r\n            message.error('Không thể thực hiện thao tác - thiếu thông tin hồ sơ')\r\n        }\r\n        try {\r\n            Modal.confirm({\r\n                title: modalTitle,\r\n                content: modalContent,\r\n                onCancel: () => toggleConfirmModal(false),\r\n                visible: confirmModal,\r\n                onOk: async () => {\r\n                    commands[action as keyof Object]({\r\n                        variables: {\r\n                            students\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            // await action({\r\n            // })\r\n        } catch (e) {\r\n            message.error('Thao tác không thành công - vui lòng kiểm tra lại thông tin')\r\n        }\r\n\r\n    }\r\n\r\n    const markFailed = async (students: string[], reason: string) => {\r\n        try {\r\n            await admMarkFFail({\r\n                variables: {\r\n                    students,\r\n                    reason\r\n                }\r\n            })\r\n            message.success('Đánh dấu thi trượt thành công')\r\n        } catch (error) {\r\n            message.error('Đã có lỗi xẩy ra, vui lòng kiểm tra lại thông tin')\r\n        }\r\n    }\r\n\r\n    if (!loading && !error && data) {\r\n        if (!data.loadSingleStd) {\r\n            return (\r\n                <Alert message=\"Không tìm thấy người dùng\" type=\"error\" />\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <Header\r\n                    markFailed={markFailed}\r\n                    confirmAction={confirmAction}\r\n                    role={user.role}\r\n                    student={data.loadSingleStd}\r\n                    deleteStudent={deleteStudent}\r\n                    moveToR1={moveToR1}\r\n                    reports={reports.loadAReport.reports}\r\n                    loadingReport={loadingReports}\r\n                    doAction={doAction}\r\n                    movetoR2={async (students: string[], report: string) => {\r\n                        await movetoR2({\r\n                            variables: {\r\n                                students,\r\n                                report\r\n                            }\r\n                        })\r\n                    }}\r\n                    changeStatus={changeStatus}\r\n                />\r\n                <Row>\r\n                    <Col sm={24} md={12}>\r\n                        <BasicInfo\r\n                            student={data.loadSingleStd}\r\n                            role={user.role}\r\n                        />\r\n                    </Col>\r\n                    <Col sm={24} md={12}>\r\n                        <StudentTimeline history={data.loadSingleStd.history} />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\nexport default SingleStudent","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    message\r\n} from 'antd'\r\nimport grades from '../../common/HangBang'\r\n\r\nconst { Option } = Select\r\n\r\ntype CType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (r: Record<string,any>) => void\r\n    type: string\r\n}\r\n\r\nconst CreateReportModal:React.FC<CType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    type\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [creating, toggleCreating] = React.useState(false)\r\n\r\n    const onCreate = async () => {\r\n        toggleCreating(true)\r\n        const report = form.getFieldsValue()\r\n        console.log(report)\r\n        if (!report.name || !report.hangbang) {\r\n            message.error('Không thể tạo báo cáo do thiếu thông tin')\r\n            onCancel()\r\n        }\r\n        toggleCreating(false)\r\n        onOk(report)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onCreate}\r\n            title={`Tạo mới báo cáo mới - ${type === 'BC1' ? 'Báo cáo 1' : 'Báo cáo 2'}`}\r\n            okButtonProps={{\r\n                loading: creating\r\n            }}\r\n        >\r\n            <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\r\n                <Form.Item label=\"Tên báo cáo\" name=\"name\" rules={[{ required: true, message: 'Bắt buộc phải có tên'}]}>\r\n                    <Input placeholder=\"báo cáo một - ngày/tháng/năm\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Hạng bằng\" name=\"hangbang\" rules={[{ required: true, message: 'Bắt buộc phải có hạng bằng lái'}]}>\r\n                    <Select>\r\n                        {Object.keys(grades).map(g => (\r\n                            <Option key={g} value={g}>{`${g} -  ${grades[g as keyof Object]}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Ghi chú\" name=\"desc\">\r\n                    <Input placeholder=\"Ghi chú & diễn giải\" />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CreateReportModal","export const trangthaibaocao = {\r\n    'PENDING': 'Đang chờ phê duyệt',\r\n    'APPROVED': 'Đã phê duyệt'\r\n}","import React from 'react'\r\nimport {\r\n    Table\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\nimport { trangthaibaocao } from '../../../common/trangthai'\r\n\r\ntype CType = {\r\n    reports: Record<string,any>[]\r\n    type: string\r\n}\r\n\r\nconst ReportList:React.FC<CType> = ({\r\n    reports,\r\n    type\r\n}) => {\r\n    const columns = [\r\n        {\r\n            title: 'Ngày tạo',\r\n            dataIndex: 'created',\r\n            render: (text: string) => <span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Hạng bằng',\r\n            dataIndex: 'hangbang'\r\n        },\r\n        {\r\n            title: 'Tên báo cáo',\r\n            dataIndex: 'name',\r\n            render: (text: string, record: any) => <Link to={`${ type==='BC1'? '/rp1/':'/rp2/'}${record._id}`}>{text}</Link>\r\n        },\r\n        {\r\n            title: 'Chú thích',\r\n            dataIndex: 'desc'\r\n        },\r\n        {\r\n            title: 'SL học viên',\r\n            dataIndex: 'stdCount',\r\n            render: (text: string) => <strong>{text? text : '0'}</strong>\r\n        },\r\n        {\r\n            title: 'Trạng thái',\r\n            dataIndex: 'status',\r\n            render: (text: string) => (\r\n                <span>\r\n                    {trangthaibaocao[text as keyof Object]}\r\n                </span>\r\n            )\r\n        }\r\n    ]\r\n    return (\r\n        <div>\r\n            <Table\r\n                dataSource={reports}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportList\r\n","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\nimport hangbang from '../../../common/HangBang'\r\n\r\nconst { Option } = Select\r\nconst trangthais = {\r\n    'PENDING': 'Đang chờ phê duyệt',\r\n    'APPROVED': 'Đã phê duyệt'\r\n}\r\n\r\ntype ReportFilterModalType = {\r\n    visible: boolean,\r\n    onCancel: () => void\r\n    onOk: (filter: Record<string,any>) => void\r\n    filter: Record<string, any>\r\n}\r\n\r\nconst ReportFileterModal:React.FC<ReportFilterModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    filter\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    form.setFieldsValue(filter)\r\n    const onConfirm = () => {\r\n        onOk(form.getFieldsValue())\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            title=\"Lọc báo cáo\"\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={onConfirm}\r\n        >\r\n            <Form form={form} labelCol={{ span: 6}} wrapperCol={{ span: 18}}>\r\n                <Form.Item label=\"Tên báo cáo\" name=\"name\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Chú thích\" name=\"desc\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Hạng bằng\" name=\"hangbang\">\r\n                    <Select>\r\n                        {Object.keys(hangbang).map(hb => (\r\n                            <Option value={hb} key={hb}>{`${hb} - ${hangbang[hb as keyof Object]}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Trạng thái\" name=\"status\">\r\n                    <Select>\r\n                        {Object.keys(trangthais).map(hb => (\r\n                            <Option value={hb} key={hb}>{trangthais[hb as keyof Object]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ReportFileterModal","export const notFilterEmpty = (filter: any) => {\r\n    const matchingKey = Object.keys(filter).find(k => filter[k] !== null)\r\n    return Boolean(matchingKey)\r\n}\r\n","import React from 'react';\r\nimport {\r\n    PageHeader,\r\n    Button,\r\n    Space,\r\n    Pagination\r\n} from 'antd'\r\nimport {\r\n    FilterOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n    // gql,\r\n    useMutation,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport CreateReportModal from'./CreateReportModal'\r\nimport ReportList from './ReportList/ReportList'\r\nimport ReportFileterModal from './Modals/FilterReportModal'\r\nimport {\r\n    notFilterEmpty\r\n} from '../../common/utils'\r\n\r\n\r\n// const CREATE_A_REPORT = gql `\r\n//     mutation createAReport($report: ReportOneInput) {\r\n//         createAReport(report: $report) {\r\n//             _id\r\n//             hangbang\r\n//             name\r\n//             desc\r\n//             status\r\n//             created\r\n//             createdBy {\r\n//                 name\r\n//             },\r\n//             stdCount\r\n//         }\r\n//     }\r\n// `\r\n// const LOAD_A_REPORT = gql `\r\n//     query loadAReport($filter: ReportFilter, $page: Int, $limit: Int) {\r\n//         loadAReport(filter: $filter, page: $page, limit: $limit) {\r\n//             reports {\r\n//                 _id\r\n//                 hangbang\r\n//                 name\r\n//                 desc\r\n//                 status\r\n//                 createdBy {\r\n//                     name\r\n//                 },\r\n//                 stdCount\r\n//                 created\r\n//             }\r\n//             total\r\n//         }\r\n//     }\r\n// `\r\ntype ReportType = {\r\n    createQuery: {\r\n        reportKey: string,\r\n        query: any\r\n    }\r\n    loadQuery: {\r\n        reportKey: string,\r\n        query: any\r\n    }\r\n    title: string,\r\n    type: string\r\n}\r\nconst ReportOnes:React.FC<ReportType> = ({\r\n    createQuery,\r\n    loadQuery,\r\n    title,\r\n    type\r\n}) => {\r\n    const limit = 50\r\n    // const [createReportOne] = useMutation(CREATE_A_REPORT)\r\n    const [createReportOne] = useMutation(createQuery.query, {refetchQueries: [loadQuery.query]})\r\n    const [createMdl, toggleCreateMdl] = React.useState(false)\r\n    // const [loadAReports, {data: reportData}] = useLazyQuery(LOAD_A_REPORT)\r\n    const [loadAReports, { data: reportData }] = useLazyQuery(loadQuery.query)\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        name: null,\r\n        desc: null,\r\n        hangbang: null,\r\n        status: null\r\n    })\r\n    const [page, setPage] = React.useState(1)\r\n    React.useEffect(() => {\r\n        const loadReports = async () => {\r\n            await loadAReports({\r\n                variables: {\r\n                    filter,\r\n                    page,\r\n                    limit\r\n                }\r\n            })\r\n        }\r\n        loadReports()\r\n    }, [ loadAReports, filter, page, limit ])\r\n\r\n    const createReport = async (report: Record<string,any>) => {\r\n        await createReportOne({\r\n            variables: {\r\n                report\r\n            }\r\n        })\r\n        toggleCreateMdl(false)\r\n    } \r\n\r\n    const onToggleFilter = () => {\r\n        if (notFilterEmpty(filter)) {\r\n            setFilter({\r\n                name: null,\r\n                desc: null,\r\n                hangbang: null,\r\n                status: null\r\n            })\r\n        } else {\r\n            toggleFilterModal(true)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title={title}\r\n                extra={[\r\n                    <Button shape=\"round\" key=\"_add\" type=\"primary\" onClick={() => toggleCreateMdl(true)}>\r\n                        <PlusOutlined />\r\n                    </Button>,\r\n                    <Button danger={notFilterEmpty(filter)} key=\"_filter\" shape=\"round\" onClick={() => onToggleFilter()}>\r\n                        <FilterOutlined />\r\n                        {/* {notFilterEmpty(filter) ? 'Xóa bộ lọc' : 'Lọc báo cáo'} */}\r\n                    </Button>\r\n                ]}\r\n            />\r\n            {reportData && reportData[loadQuery.reportKey] && (\r\n                <Space direction=\"vertical\" style={{width: '100%'}}>\r\n                    <ReportList\r\n                        type={type}\r\n                        reports={reportData[loadQuery.reportKey as keyof Object].reports}\r\n                    />\r\n                    <Pagination\r\n                        current={page}\r\n                        onChange={(page: number) => setPage(page)}\r\n                        total={reportData[loadQuery.reportKey as keyof Object].total}\r\n                        pageSize={limit}\r\n                    />\r\n                </Space>\r\n            )}\r\n            <CreateReportModal\r\n                type={type}\r\n                visible={createMdl}\r\n                onCancel={() => toggleCreateMdl(false)}\r\n                onOk={(report) => createReport(report)}\r\n            />\r\n            <ReportFileterModal\r\n                filter={filter}\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                onOk={(filter: Record<string,any>) => setFilter(filter)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ReportOnes","import React from 'react'\r\nimport {\r\n    List,\r\n    Modal,\r\n    Input,\r\n    Form,\r\n    Divider,\r\n    // message\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    // useMutation,\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport { CheckOutlined, IdcardOutlined, MobileOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\ntype ModalType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (stds: string[]) => void\r\n    hangbang: string\r\n    type: string\r\n}\r\n\r\nconst SEARCH_STUDENTS_4_BC1 = gql`\r\n    query searchStd4bc1($filter: FilterInput, $hangbang: String!) {\r\n        searchStd4bc1(filter: $filter, hangbang: $hangbang) {\r\n            _id\r\n            randomId\r\n            ten\r\n            ngaysinh\r\n            # anh34\r\n            quequan\r\n            # cmt1\r\n            # cmt2\r\n            # bangcap\r\n            hangbang\r\n            mobile\r\n            # dondk\r\n            # giaykhamSK\r\n            # hopdongdaotao\r\n            trangthai\r\n            # baoluu\r\n            # baocao1\r\n            # kq1\r\n            # kq2\r\n            # createdBy\r\n            # created\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst AddStdModal:React.FC<ModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    type,\r\n    hangbang\r\n}) => {\r\n    let searchTimeout:any = null\r\n    const [searchStds, { data = { searchStd4bc1:[]}}] = useLazyQuery(SEARCH_STUDENTS_4_BC1, { fetchPolicy: 'network-only'})\r\n    const [selected, setSelected] = React.useState<string[]>([])\r\n    const [adding, toggleAdding] = React.useState(false)\r\n\r\n    const onStudentClick = (student: string) => {\r\n        const idx = selected.indexOf(student)\r\n        if (idx >= 0) {\r\n            setSelected(selected.filter(s => s!== student))\r\n        } else {\r\n            setSelected([student].concat(selected))\r\n        }\r\n    }\r\n\r\n    const onKeywordChange:React.ChangeEventHandler<HTMLInputElement> = async (e) => {\r\n        if (searchTimeout) {\r\n            clearTimeout(searchTimeout)\r\n        }\r\n        searchTimeout = setTimeout(() => {\r\n            const { value } = e.target\r\n            const filter = {\r\n                ten: value,\r\n                mobile: value,\r\n                randomId: value,\r\n                trangthai: type === 'BC1' ? 'CHO_VAO_BC_1' : 'CHO_VAO_BC_2'\r\n            }\r\n            // if (value.length >=3) {\r\n                searchStds({\r\n                    variables: {\r\n                        filter,\r\n                        hangbang\r\n                    }\r\n                })\r\n            // }\r\n            // const page = 1\r\n            // const limit = 20\r\n        }, 700)\r\n    }\r\n\r\n    const add = async () => {\r\n        toggleAdding(true)\r\n        await onOk(selected)\r\n        toggleAdding(false)\r\n        onCancel()    \r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={() => add()}\r\n            okButtonProps={{\r\n                loading: adding\r\n            }}\r\n            title=\"Thêm hồ sơ vào BC 1\"\r\n        >\r\n            <Form layout=\"vertical\">\r\n                <Form.Item label=\"Tìm kiếm hồ sơ\">\r\n                    <Input onChange={onKeywordChange} placeholder=\"Tìm theo tên/sdt/ mã HS\" />\r\n                </Form.Item>\r\n            </Form>\r\n            <Divider />\r\n            {data.searchStd4bc1.length > 0 && <p>Chọn trong danh sách({selected.length})</p>}\r\n            <List\r\n                dataSource={data.searchStd4bc1}\r\n                renderItem={(item:any) => (\r\n                    <List.Item\r\n                        style={{ cursor: 'pointer'}}\r\n                        key={item._id}\r\n                        onClick={() => onStudentClick(item._id)}\r\n                        actions={selected.indexOf(item._id) >=0 ? [<CheckOutlined style={{ color: 'blue'}} />]: ['']}\r\n                    >\r\n                        <List.Item.Meta\r\n                            title={`${item.ten} - ${item.randomId}`}\r\n                            description={<p><MobileOutlined />{item.mobile}{` - `}<IdcardOutlined />{moment(parseFloat(item.ngaysinh)).format('DD/MM/YYYY')}</p>}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\nexport default AddStdModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input\r\n} from 'antd'\r\n\r\ntype ModalType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (filter: Record<string,any>) => void\r\n}\r\n\r\nconst FilterModal: React.FC<ModalType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [loading, toggleLoading] = React.useState(false)\r\n    \r\n    const changeFilter = async () => {\r\n        toggleLoading(true)\r\n        await onOk(form.getFieldsValue())\r\n        toggleLoading(false)\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={changeFilter}\r\n            title=\"Lọc hồ sơ\"\r\n            okButtonProps={{\r\n                loading\r\n            }}\r\n        >\r\n            <Form form={form} labelCol={{span: 6}} wrapperCol={{span:18}}>\r\n                <Form.Item label=\"Mã hồ sơ\" name=\"randomId\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Tên học viên\" name=\"ten\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Số điện thoại\" name=\"mobile\">\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default FilterModal","import React from 'react'\r\nimport {\r\n    Menu,\r\n    Button,\r\n    Dropdown,\r\n    Modal,\r\n    PageHeader,\r\n    Table,\r\n    message\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport { CheckOutlined, EllipsisOutlined, FilterOutlined, MinusOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\n\r\nimport AddStdModal from './AddStdModal'\r\nimport FilterModal from './FilterModal'\r\n// import { MARK_COMPLETED } from '../../common/ClientQueries'\r\n\r\ntype CType = {\r\n    students: Record<string,any>[]\r\n    removeStudents: (students: string[]) => void\r\n    setFilter: (filter: Record<string,any>) => void\r\n    filter: Record<string, any>\r\n    report: Record<string,any>\r\n    addStudents: (students: string[]) => void\r\n    markComp: (students: string[]) => void\r\n    type: string\r\n}\r\n\r\nconst StudentsList:React.FC<CType> = ({\r\n    students,\r\n    removeStudents,\r\n    setFilter,\r\n    filter,\r\n    report,\r\n    addStudents,\r\n    markComp,\r\n    type\r\n}) => {\r\n    const [selected, setSelected] = React.useState<string[]>([])\r\n    // const [working, setWorking] = React.useState<string>('')\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const [removeModal, toggleRemoveModal] = React.useState(false)\r\n    const [addModal, toggleAddModal] = React.useState(false)\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            render: (_: any, __: any, index: number) => <span>{index + 1}</span>\r\n        },\r\n        {\r\n            title: 'Mã hồ sơ',\r\n            dataIndex: 'randomId'\r\n        },\r\n        {\r\n            title: 'Tên',\r\n            dataIndex: 'ten'\r\n        },\r\n        {\r\n            title: 'Ngày sinh',\r\n            dataIndex: 'ngaysinh',\r\n            render: (t: string) => <span>{moment(parseFloat(t)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Số điện thoại',\r\n            dataIndex: 'mobile'\r\n        }\r\n    ]\r\n    const rowSelection = {\r\n        onChange: (keys: any) => {\r\n            setSelected(keys)\r\n            console.log(`the keys of the row is ${keys}`)\r\n        },\r\n        selectedRowKeys: selected\r\n        \r\n    }\r\n\r\n    const notFilterEmpty = () => {\r\n        const matchingKey = Object.keys(filter).find(k => filter[k] !== null)\r\n        return Boolean(matchingKey)\r\n    }\r\n    const remove = async () => {\r\n        Modal.confirm({\r\n            title: 'Loại hồ sơ khỏi báo cáo?',\r\n            content: 'Bạn sẽ không phải thêm lại thông tin cho những hồ sơ này',\r\n            onCancel: () => toggleRemoveModal(false),\r\n            visible: removeModal,\r\n            onOk: async () => {\r\n                // setWorking('removing')\r\n                await removeStudents(selected)\r\n                setSelected([])\r\n                // setWorking('')\r\n                toggleRemoveModal(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const onFilterClick = () => {\r\n        if (notFilterEmpty()) {\r\n            setFilter({\r\n                ten: null,\r\n                mobile: null,\r\n                hangbang: null,\r\n                randomId: null,\r\n                trangthai: null\r\n            })\r\n        } else {\r\n            toggleFilterModal(true)\r\n        }\r\n    }\r\n    const onCompleted = async() => {\r\n        if (!selected || selected.length === 0) {\r\n            message.error('Chọn hồ sơ trước khi thực hiện thao tác')\r\n            return\r\n        }\r\n        await markComp(selected)\r\n    }\r\n\r\n    const FunctionsDrop = () => {\r\n        if (type !==\"BC2\") {\r\n            return (\r\n                <Dropdown key=\"_men\" trigger={['click']} overlay={(\r\n                    <Menu theme=\"dark\">\r\n                    {report.status === 'PENDING' && <Menu.Item onClick={() => toggleAddModal(true)} key=\"_ađd\" icon={<PlusOutlined />}>Thêm hồ sơ</Menu.Item>}\r\n                    {report.status === 'PENDING' && <Menu.Item disabled={selected.length === 0} onClick={() => remove()} key=\"_rm\" icon={<MinusOutlined />}>Loại hồ sơ</Menu.Item>}\r\n                    <Menu.Item icon={<CheckOutlined />} onClick={() => onCompleted()}>Đánh dấu hoàn thành học</Menu.Item>\r\n                </Menu>\r\n            )}>\r\n                <Button shape=\"round\" type=\"primary\" icon={<EllipsisOutlined />} />\r\n            </Dropdown>\r\n        )\r\n        }\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            {(user.role === 'MANAGER' || user.role === 'ADMIN') && (\r\n                <PageHeader\r\n                    title=\"Danh sách hồ sơ\"\r\n                    extra={[\r\n                        <Button danger={notFilterEmpty()} shape=\"round\" key=\"_filter\" icon={<FilterOutlined />} onClick={() => onFilterClick()}>\r\n                            {notFilterEmpty() ? 'Bỏ lọc' : 'Lọc'}\r\n                        </Button>,\r\n                        FunctionsDrop(),\r\n                    ]}\r\n                />\r\n                )}\r\n            {(user.role === 'TEACHER' || user.role === 'FINANCE') && (\r\n                <PageHeader\r\n                    title=\"Danh sách hồ sơ\"\r\n                />\r\n            )}\r\n            <Table\r\n                rowKey=\"_id\"\r\n                rowSelection={rowSelection}\r\n                dataSource={students}\r\n                columns={columns}\r\n                pagination={false}\r\n            />\r\n            <FilterModal\r\n                // setFilter={setFilter}\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                onOk={(filter: Record<string, any>) => setFilter(filter)}\r\n            />\r\n            <AddStdModal\r\n                type={type}\r\n                hangbang={report.hangbang}\r\n                visible={addModal}\r\n                onCancel={() => toggleAddModal(false)}\r\n                onOk={(stds: string[]) => addStudents(stds)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsList","import React from 'react'\r\nimport {\r\n    Button,\r\n    Descriptions,\r\n    message,\r\n    PageHeader\r\n} from 'antd'\r\nimport {\r\n    useParams\r\n} from 'react-router-dom'\r\nimport {\r\n    // gql,\r\n    useLazyQuery,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport StudentsList from './StudentsList'\r\nimport {\r\n    useAuth\r\n} from '../../../context/AuthenticationContext'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nimport { trangthaibaocao } from '../../common/trangthai'\r\nimport moment from 'moment'\r\n\r\ntype ReportOneType = {\r\n    loadReport: any,\r\n    approveReport: any,\r\n    markComplete: any,\r\n    addStd: any,\r\n    removeStd: any\r\n    dataKey: string\r\n    type: string\r\n}\r\n\r\nconst SingleAttReport:React.FC<ReportOneType> = ({\r\n    loadReport,\r\n    approveReport,\r\n    markComplete,\r\n    addStd,\r\n    removeStd,\r\n    dataKey,\r\n    type\r\n}) => {\r\n    const { getUser } = useAuth()\r\n    const user = getUser()\r\n    const params:any = useParams()\r\n    const [loadR, { loading, data }] = useLazyQuery(loadReport)\r\n    const [approveR, { loading: approving }] = useMutation(approveReport, { refetchQueries: [loadReport]})\r\n    const [markCompleted] = useMutation(markComplete, { refetchQueries: [loadReport]})\r\n    const [addToR1] = useMutation(addStd, {\r\n        refetchQueries: [loadReport]\r\n    })\r\n    const [removeStds] = useMutation(removeStd, {\r\n        refetchQueries: [loadReport]\r\n    })\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        randomId: null,\r\n        ten: null,\r\n        mobile: null\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadR({\r\n                variables: {\r\n                    report: params.id,\r\n                    filter\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadR, params, filter])\r\n    // const { id } = params\r\n\r\n    const removeStudents = async (students: string[]) => {\r\n        try {\r\n            await removeStds({\r\n                variables: {\r\n                    students,\r\n                    report: data[dataKey as keyof Object].report._id\r\n                },\r\n                update: () => {}\r\n            })\r\n            message.success('Loại hồ sơ thành công')\r\n        } catch (e) {\r\n            message.error('Không thể loại hồ sơ khỏi báo cáo - vui lòng kiểm tra lại')\r\n        }\r\n    } \r\n\r\n    const addStudents = async (students: string[]) => {\r\n        try {\r\n            const { report } = data[dataKey as keyof Object]\r\n            if (!report || !report._id) {\r\n                throw new Error('Báo cáo không hợp lệ')\r\n            }\r\n            addToR1({\r\n                variables: {\r\n                    students,\r\n                    report: report._id\r\n                }\r\n            })\r\n            message.success('Thêm vào báo cáo thành công')\r\n        } catch (e) {\r\n            message.error('Không thể thêm vào báo cáo')\r\n        }\r\n    }\r\n\r\n    const markComp = async (students: string[]) => {\r\n        try {\r\n            await markCompleted({\r\n                variables: {\r\n                    students\r\n                }\r\n            })\r\n            message.success('Đã Đánh dấu hoàn thành')\r\n        } catch (e) {\r\n            message.error('không thể thực hiện được thao tác')\r\n        }\r\n    }\r\n\r\n    const approve = async () => {\r\n        if (!data || !data[dataKey as keyof Object]) {\r\n            message.error('Không thể duyệt được báo cáo')\r\n        } else {\r\n            try {\r\n                await approveR({\r\n                    variables: {\r\n                        report: data[dataKey as keyof Object].report._id\r\n                    }\r\n                })\r\n                message.success('Phê duyệt thành công')\r\n            } catch (e) {\r\n                message.error('Không thể duyệt được báo cáo')\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <LoadinCenter />\r\n    }\r\n    const extra = []\r\n    if (user.role === 'MANAGER' && type !=='BC2') {\r\n        extra.push(\r\n            (\r\n                <Button disabled={!data || data[dataKey as keyof Object].report.status === 'APPROVED'} onClick={() => approve()} loading={approving} type=\"primary\" shape=\"round\">\r\n                    <CheckOutlined />\r\n                    Phê duyệt\r\n                </Button>\r\n            )\r\n        )\r\n    }\r\n    if (data && data[dataKey as keyof Object]) {\r\n        const { report } = data[dataKey as keyof Object]\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    title={`Báo cáo: ${report.name}`}\r\n                    extra={extra}\r\n                    subTitle={`${report.desc}`}\r\n                >\r\n                    <Descriptions size=\"small\" column={3}>\r\n                        <Descriptions.Item label=\"Hạng Bằng\">{report.hangbang}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ngày tạo\">{moment(parseFloat(report.created)).format('DD/MM/YYYY')}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Trạng thái\">{trangthaibaocao[report.status as keyof Object]}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Người tạo\">{report.createdBy.name}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </PageHeader>\r\n                {/* <BasicInfor report={data[dataKey as keyof Object].report} /> */}\r\n                <StudentsList\r\n                    type={type}\r\n                    report={data[dataKey as keyof Object].report}\r\n                    filter={filter}\r\n                    setFilter={setFilter}\r\n                    students={data[dataKey as keyof Object].students}\r\n                    removeStudents={removeStudents}\r\n                    addStudents={addStudents}\r\n                    markComp={markComp}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\nexport default SingleAttReport","import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    gql,\r\n    useMutation\r\n} from '@apollo/client'\r\n\r\nconst CHANGE_PWD = gql `\r\n    mutation changePwd($currentPwd: String!, $newPwd: String!, $confirmNewPwd: String!) {\r\n        changePwd(currentPwd: $currentPwd, newPwd: $newPwd, confirmNewPwd: $confirmNewPwd)\r\n    }\r\n`\r\n\r\nconst PasswordForm = () => {\r\n    const [form] = Form.useForm()\r\n    const [changePwd, { loading }] = useMutation(CHANGE_PWD)\r\n    const onChange = async () => {\r\n        const { currentPwd, newPwd, confirmNewPwd} = form.getFieldsValue()\r\n        if (!currentPwd || !newPwd || !confirmNewPwd) {\r\n            message.error('Vui lòng điền đầy đủ thông tin')\r\n            return\r\n        }\r\n        try {\r\n            await changePwd({\r\n                variables: {\r\n                    currentPwd,\r\n                    newPwd,\r\n                    confirmNewPwd\r\n                }\r\n            })\r\n            message.success('Đổi mật khẩu thành công')\r\n            form.resetFields()\r\n        } catch (error) {\r\n            message.error('Đã có lỗi xẩy ra, vui lòng kiểm tra thông tin')\r\n            // return\r\n        }\r\n    }\r\n    return (\r\n        <Form form={form} labelCol={{span: 8}} wrapperCol={{ span: 16}}>\r\n            <Form.Item label=\"Mật khẩu cũ\" rules={[{required: true, message: 'Bắt buộc phải điền'}]} name=\"currentPwd\">\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item label=\"Mật khẩu mới\" rules={[{required: true, message: 'Bắt buộc phải điền'}]} name=\"newPwd\">\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item label=\"Nhập lại mật khẩu mới\" rules={[{required: true, message: 'Bắt buộc phải điền'}]} name=\"confirmNewPwd\">\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Button\r\n                onClick={() => onChange()}\r\n                type=\"primary\"\r\n                loading={loading}\r\n            >\r\n                Đổi mật khẩu\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\nexport default PasswordForm","import React from 'react'\r\nimport {\r\n    PageHeader,\r\n    Row,\r\n    Col\r\n} from 'antd'\r\n// import {\r\n//     useAuth\r\n// } from '../../../context/AuthenticationContext'\r\nimport PwdForm from './ChangePwdForm'\r\n\r\nconst Profile = () => {\r\n    // const { getUser } = useAuth()\r\n    // const user = getUser()\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col xs={24} sm={24} md={12} lg={8} style={{ textAlign: 'right'}}>\r\n                <PageHeader title=\"Đổi mật khẩu\" />\r\n                <PwdForm />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default Profile","import React from 'react'\r\nimport {\r\n    Button,\r\n    message,\r\n    Modal,\r\n    Space,\r\n    Table\r\n} from 'antd'\r\nimport { DeleteOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\ntype Ctype = {\r\n    users: Record<string,any>[]\r\n    deleteUser: (params: any) => void\r\n}\r\nconst roles:Record<string,string> = {\r\n    'TEACHER': 'Giáo Viên',\r\n    'ADMIN': 'NV P.Đào Tạo',\r\n    'FINANCE': 'Kế toán',\r\n    'MANAGER': 'Quản lý',\r\n    'SUPER_ADMIN': 'Quản trị viên',\r\n}\r\nconst UsersList:React.FC<Ctype> = ({\r\n    users,\r\n    deleteUser\r\n}) => {\r\n    const [confirmModal, toggleConfirmModal] = React.useState(false)\r\n    const [deleting, toggleDeleting] = React.useState(false)\r\n    const confirmDelete = async (name: string,_id: string) => {\r\n        Modal.confirm({\r\n            title:'Xóa tài khoản người dùng',\r\n            content: `Bạn có muốn khóa tài khoản $Ơname`,\r\n            visible: confirmModal,\r\n            onCancel: () => toggleConfirmModal(false),\r\n            onOk: async () => {\r\n                try {\r\n                    toggleDeleting(true)\r\n                    await deleteUser({\r\n                        variables: {\r\n                            _id\r\n                        }\r\n                    })\r\n                    message.success(\"Tài khoản đã được xóa\")\r\n                    toggleDeleting(false)\r\n                } catch (error) {\r\n                    message.error('Không thể xóa được tài khoản')\r\n                }\r\n            },\r\n            okButtonProps: {\r\n                danger: true,\r\n                loading: deleting\r\n            }\r\n        })\r\n    }\r\n    const columns = [\r\n        {\r\n            title: \"Tên\",\r\n            dataIndex: 'name',\r\n            render: (text: string, record: any) => {\r\n                return (\r\n                    <Space>\r\n                        {record.disabled && <LockOutlined style={{ color: 'red'}} />}\r\n                        <Link to={`/users/${record._id}`}>\r\n                            {text}\r\n                        </Link>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Email/phone',\r\n            dataIndex: 'email'\r\n        },\r\n        {\r\n            title: 'Vai trò / quyền',\r\n            dataIndex: 'role',\r\n            render: (text: string) => <span>{roles[text]}</span>\r\n        },\r\n        {\r\n            title: 'Xóa',\r\n            render: (_text: string, record: any) => <Button onClick={() => confirmDelete(record.name, record._id)} icon={<DeleteOutlined />} danger type=\"text\" />\r\n        }\r\n    ]\r\n    return (\r\n        <Table\r\n            dataSource={users}\r\n            columns ={columns}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UsersList","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: () => void\r\n    createU: (user: Record<string,any>) => void\r\n}\r\n\r\nexport const roles = {\r\n    'TEACHER': 'Giáo viên',\r\n    'ADMIN': 'Đào tạo',\r\n    'FINANCE': 'Kế toán',\r\n    'MANAGER': 'Quản lý - Giám đốc',\r\n    'SUPER_ADMIN': 'Quạn trị hệ thống'\r\n}\r\nconst { Option } = Select\r\nconst CreateUserModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    createU\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [loading, toggleLoading] = React.useState(false)\r\n    const createUser = async () => {\r\n        toggleLoading(true)\r\n        const data = form.getFieldsValue()\r\n        await createU(data)\r\n        toggleLoading(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={createUser}\r\n            title=\"Tạo người dùng mới\"\r\n            okButtonProps={{ loading }}\r\n        >\r\n            <Form form={form} labelCol={{span: 8}} wrapperCol={{span: 16}}>\r\n                <Form.Item label=\"Tên người dùng\" name=\"name\" rules={[{required: true, message: 'Thông tin bắt buộc'}]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email/SDT\" name=\"email\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item label=\"Nhập lại mật khẩu\" name=\"confirmPassword\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item label=\"Vai trò, chức năng\" name=\"role\" rules={[{ required: true, message: 'Thông tin bắt buộc' }]}>\r\n                    <Select>\r\n                        {Object.keys(roles).map(k => (\r\n                            <Option key={k} value={k}>{roles[k as keyof Object]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CreateUserModal","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Select\r\n} from 'antd'\r\nimport {\r\n    roles\r\n} from './CreateUserModal'\r\n\r\nconst { Option } = Select\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk?: () => void\r\n    filter?: Record<string,any>\r\n    setFilter: (filter: Record<string,any>) => void\r\n}\r\n\r\nconst FilterModal:React.FC<MType> =({\r\n    visible,\r\n    onCancel,\r\n    onOk,\r\n    filter,\r\n    setFilter\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const confirmFilter = () => {\r\n        setFilter(form.getFieldsValue())\r\n        onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            onOk={confirmFilter}\r\n            title=\"Tìm kiếm người dùng\"\r\n        >\r\n            <Form form={form} labelCol={{ span: 6}} wrapperCol={{ span: 18}}>\r\n                <Form.Item name=\"name\" label=\"Tên người dùng\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"email\" label=\"Email / SDT\">\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"role\" label=\"Vai trò\">\r\n                    <Select>\r\n                        {Object.keys(roles).map(k => (\r\n                            <Option key={k} value={k}>{roles[k as keyof Object]}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default FilterModal","import React from 'react'\r\nimport {\r\n    Button,\r\n    message,\r\n    PageHeader,\r\n    Tooltip\r\n} from 'antd'\r\nimport { CloseOutlined, PlusOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport CreateUserModal from './CreateUserModal'\r\nimport FilterModal from './FilterModal'\r\n\r\ntype CType = {\r\n    createUser: (user: Record<string,any>) => void\r\n    setFilter: (filter: Record<string,any>) => void\r\n    filter: Record<string, any>\r\n}\r\n\r\nconst SettingHeader:React.FC<CType> = ({\r\n    createUser,\r\n    setFilter,\r\n    filter\r\n}) => {\r\n    const [createModal, toggleCreateModal] = React.useState(false)\r\n    const [filterModal, toggleFilterModal] = React.useState(false)\r\n    const createU = async (user: Record<string,any>) => {\r\n        try {\r\n            await createUser({\r\n                variables: {\r\n                    userInput: user\r\n                }\r\n            })\r\n            message.success('Tạo người dùng thành công')\r\n            toggleCreateModal(false)\r\n        } catch (e) {\r\n            message.error('Không thể tạo người dùng mới. Vui lòng kiểm tra lại thông tin')\r\n        }\r\n    }\r\n\r\n    const isFilterEmpty = () => {\r\n        return Object.values(filter).every(f => f === null)\r\n    }\r\n\r\n    const onFilterClick = () => {\r\n        if (isFilterEmpty()) {\r\n            toggleFilterModal(true)\r\n        } else {\r\n            setFilter({\r\n                name: null,\r\n                email: null,\r\n                role: null\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Danh sách người dùng\"\r\n                extra={[\r\n                    <Tooltip title=\"Thêm người dùng\" key=\"1\">\r\n                        <Button onClick={() => toggleCreateModal(true)} type=\"primary\" shape=\"round\" icon={<PlusOutlined />} />\r\n                    </Tooltip>,\r\n                    <Tooltip title={isFilterEmpty() ? 'Tìm kiếm': 'Bỏ tìm kiếm'} key=\"2\">\r\n                        <Button\r\n                            onClick={() => onFilterClick()}\r\n                            type=\"text\"\r\n                            icon={isFilterEmpty() ? <SearchOutlined /> : <CloseOutlined />}\r\n                        />\r\n                    </Tooltip>\r\n                ]} \r\n                />\r\n            <CreateUserModal\r\n                createU={createU}\r\n                visible={createModal}\r\n                onCancel={() => toggleCreateModal(false)}\r\n                onOk={() => toggleCreateModal(false)}\r\n            />\r\n            <FilterModal\r\n                visible={filterModal}\r\n                onCancel={() => toggleFilterModal(false)}\r\n                setFilter={setFilter}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingHeader","import React from 'react'\r\nimport {\r\n    gql,\r\n    useLazyQuery,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport UsersList from './MainComps/UsersList'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport Header from './MainComps/Header'\r\n// import { Modal } from 'antd'\r\n\r\nconst LOAD_USERS = gql `\r\n    query loadUsers($filter: UserFilter, $page: Int, $limit: Int) {\r\n        loadUsers(filter: $filter, page: $page, limit: $limit) {\r\n            _id\r\n            name\r\n            email\r\n            role\r\n            disabled\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\nconst CREATE_USER = gql `\r\n    mutation createUser($userInput: UserInput) {\r\n        createUser(userInput: $userInput) {\r\n            name\r\n        }\r\n    }\r\n`\r\nconst DELETE_USER = gql`\r\n    mutation deleteUser($_id: String!) {\r\n        deleteUser(_id: $_id)\r\n    }\r\n`\r\nconst UserMgt = () => {\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        name: null,\r\n        email: null,\r\n        role: null\r\n    })\r\n    const limit = 100\r\n    const [loadUsers, { loading, data: loadUsersR }] = useLazyQuery(LOAD_USERS)\r\n    const [createUser] = useMutation(CREATE_USER, {refetchQueries: [LOAD_USERS]})\r\n    const [deleteUser] = useMutation(DELETE_USER, { refetchQueries: [LOAD_USERS]})\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadUsers({\r\n                variables: {\r\n                    filter,\r\n                    page: 1,\r\n                    limit\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadUsers, filter])\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                filter={filter}\r\n                createUser={createUser}\r\n                setFilter={setFilter}\r\n            />\r\n            {loading && (\r\n                <LoadinCenter />\r\n            )}\r\n            {!loading && loadUsersR && (\r\n                <UsersList\r\n                    users={loadUsersR.loadUsers}\r\n                    deleteUser={deleteUser}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default UserMgt","import React from 'react'\r\nimport {\r\n    Descriptions\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst roles: Record<string, string> = {\r\n    'TEACHER': 'Giáo Viên',\r\n    'ADMIN': 'NV P.Đào Tạo',\r\n    'FINANCE': 'Kế toán',\r\n    'MANAGER': 'Quản lý',\r\n    'SUPER_ADMIN': 'Quản trị viên',\r\n}\r\n\r\ntype CType = {\r\n    user: any\r\n}\r\nconst BasicInfor: React.FC<CType> = ({\r\n    user\r\n}) => {\r\n    return (\r\n        <Descriptions title=\"Thông tin người dùng\">\r\n            <Descriptions.Item label=\"Tên\">\r\n                <strong>{user.name}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Tên đăng nhập/ email/ SDT\">\r\n                <strong>{user.email}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Vai trò\">\r\n                <strong>{roles[user.role]}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Trạng thái\">\r\n                <strong>{user.disabled ? 'Đã khóa' : 'Đang hoạt động'}</strong>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Ngày tạo\">\r\n                <strong>{moment(parseFloat(user.created)).format('DD/MM/YYYY')}</strong>\r\n            </Descriptions.Item>\r\n        </Descriptions>\r\n    )\r\n}\r\nexport default BasicInfor ","import React from 'react'\r\nimport {\r\n    Modal,\r\n    Form,\r\n    Input\r\n} from 'antd'\r\n\r\ntype MType = {\r\n    visible: boolean\r\n    onCancel: () => void\r\n    onOk: (password: string, confirmPassword: string) => void\r\n}\r\n\r\nconst ResetPwdModal:React.FC<MType> = ({\r\n    visible,\r\n    onCancel,\r\n    onOk\r\n}) => {\r\n    const [form] = Form.useForm()\r\n    const [loading, toggleLoading] = React.useState(false)\r\n    const setPwd = async () => {\r\n        toggleLoading(true)\r\n        const {password, confirmPassword}  = form.getFieldsValue()\r\n        await onOk(password, confirmPassword)\r\n        toggleLoading(false)\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            onCancel={onCancel}\r\n            title=\"Đặt lại mật khẩu người dùng\"\r\n            okButtonProps={{ loading}}\r\n            onOk={() => setPwd()}\r\n        >\r\n            <Form form={form} labelCol={{ span: 8}} wrapperCol={{ span: 16}}>\r\n                <Form.Item label=\"Mật khẩu mới\" name=\"password\" rules={[{required: true, message: 'Bắt buộc phải có'}, {min: 6, message: 'Tối thiểu 6 ký tự'}]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item label=\"Nhập lai Mật khẩu mới\" name=\"confirmPassword\" rules={[{required: true, message: 'Bắt buộc phải có'}, {min: 6, message: 'Tối thiểu 6 ký tự'}]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ResetPwdModal","import React from 'react'\r\nimport {\r\n    Button,\r\n    PageHeader,\r\n    Tooltip,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport {\r\n    gql,\r\n    useLazyQuery,\r\n    useMutation\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport UserInfo from './UserInfo'\r\nimport { KeyOutlined, LockOutlined, UnlockOutlined } from '@ant-design/icons'\r\nimport ResetPwdModal from './ResetPwdModal'\r\n\r\nconst LOAD_USER = gql `\r\n    query loadUser($_id: String!) {\r\n        loadUser(_id: $_id) {\r\n            _id\r\n            disabled\r\n            name\r\n            email\r\n            role\r\n            createdBy\r\n            created\r\n            profile {\r\n                avatar\r\n            }\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\nconst LOCK_USER = gql `\r\n    mutation disableUser($_id: String!, $disabled: Boolean) {\r\n        disableUser(_id: $_id, disabled: $disabled) {\r\n             _id\r\n            disabled\r\n            name\r\n            email\r\n            role\r\n            createdBy\r\n            created\r\n            profile {\r\n                avatar\r\n            }\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\nconst RESET_PWD = gql `\r\n    mutation setPwd($_id: String!, $password: String!, $confirmPassword: String!) {\r\n        setPwd(_id: $_id, password: $password, confirmPassword: $confirmPassword) {\r\n             _id\r\n            disabled\r\n            name\r\n            email\r\n            role\r\n            createdBy\r\n            created\r\n            profile {\r\n                avatar\r\n            }\r\n            shouldChangePwd\r\n        }\r\n    }\r\n`\r\n\r\nconst SingleUser = () => {\r\n    const params:any = useParams()\r\n    const { id } = params\r\n    const history = useHistory()\r\n    const [loadUser, { loading, data }] = useLazyQuery(LOAD_USER)\r\n    const [disableUser] = useMutation(LOCK_USER)\r\n    const [resetPwd] = useMutation(RESET_PWD)\r\n    const [confirmModal, toggleConfirmModal] = React.useState(false)\r\n    const [pwdModal, togglePwdModal] = React.useState(false)\r\n    // const [deleteUser] = useMutation(DELETE_USER, { refetchQueries: [LOAD_USER]})\r\n    \r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadUser({\r\n                variables: {\r\n                    _id: id\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [id, loadUser])\r\n\r\n    const confirmLock = async (disabled: boolean, title: string, content: string) => {\r\n        Modal.confirm({\r\n            title,\r\n            content,\r\n            visible: confirmModal,\r\n            onCancel: () => toggleConfirmModal(false),\r\n            onOk: () => {\r\n                disableUser({\r\n                    variables: {\r\n                        _id: data.loadUser._id,\r\n                        disabled\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const updatePwd = async (password: string, confirmPassword: string) => {\r\n        try {\r\n            await resetPwd({\r\n                variables: {\r\n                    _id: id,\r\n                    password,\r\n                    confirmPassword\r\n                }\r\n            })\r\n            message.success('Đặt lại mật khẩu thành công')\r\n            togglePwdModal(false)\r\n        } catch (error) {\r\n            message.error('Đặt lại mật khẩu không thành công')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <LoadinCenter />\r\n            )}\r\n            {data && data.loadUser && (\r\n                <div>\r\n                    <PageHeader\r\n                        onBack={() => history.push('/users')}\r\n                        title=\"Thông tin người dùng\"\r\n                        extra={[\r\n                            <Tooltip title=\"Khóa tài khoản\" id=\"1\">\r\n                                {!data.loadUser.disabled ?\r\n                                    <Button onClick={() => confirmLock(!data.loadUser.disabled, 'Khóa tài khoản', `Bạn có muốn khóa tài khoản người dùng ${data.loadUser.name} `)} danger type=\"text\" icon={<LockOutlined />} />\r\n                                    :\r\n                                    <Button onClick={() => confirmLock(!data.loadUser.disabled, 'Mở khóa tài khoản', `Bạn có muốn mở khóa tài khoản người dùng ${data.loadUser.name} `)} type=\"text\" icon={<UnlockOutlined />} />\r\n                                }\r\n                            </Tooltip>,\r\n                            <Tooltip title=\"Đặt lại mật khẩu\" id=\"2\">\r\n                                <Button onClick={() => togglePwdModal(true)} type=\"text\" icon={<KeyOutlined />} />\r\n                            </Tooltip>\r\n                        ]}\r\n                    />\r\n                    <UserInfo\r\n                        user={data.loadUser}\r\n                    />\r\n                    <ResetPwdModal\r\n                        visible={pwdModal}\r\n                        onCancel={() => togglePwdModal(false)}\r\n                        onOk={updatePwd}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default SingleUser","import React from 'react'\r\nimport {\r\n    Table\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport {\r\n    numberWithCommas\r\n} from '../../../../Utils/math'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst reasons: Record<string,any> = {\r\n    'TT1': 'Thanh toán tiền đợt 1',\r\n    'TT2': 'Thanh toán tiền đợt 2',\r\n    'TLLT': 'Thanh toán tiền thi lại Lý thuyết',\r\n    'TLSH': 'Thanh toán tiền thi lại Sa hình',\r\n    'TLDT': \"Thanh toán tiền thi lại Đường trường\",\r\n    'OTHER': 'Thanh toán tiền khác',\r\n    'REFUND': \"Hoàn tiền - rút hồ sơ\"\r\n}\r\n\r\ntype RLType = {\r\n    records: {\r\n        totalRecords: number\r\n        totalAmount: number\r\n        records: Record<string,any>[]\r\n    }\r\n    filter: Record<string,any>\r\n    setFilter: (filter: Record<string,any>) => void\r\n}\r\n\r\nconst RecordsList:React.FC<RLType> = ({\r\n    records,\r\n    filter,\r\n    setFilter\r\n}) => {\r\n    const columns = [\r\n        {\r\n            title: 'Mã hồ sơ',\r\n            dataIndex: ['student','randomId'],\r\n        },\r\n        {\r\n            title: 'Tên học viên',\r\n            dataIndex: ['student','ten'],\r\n            render: (text: string, record: any) => {\r\n                return (\r\n                    <Link to={`/std/${record.student.randomId}`}>{text}</Link>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Số điện thoại',\r\n            dataIndex: ['student', 'mobile']\r\n        },\r\n        {\r\n            title: 'Ngày',\r\n            dataIndex: 'createdAt',\r\n            render: (text: string) => <span>{moment(parseFloat(text)).format('DD/MM/YYYY')}</span>\r\n        },\r\n        {\r\n            title: 'Tiền',\r\n            dataIndex: 'amount',\r\n            render: (text: string) => <strong style={{ color: parseFloat(text) < 0 ? 'red': 'inherit'}}>{numberWithCommas(text)}</strong>\r\n        },\r\n        {\r\n            title: 'Lý do',\r\n            dataIndex: 'reason',\r\n            render: (text: string) => <span>{reasons[text]}</span>\r\n        }\r\n    ]\r\n    return (\r\n        <div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={records.records}\r\n                pagination={{\r\n                    pageSize:100,\r\n                    total: records.totalRecords,\r\n                    onChange: (page: number) => {\r\n                        setFilter({\r\n                            ...filter,\r\n                            page\r\n                        })\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordsList","import React from 'react'\r\nimport {\r\n    PageHeader,\r\n    DatePicker,\r\n    \r\n} from 'antd'\r\nimport moment, { Moment } from 'moment'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\ntype HType = {\r\n    filter: Record<string, any>\r\n    setFilter: (filter: Record<string, any>) => void\r\n}\r\n\r\nconst RecordHeader:React.FC<HType> = ({\r\n    filter,\r\n    setFilter\r\n}) => {\r\n    const [start, setStart] = React.useState<Moment|null>(null)\r\n    const [end, setEnd] = React.useState<Moment|null>(null)\r\n\r\n    const onDateChange = (d: any) => {\r\n        const [start, end] = d\r\n        console.log('start', start)\r\n        setStart(start)\r\n        console.log('end', end)\r\n        setEnd(end)\r\n    }\r\n\r\n    const onConfirm = (open: boolean) => {\r\n        console.log(open)\r\n        // console.log('start:', start)\r\n        // console.log('end:', end)\r\n        if (!open) {\r\n            setFilter({\r\n                ...filter,\r\n                start: start?.startOf('day'),\r\n                end: end?.endOf('day')\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <PageHeader\r\n            title=\"Báo cáo thu chi\"\r\n            extra={[\r\n                <span key=\"_label\">Chọn khoảng thời gian</span>,\r\n                <RangePicker\r\n                    key=\"_rp\"\r\n                    format=\"DD/MM/YYYY\"\r\n                    defaultPickerValue={[moment().startOf('month'), moment().endOf('month')]}\r\n                    value={[start, end]}\r\n                    onChange={onDateChange}\r\n                    onOpenChange={onConfirm}\r\n                />\r\n            ]}\r\n        />\r\n    )\r\n}\r\nexport default RecordHeader","import React from 'react'\r\nimport {\r\n    PageHeader\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport {\r\n    useLazyQuery\r\n} from '@apollo/client'\r\nimport LoadinCenter from '../../common/LoadingCenter'\r\nimport {\r\n    LOAD_RECORDS\r\n} from '../../common/ClientQueries'\r\nimport RecordsList from './comps/RecordsList'\r\nimport RecordHeader from './comps/RecordsHeader'\r\n\r\n\r\nconst Report = () => {\r\n    const limit = 100\r\n    const [loadRecords, { loading, data }] = useLazyQuery(LOAD_RECORDS)\r\n    const [filter, setFilter] = React.useState<Record<string,any>>({\r\n        start: moment().startOf('month'),\r\n        end: moment().endOf('month'),\r\n        page: 1,\r\n        limit,\r\n        ten: '',\r\n        randomId: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const load = async () => {\r\n            await loadRecords({\r\n                variables: {\r\n                    filter\r\n                }\r\n            })\r\n        }\r\n        load()\r\n    }, [loadRecords, filter])\r\n    return (\r\n        <div>\r\n            <RecordHeader\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n            />\r\n            {/* {loading && (<LoadinCenter />)} */}\r\n            {!loading && data && data.loadRecords && (\r\n                <div>\r\n                    <RecordsList\r\n                        records={data.loadRecords}\r\n                        filter={filter}\r\n                        setFilter={setFilter}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default Report","import React from 'react'\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  Button,\r\n  Dropdown\r\n} from 'antd'\r\nimport {\r\n  LogoutOutlined,\r\n  MoneyCollectOutlined,\r\n  OrderedListOutlined,\r\n  SettingOutlined,\r\n  SnippetsOutlined,\r\n  SolutionOutlined,\r\n  UsergroupAddOutlined,\r\n  UserOutlined\r\n} from '@ant-design/icons'\r\nimport {\r\n  useLazyQuery,\r\n  gql\r\n} from '@apollo/client'\r\nimport {\r\n  User,\r\n  useAuth\r\n} from '../../context/AuthenticationContext'\r\nimport Main from './Main'\r\nimport {\r\n  useHistory,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  // useLocation\r\n} from 'react-router-dom'\r\nimport './home.css'\r\nimport {\r\n  LOAD_A_REPORT,\r\n  CREATE_A_REPORT,\r\n  APPROVE_R1,\r\n  MOVE_TO_R1,\r\n  REMOVE_FROM_REPORT,\r\n  LOAD_SINGLE_REPORT,\r\n  MARK_COMPLETED,\r\n  LOAD_B_REPORTS,\r\n  CREATE_BREPORT,\r\n  LOAD_SINGLE_B_REPORT,\r\n  MOVE_TO_R2,\r\n  APPROVE_B_REPORT,\r\n} from '../common/ClientQueries'\r\nimport SingleStudent from './SingleStudent'\r\nimport ReportOnes from './ReportOnes'\r\nimport SingleAttReport from './SingleReportOne'\r\nimport Profile from './Profile'\r\nimport UserMgt from './UserMgt'\r\nimport SingleUser from './SingleUser'\r\nimport Report from './Report'\r\n\r\nconst {\r\n  // Sider,\r\n  Content,\r\n  Header\r\n} = Layout\r\n\r\nconst GET_USER = gql`\r\n  query me {\r\n    me{\r\n      _id\r\n      role\r\n      email\r\n      name\r\n      shouldChangePwd\r\n      profile {\r\n        avatar\r\n      }\r\n    }\r\n  }\r\n`\r\n// \r\nfunction Home() {\r\n  console.log('re-rendering')\r\n  const { setUser } = useAuth()\r\n  const history = useHistory()\r\n  const [loadUser, { loading, data, error }] = useLazyQuery(GET_USER, { onCompleted: (data: any) => {\r\n    const { me } = data\r\n    setUser(me as User)\r\n  }})\r\n  // const [sider, setSider] = React.useState(false);\r\n  const { logout } = useAuth()\r\n  // const location = useLocation()\r\n\r\n  React.useEffect(() => {\r\n    const load = async () => {\r\n      await  loadUser()\r\n      // if (data) {\r\n      //   const { me } = data\r\n      //   setUser(me as User)\r\n      // }\r\n    }\r\n    load()\r\n  }, [loadUser, setUser])\r\n  \r\n  const handleLogout = () => {\r\n    logout()\r\n    history.push('/login')\r\n  }\r\n  \r\n  // const onCollapse = (collapse: boolean) => setSider(collapse)\r\n\r\n  const menu = (\r\n    <Menu theme=\"dark\">\r\n      <Menu.Item icon={<UserOutlined />}>\r\n        <Link to=\"/profile\">\r\n          Đổi mật khẩu\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item icon={<LogoutOutlined />} onClick={() => handleLogout()}>Đăng xuất</Menu.Item>\r\n    </Menu>\r\n  )\r\n  \r\n  if (error) {\r\n    history.push('/login')\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <span>loading...</span>\r\n    )\r\n  }\r\n  if (!loading && !error && data) {\r\n    return (\r\n      <Layout className=\"homeContainer\">\r\n        <Header className=\"homeHeader\">\r\n          <div  style={{ flexGrow: 1 }} >\r\n            <Menu style={{fontSize: '16px'}} theme=\"dark\" mode=\"horizontal\">\r\n              <Menu.Item key=\"one\" icon={<SnippetsOutlined style={{fontSize: '16px'}} />}>\r\n                <Link to=\"/\">\r\n                  Hồ sơ\r\n                </Link>\r\n              </Menu.Item>\r\n              {data.me && (data.me.role === 'ADMIN' || data.me.role === 'MANAGER' || data.me.role === 'SUPER_ADMIN') && (\r\n                <Menu.Item key=\"two\" icon={<OrderedListOutlined style={{ fontSize: '16px' }} />}>\r\n                  <Link to=\"/rp1\">\r\n                    Báo cáo 1\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n              {data.me && (data.me.role === 'ADMIN' || data.me.role === 'MANAGER' || data.me.role === 'SUPER_ADMIN') && (\r\n                <Menu.Item key=\"three\" icon={<SolutionOutlined style={{ fontSize: '16px' }} />}>\r\n                  <Link to=\"/rp2\">\r\n                    Báo cáo 2\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n              {data.me && (data.me.role === 'SUPER_ADMIN') && (\r\n                <Menu.SubMenu title=\"Hệ thống\" icon={<SettingOutlined />}>\r\n                  <Menu.Item key=\"four\" icon={<UsergroupAddOutlined />}>\r\n                    <Link to=\"/users\">\r\n                      Người dùng\r\n                    </Link>\r\n                  </Menu.Item>\r\n                </Menu.SubMenu>\r\n              )}\r\n              {data.me && (data.me.role === 'MANAGER' || data.me.role === 'FINANCE') && (\r\n                <Menu.Item key=\"_five\" icon={<MoneyCollectOutlined />}>\r\n                  <Link to=\"/report\">\r\n                    Doanh Thu\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n          <Dropdown trigger={['click']} overlay={menu}>\r\n            <Button shape=\"round\" >{data.me.name}</Button>\r\n          </Dropdown>\r\n        </Header>\r\n        <Content className=\"homeContent\">\r\n          <Switch>\r\n            <Route path=\"/std/:id\" exact>\r\n              <SingleStudent />\r\n            </Route>\r\n            <Route path=\"/rp1\" exact>\r\n              <ReportOnes\r\n                type=\"BC1\"\r\n                title=\"Danh sách báo cáo 1\"\r\n                createQuery={{\r\n                  reportKey: 'loadAReport',\r\n                  query:CREATE_A_REPORT\r\n                }}\r\n                loadQuery={{\r\n                  reportKey: 'loadAReport',\r\n                  query: LOAD_A_REPORT\r\n                }}\r\n              />\r\n            </Route>\r\n            <Route path=\"/rp1/:id\" exact>\r\n              <SingleAttReport\r\n                type=\"BC1\"\r\n                dataKey=\"loadSingleAttReport\"\r\n                loadReport={LOAD_SINGLE_REPORT}\r\n                approveReport={APPROVE_R1}\r\n                markComplete={MARK_COMPLETED}\r\n                addStd={MOVE_TO_R1}\r\n                removeStd={REMOVE_FROM_REPORT}\r\n              />\r\n            </Route>\r\n            <Route path=\"/rp2\" exact>\r\n              <ReportOnes\r\n                  type=\"BC2\"\r\n                  title=\"Danh sách báo cáo 2\"\r\n                  createQuery={{\r\n                  reportKey: 'loadAReports',\r\n                  query: CREATE_BREPORT\r\n                }}\r\n                loadQuery={{\r\n                  reportKey: 'loadBreports',\r\n                  query: LOAD_B_REPORTS\r\n                }}/>\r\n            </Route>\r\n            <Route path=\"/rp2/:id\" exact>\r\n              <SingleAttReport\r\n                type=\"BC2\"\r\n                dataKey=\"loadSingleBReport\"\r\n                loadReport={LOAD_SINGLE_B_REPORT}\r\n                approveReport={APPROVE_B_REPORT}\r\n                markComplete={MARK_COMPLETED}\r\n                addStd={MOVE_TO_R2}\r\n                removeStd={REMOVE_FROM_REPORT}\r\n              />\r\n            </Route>\r\n            <Route path=\"/profile\" exact>\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/users\" exact>\r\n              <UserMgt />\r\n            </Route>\r\n            <Route path=\"/users/:id\" exact>\r\n              <SingleUser />\r\n            </Route>\r\n            <Route path=\"/report\" exact>\r\n              <Report />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Main />\r\n            </Route>\r\n          </Switch>\r\n        </Content>\r\n      </Layout>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default Home\r\n\r\n","import React from 'react'\r\nimport {\r\n  gql,\r\n  useMutation,\r\n} from '@apollo/client'\r\nimport {\r\n  useAuth\r\n} from '../../context/AuthenticationContext'\r\nimport {\r\n  useHistory,\r\n} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  message\r\n} from 'antd'\r\nimport './LoginForm.css'\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      user {\r\n        _id\r\n        role\r\n        email\r\n        name\r\n      }\r\n      token\r\n      tokenExpiration\r\n    }\r\n  }\r\n`\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory()\r\n  const { setToken } = useAuth()\r\n  // const [passwordVisible, togglePasswordVisible] = React.useState(false)\r\n  const [login, { loading, error }] = useMutation(LOGIN)\r\n  // const handleClickShowPassword = () => togglePasswordVisible(!passwordVisible)\r\n  const [form] = Form.useForm()\r\n  \r\n  const onLogin = async (values: any) => {\r\n    await login({\r\n      variables: {\r\n        ...values\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (!res) {\r\n        message.error('Vui long kiem tra lai sdt/mk')\r\n      }\r\n      if (error) {\r\n        message.error('Đã có lỗi xẩy ra trong quá trình đăng nhập, vui lòng kiểm tra lại thông tin tài khoản')\r\n      }\r\n      const { data: { login: { token } } } = res\r\n      setToken(token)\r\n      history.push('/')\r\n    })\r\n    .catch(err => {\r\n      message.error('Đã có lỗi xẩy ra trong quá trình đăng nhập, vui lòng kiểm tra lại thông tin tài khoản')\r\n    })\r\n  }\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col xs={24} sm={12} lg={6}>\r\n        <Form onFinish={onLogin} className=\"loginForm\" form={form} layout=\"vertical\">\r\n          <Form.Item label=\"Email/SDT\" name=\"email\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"password\" label=\"password\">\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" loading={loading} htmlType=\"submit\">Login</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default LoginForm","import React from 'react'\r\nimport LoginForm from './LoginForm'\r\n\r\nfunction Login() {\r\n  return (\r\n    <div data-testid=\"login-container\">\r\n      <LoginForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport \"antd/dist/antd.css\"\r\nimport './App.css';\r\nimport AuthProvider from './context/AuthenticationContext';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport ProtectedRoute from './Utils/ProtectedRoute';\r\nimport Home from './components/Home'\r\nimport Login from './components/Login'\r\n\r\nexport interface AState {\r\n  people: {\r\n    name: String,\r\n    age: number,\r\n    url: string,\r\n    note: string\r\n  }[]\r\n}\r\nfunction App() {\r\n  // const [people, setPeople] = React.useState<AState['people']>([])\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <ProtectedRoute path=\"/\">\r\n            <Home />\r\n          </ProtectedRoute>\r\n        </Switch>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ApolloClient, InMemoryCache, ApolloLink, from } from '@apollo/client'\r\n// import { createUploadLink } from 'apollo-upload-client'\r\nconst { createUploadLink } = require('apollo-upload-client')\r\n\r\nconst uri = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_API : process.env.REACT_APP_PROD_API\r\nconst httpLink = new createUploadLink({ uri })\r\n// const httpLink = new createUploadLink()\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({headers = {} }) => ({\r\n    headers: {\r\n      ...headers,\r\n      'x-token': localStorage.getItem('ACCESS_TOKEN') || null\r\n    }\r\n  }));\r\n  return forward(operation);\r\n});\r\nexport const client = new ApolloClient({\r\n  // uri: 'https://countries-274616.ew.r.appspot.com/',\r\n  // uri: 'http://localhost:3000',\r\n  // headers: {\r\n  //   'x-token': localStorage.getItem('ACCESS_TOKEN') || ''\r\n  cache: new InMemoryCache({\r\n    typePolicies: {\r\n      BasicPurchase: {\r\n        keyFields: ['_id']\r\n      },\r\n      PurchaseList: {\r\n        keyFields: ['__typename']\r\n      }\r\n    }\r\n  }),\r\n  link: from([\r\n    authMiddleware,\r\n    httpLink\r\n  ])\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloProvider } from '@apollo/client';\r\n\r\nimport {\r\n  client\r\n} from './Utils/ApolloClient'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}